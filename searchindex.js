Search.setIndex({"docnames": ["docs/data_classes/ivy.data_classes.array", "docs/data_classes/ivy.data_classes.container", "docs/framework/ivy.stateful", "docs/framework/stateful/ivy.stateful.activations", "docs/framework/stateful/ivy.stateful.converters", "docs/framework/stateful/ivy.stateful.helpers", "docs/framework/stateful/ivy.stateful.initializers", "docs/framework/stateful/ivy.stateful.layers", "docs/framework/stateful/ivy.stateful.module", "docs/framework/stateful/ivy.stateful.norms", "docs/framework/stateful/ivy.stateful.optimizers", "docs/framework/stateful/ivy.stateful.sequential", "docs/functional/ivy.functional.ivy", "docs/functional/ivy/ivy.functional.ivy.activations", "docs/functional/ivy/ivy.functional.ivy.constants", "docs/functional/ivy/ivy.functional.ivy.control_flow_ops", "docs/functional/ivy/ivy.functional.ivy.creation", "docs/functional/ivy/ivy.functional.ivy.data_type", "docs/functional/ivy/ivy.functional.ivy.device", "docs/functional/ivy/ivy.functional.ivy.elementwise", "docs/functional/ivy/ivy.functional.ivy.experimental", "docs/functional/ivy/ivy.functional.ivy.general", "docs/functional/ivy/ivy.functional.ivy.gradients", "docs/functional/ivy/ivy.functional.ivy.layers", "docs/functional/ivy/ivy.functional.ivy.linear_algebra", "docs/functional/ivy/ivy.functional.ivy.losses", "docs/functional/ivy/ivy.functional.ivy.manipulation", "docs/functional/ivy/ivy.functional.ivy.meta", "docs/functional/ivy/ivy.functional.ivy.nest", "docs/functional/ivy/ivy.functional.ivy.norms", "docs/functional/ivy/ivy.functional.ivy.random", "docs/functional/ivy/ivy.functional.ivy.searching", "docs/functional/ivy/ivy.functional.ivy.set", "docs/functional/ivy/ivy.functional.ivy.sorting", "docs/functional/ivy/ivy.functional.ivy.statistical", "docs/functional/ivy/ivy.functional.ivy.utility", "docs/nested-array/ivy.nested_array", "docs/nested-array/nested_array/ivy.nested_array.nested_array", "docs/testing/helpers/ivy_tests.test_ivy.helpers.assertions", "docs/testing/helpers/ivy_tests.test_ivy.helpers.available_frameworks", "docs/testing/helpers/ivy_tests.test_ivy.helpers.function_testing", "docs/testing/helpers/ivy_tests.test_ivy.helpers.globals", "docs/testing/helpers/ivy_tests.test_ivy.helpers.hypothesis_helpers", "docs/testing/helpers/ivy_tests.test_ivy.helpers.structs", "docs/testing/helpers/ivy_tests.test_ivy.helpers.test_parameter_flags", "docs/testing/helpers/ivy_tests.test_ivy.helpers.testing_helpers", "docs/testing/ivy_tests.test_ivy.helpers", "docs/utilities/ivy.utils", "docs/utilities/utils/ivy.utils.assertions", "docs/utilities/utils/ivy.utils.backend", "docs/utilities/utils/ivy.utils.dynamic_import", "docs/utilities/utils/ivy.utils.exceptions", "docs/utilities/utils/ivy.utils.inspection", "docs/utilities/utils/ivy.utils.verbosity", "index", "overview/background", "overview/background/ml_explosion", "overview/background/standardization", "overview/background/why_unify", "overview/contributing", "overview/contributing/applied_libraries", "overview/contributing/building_the_docs", "overview/contributing/helpful_resources", "overview/contributing/open_tasks", "overview/contributing/setting_up", "overview/contributing/the_basics", "overview/deep_dive", "overview/deep_dive/array_api_tests", "overview/deep_dive/arrays", "overview/deep_dive/backend_setting", "overview/deep_dive/containers", "overview/deep_dive/continuous_integration", "overview/deep_dive/data_types", "overview/deep_dive/devices", "overview/deep_dive/docstring_examples", "overview/deep_dive/docstrings", "overview/deep_dive/exception_handling", "overview/deep_dive/formatting", "overview/deep_dive/function_arguments", "overview/deep_dive/function_types", "overview/deep_dive/function_wrapping", "overview/deep_dive/inplace_updates", "overview/deep_dive/ivy_frontends", "overview/deep_dive/ivy_frontends_tests", "overview/deep_dive/ivy_tests", "overview/deep_dive/navigating_the_code", "overview/deep_dive/superset_behaviour", "overview/design", "overview/design/building_blocks", "overview/design/ivy_as_a_framework", "overview/design/ivy_as_a_framework/ivy_array", "overview/design/ivy_as_a_framework/ivy_container", "overview/design/ivy_as_a_framework/ivy_stateful_api", "overview/design/ivy_as_a_transpiler", "overview/extensions", "overview/extensions/applied_libraries", "overview/faq", "overview/glossary", "overview/related_work", "overview/related_work/api_standards", "overview/related_work/compiler_infrastructure", "overview/related_work/exchange_formats", "overview/related_work/frameworks", "overview/related_work/graph_tracers", "overview/related_work/ml_unifying_companies", "overview/related_work/multi_vendor_compiler_frameworks", "overview/related_work/vendor_specific_apis", "overview/related_work/vendor_specific_compilers", "overview/related_work/what_does_ivy_add", "overview/related_work/wrapper_frameworks"], "filenames": ["docs/data_classes/ivy.data_classes.array.rst", "docs/data_classes/ivy.data_classes.container.rst", "docs/framework/ivy.stateful.rst", "docs/framework/stateful/ivy.stateful.activations.rst", "docs/framework/stateful/ivy.stateful.converters.rst", "docs/framework/stateful/ivy.stateful.helpers.rst", "docs/framework/stateful/ivy.stateful.initializers.rst", "docs/framework/stateful/ivy.stateful.layers.rst", "docs/framework/stateful/ivy.stateful.module.rst", "docs/framework/stateful/ivy.stateful.norms.rst", "docs/framework/stateful/ivy.stateful.optimizers.rst", "docs/framework/stateful/ivy.stateful.sequential.rst", "docs/functional/ivy.functional.ivy.rst", "docs/functional/ivy/ivy.functional.ivy.activations.rst", "docs/functional/ivy/ivy.functional.ivy.constants.rst", "docs/functional/ivy/ivy.functional.ivy.control_flow_ops.rst", "docs/functional/ivy/ivy.functional.ivy.creation.rst", "docs/functional/ivy/ivy.functional.ivy.data_type.rst", "docs/functional/ivy/ivy.functional.ivy.device.rst", "docs/functional/ivy/ivy.functional.ivy.elementwise.rst", "docs/functional/ivy/ivy.functional.ivy.experimental.rst", "docs/functional/ivy/ivy.functional.ivy.general.rst", "docs/functional/ivy/ivy.functional.ivy.gradients.rst", "docs/functional/ivy/ivy.functional.ivy.layers.rst", "docs/functional/ivy/ivy.functional.ivy.linear_algebra.rst", "docs/functional/ivy/ivy.functional.ivy.losses.rst", "docs/functional/ivy/ivy.functional.ivy.manipulation.rst", "docs/functional/ivy/ivy.functional.ivy.meta.rst", "docs/functional/ivy/ivy.functional.ivy.nest.rst", "docs/functional/ivy/ivy.functional.ivy.norms.rst", "docs/functional/ivy/ivy.functional.ivy.random.rst", "docs/functional/ivy/ivy.functional.ivy.searching.rst", "docs/functional/ivy/ivy.functional.ivy.set.rst", "docs/functional/ivy/ivy.functional.ivy.sorting.rst", "docs/functional/ivy/ivy.functional.ivy.statistical.rst", "docs/functional/ivy/ivy.functional.ivy.utility.rst", "docs/nested-array/ivy.nested_array.rst", "docs/nested-array/nested_array/ivy.nested_array.nested_array.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.assertions.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.available_frameworks.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.function_testing.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.globals.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.hypothesis_helpers.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.structs.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.test_parameter_flags.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.testing_helpers.rst", "docs/testing/ivy_tests.test_ivy.helpers.rst", "docs/utilities/ivy.utils.rst", "docs/utilities/utils/ivy.utils.assertions.rst", "docs/utilities/utils/ivy.utils.backend.rst", "docs/utilities/utils/ivy.utils.dynamic_import.rst", "docs/utilities/utils/ivy.utils.exceptions.rst", "docs/utilities/utils/ivy.utils.inspection.rst", "docs/utilities/utils/ivy.utils.verbosity.rst", "index.rst", "overview/background.rst", "overview/background/ml_explosion.rst", "overview/background/standardization.rst", "overview/background/why_unify.rst", "overview/contributing.rst", "overview/contributing/applied_libraries.rst", "overview/contributing/building_the_docs.rst", "overview/contributing/helpful_resources.rst", "overview/contributing/open_tasks.rst", "overview/contributing/setting_up.rst", "overview/contributing/the_basics.rst", "overview/deep_dive.rst", "overview/deep_dive/array_api_tests.rst", "overview/deep_dive/arrays.rst", "overview/deep_dive/backend_setting.rst", "overview/deep_dive/containers.rst", "overview/deep_dive/continuous_integration.rst", "overview/deep_dive/data_types.rst", "overview/deep_dive/devices.rst", "overview/deep_dive/docstring_examples.rst", "overview/deep_dive/docstrings.rst", "overview/deep_dive/exception_handling.rst", "overview/deep_dive/formatting.rst", "overview/deep_dive/function_arguments.rst", "overview/deep_dive/function_types.rst", "overview/deep_dive/function_wrapping.rst", "overview/deep_dive/inplace_updates.rst", "overview/deep_dive/ivy_frontends.rst", "overview/deep_dive/ivy_frontends_tests.rst", "overview/deep_dive/ivy_tests.rst", "overview/deep_dive/navigating_the_code.rst", "overview/deep_dive/superset_behaviour.rst", "overview/design.rst", "overview/design/building_blocks.rst", "overview/design/ivy_as_a_framework.rst", "overview/design/ivy_as_a_framework/ivy_array.rst", "overview/design/ivy_as_a_framework/ivy_container.rst", "overview/design/ivy_as_a_framework/ivy_stateful_api.rst", "overview/design/ivy_as_a_transpiler.rst", "overview/extensions.rst", "overview/extensions/applied_libraries.rst", "overview/faq.rst", "overview/glossary.rst", "overview/related_work.rst", "overview/related_work/api_standards.rst", "overview/related_work/compiler_infrastructure.rst", "overview/related_work/exchange_formats.rst", "overview/related_work/frameworks.rst", "overview/related_work/graph_tracers.rst", "overview/related_work/ml_unifying_companies.rst", "overview/related_work/multi_vendor_compiler_frameworks.rst", "overview/related_work/vendor_specific_apis.rst", "overview/related_work/vendor_specific_compilers.rst", "overview/related_work/what_does_ivy_add.rst", "overview/related_work/wrapper_frameworks.rst"], "titles": ["ivy.data_classes.array", "ivy.data_classes.container", "stateful", "Activations", "Converters", "Helpers", "Initializers", "Layers", "Module", "Norms", "Optimizers", "Sequential", "ivy", "Activations", "Constants", "Control flow ops", "Creation", "Data type", "Device", "Elementwise", "Experimental", "General", "Gradients", "Layers", "Linear algebra", "Losses", "Manipulation", "Meta", "Nest", "Norms", "Random", "Searching", "Set", "Sorting", "Statistical", "Utility", "nested_array", "Nested array", "Assertions", "Available frameworks", "Function testing", "Globals", "Hypothesis helpers", "Structs", "Test parameter flags", "Testing helpers", "helpers", "utils", "Assertions", "Backend", "Dynamic import", "Exceptions", "Inspection", "Verbosity", "Contents", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Extensions", "Applied Libraries", "FAQ", "Glossary", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks"], "terms": {"thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "modul": [0, 3, 4, 5, 7, 9, 11, 20, 21, 40, 54, 58, 61, 64, 68, 69, 76, 77, 79, 81, 82, 84, 88, 89, 91, 93, 95, 96, 102, 103, 105], "defin": [0, 16, 19, 20, 21, 24, 34, 54, 63, 64, 68, 71, 72, 75, 78, 82, 83, 84, 85, 90, 92, 96, 97, 99, 100, 101, 102, 103, 106, 108, 109], "an": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 44, 45, 54, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109], "object": [0, 4, 7, 8, 13, 16, 17, 18, 20, 21, 22, 28, 30, 37, 40, 41, 43, 44, 54, 68, 70, 71, 80, 82, 83, 84, 90, 93, 102, 108], "type": [0, 6, 7, 8, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 44, 45, 48, 51, 54, 60, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 88, 90, 91, 102, 103, 106], "which": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 40, 52, 54, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109], "can": [0, 16, 17, 18, 20, 21, 22, 24, 26, 30, 40, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109], "effici": [0, 54, 64, 65, 70, 77, 79, 80, 81, 84, 88, 91, 96, 102, 104, 105], "repres": [0, 6, 16, 17, 19, 20, 22, 23, 24, 61, 68, 86, 90, 99, 100, 103], "basic": [0, 59, 61, 63, 74, 84], "valu": [0, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 44, 64, 65, 67, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 86, 88, 90, 96, 102, 103], "charact": [0, 57, 77, 82], "integ": [0, 16, 17, 19, 20, 21, 23, 24, 26, 30, 33, 34, 35, 45, 65, 70, 72, 80, 83, 84, 88, 90], "float": [0, 6, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 40, 67, 70, 72, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 92], "point": [0, 14, 16, 17, 19, 20, 24, 30, 32, 33, 34, 58, 63, 64, 65, 67, 68, 71, 74, 75, 78, 81, 82, 84, 85, 86, 88, 90, 91, 95, 108], "number": [0, 5, 6, 7, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 30, 31, 32, 34, 35, 37, 40, 45, 54, 55, 56, 64, 65, 70, 71, 72, 73, 74, 81, 84, 86, 88, 91], "ar": [0, 5, 6, 8, 11, 16, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 38, 40, 45, 48, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109], "sequenc": [0, 7, 9, 11, 16, 20, 21, 22, 23, 24, 26, 28, 34, 35, 65, 71, 72, 73, 74, 76, 84, 85, 88, 93, 95, 105], "behav": [0, 24, 63, 67, 76, 81, 82, 83, 90, 103], "veri": [0, 20, 24, 56, 57, 62, 63, 64, 65, 70, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 96, 98, 99, 100, 102, 103, 104, 107, 108, 109], "much": [0, 6, 20, 57, 63, 64, 65, 68, 70, 72, 81, 82, 83, 85, 88, 90, 91, 100, 102, 108, 109], "like": [0, 16, 17, 20, 24, 26, 30, 54, 57, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 102, 107], "list": [0, 4, 5, 7, 13, 16, 17, 18, 20, 21, 22, 24, 26, 28, 29, 31, 32, 33, 37, 38, 40, 45, 48, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 88, 91, 92, 93, 96, 102, 103, 108], "except": [0, 8, 17, 18, 20, 21, 24, 26, 30, 31, 35, 38, 41, 54, 65, 66, 67, 68, 71, 72, 75, 77, 78, 81, 82, 86, 90, 96], "store": [0, 8, 16, 20, 21, 24, 26, 40, 41, 65, 68, 69, 70, 75, 82, 88, 90, 91, 92, 97], "them": [0, 21, 54, 55, 56, 57, 58, 61, 63, 65, 67, 68, 69, 70, 71, 76, 80, 81, 82, 83, 84, 88, 90, 91, 92, 96, 97, 99, 100, 102, 104, 108], "i": [0, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 45, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "constrain": 0, "collect": [3, 7, 9, 10, 13, 18, 21, 22, 23, 25, 28, 29, 30, 71, 76, 83, 84, 95, 100, 102, 105], "ivi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 44, 45, 48, 50, 51, 52, 53, 57, 58, 59, 61, 62, 64, 66, 67, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 86, 87, 94, 96, 97, 98, 109], "neural": [3, 7, 13, 23, 54, 95, 98, 100, 101, 102, 106, 108, 109], "network": [3, 5, 6, 7, 8, 23, 54, 57, 70, 79, 88, 92, 95, 98, 100, 101, 102, 106, 108, 109], "state": [3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 21, 23, 41, 54, 57, 64, 72, 75, 76, 78, 82, 84, 87, 88, 89, 91, 95, 108, 109], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 20, 21, 22, 23, 28, 31, 32, 37, 40, 41, 43, 44, 45, 54, 61, 63, 70, 72, 73, 74, 75, 78, 83, 84, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 109], "geglu": 3, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 82, 101, 102, 103, 104, 105], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 26, 32, 34, 37, 41, 43, 44, 51, 54, 65, 67, 70, 71, 72, 76, 78, 80, 83, 84, 85, 88, 95, 102, 107, 109], "__init__": [3, 6, 7, 8, 9, 10, 11, 16, 17, 18, 20, 21, 22, 37, 41, 43, 44, 51, 54, 63, 68, 69, 72, 76, 82, 85, 88, 90, 91, 92, 93], "appli": [3, 9, 13, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 54, 59, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 90, 91, 92, 93, 94, 96, 97, 103], "function": [3, 6, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 45, 52, 54, 56, 61, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 81, 86, 87, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 108, 109], "gelu": [3, 13, 54], "approxim": [3, 13, 19, 20, 24, 75, 82], "fals": [3, 4, 5, 8, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 48, 54, 67, 69, 72, 74, 76, 81, 82, 83, 84, 88, 91, 92, 93], "should": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 55, 57, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 98, 99, 102, 104, 109], "have": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "hopefulli": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95], "given": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 40, 45, 48, 57, 58, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 95, 99, 104, 105, 108, 109], "you": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "overview": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 71, 84, 87, 95], "submodul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 61, 63, 64, 65, 67, 71, 73, 79, 80, 84, 87, 88, 92, 97], "ani": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "question": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "pleas": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "feel": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "free": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "reach": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "out": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "our": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 56, 57, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 107, 108], "discord": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 54, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "channel": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "forum": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "from": [4, 5, 6, 7, 8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 38, 40, 45, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109], "nativ": [4, 16, 17, 18, 20, 21, 37, 40, 45, 54, 72, 76, 80, 81, 82, 83, 84, 88, 90, 91, 97, 100, 109], "moduleconvert": [4, 8], "static": [4, 16, 63, 74, 75, 79, 80, 82, 96, 101, 102, 103], "from_haiku_modul": 4, "native_modul": 4, "params_hk": 4, "none": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 50, 54, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93], "rng_seed": 4, "0": [4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 48, 54, 65, 67, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 96], "constructor_arg": 4, "constructor_kwarg": 4, "instance_arg": 4, "instance_kwarg": 4, "devic": [4, 6, 7, 8, 9, 10, 11, 16, 20, 21, 30, 37, 38, 40, 41, 54, 57, 65, 66, 69, 72, 76, 79, 80, 83, 84, 85, 86, 88, 93, 96, 97, 101, 102, 104, 105, 106, 107], "haiku": [4, 54, 58, 93, 102], "instanc": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 45, 60, 63, 64, 65, 67, 68, 72, 74, 75, 76, 78, 79, 80, 81, 84, 91, 92, 93, 97, 103], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 45, 52, 54, 63, 68, 75, 76, 78, 80, 82, 83, 84, 85, 88, 90, 91, 95, 103], "The": [4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 45, 54, 55, 56, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "framework": [4, 10, 17, 18, 21, 28, 38, 40, 41, 45, 56, 57, 58, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 103, 106], "pass": [4, 8, 10, 11, 17, 18, 19, 20, 21, 27, 38, 40, 45, 54, 63, 65, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96, 100], "constructor": [4, 11, 21, 40, 72, 73, 90], "default": [4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 45, 63, 64, 65, 69, 72, 73, 74, 75, 76, 78, 79, 80, 82, 84, 86, 88, 92, 97, 102], "seed": [4, 20, 23, 30, 32, 45, 83, 84], "us": [4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 45, 58, 59, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "initi": [4, 5, 7, 8, 10, 23, 54, 57, 65, 69, 72, 73, 83, 84, 88, 102, 108, 109], "option": [4, 6, 8, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 45, 63, 64, 65, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 93, 96, 102, 108], "posit": [4, 14, 16, 17, 19, 20, 21, 24, 26, 30, 31, 35, 40, 45, 54, 63, 65, 67, 70, 80, 82, 84, 85, 91, 95, 104], "argument": [4, 8, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 38, 40, 45, 52, 54, 56, 63, 66, 67, 68, 69, 70, 74, 75, 77, 79, 80, 83, 84, 85, 86, 88, 90, 91, 97, 102], "dict": [4, 8, 13, 18, 20, 21, 28, 40, 41, 68, 70, 77, 91, 92, 97], "kei": [4, 5, 7, 10, 20, 21, 23, 27, 28, 44, 54, 70, 71, 77, 82, 83, 84, 91, 102, 105, 109], "word": [4, 16, 30, 70, 82, 97], "forward": [4, 6, 8, 10, 20, 54, 64, 69, 75, 84, 85, 86, 93, 95, 96, 102, 103], "creat": [4, 6, 7, 8, 9, 10, 11, 16, 20, 21, 22, 30, 40, 45, 57, 59, 60, 61, 63, 64, 65, 68, 71, 72, 73, 76, 80, 81, 82, 83, 84, 86, 88, 89, 92, 94, 95, 97, 102, 103, 108], "variabl": [4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 27, 29, 40, 45, 65, 69, 72, 75, 77, 78, 81, 84, 85, 88, 91, 92, 93, 96, 103], "return": [4, 5, 6, 7, 8, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 44, 45, 51, 52, 54, 64, 65, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 96, 103], "ret": [4, 5, 8, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 52, 54, 75, 76, 81, 82, 83, 85, 88, 93], "new": [4, 7, 9, 10, 16, 17, 19, 20, 21, 22, 26, 28, 29, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 93, 95, 97, 100, 104, 108, 109], "trainabl": [4, 8, 11, 54, 75, 89, 91, 92], "torch": [4, 16, 17, 18, 19, 21, 24, 40, 54, 64, 65, 67, 68, 69, 71, 72, 73, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 96, 97, 108], "from_keras_modul": 4, "kera": [4, 54, 58, 108], "from_torch_modul": 4, "inplace_upd": [4, 21, 81], "For": [4, 16, 19, 20, 24, 26, 32, 34, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 99, 100, 103, 108, 109], "backend": [4, 8, 10, 16, 17, 18, 20, 21, 24, 38, 40, 41, 54, 56, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 93, 97, 102, 105, 108, 109], "dedic": [4, 78, 90, 92], "whether": [4, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 34, 35, 38, 40, 54, 59, 63, 64, 68, 70, 72, 74, 78, 81, 82, 84, 85, 86], "updat": [4, 10, 21, 22, 23, 27, 28, 45, 54, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 78, 80, 82, 83, 84, 86, 88, 90, 91, 93, 96], "inplac": [4, 10, 21, 28, 44, 45, 66, 68, 74, 78, 80, 82, 86, 90, 92], "to_ivy_modul": [4, 93], "native_module_class": 4, "arg": [4, 8, 16, 18, 20, 21, 38, 40, 48, 54, 61, 68, 76, 82, 88, 92], "kwarg": [4, 8, 16, 20, 21, 38, 40, 54, 68, 76, 82, 88, 92], "requir": [4, 19, 20, 24, 26, 45, 60, 61, 63, 64, 68, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 88, 90, 96, 102, 108], "method": [5, 6, 7, 8, 16, 17, 19, 20, 21, 22, 24, 25, 28, 31, 34, 35, 40, 45, 63, 65, 67, 68, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 88, 89, 92, 93, 96, 103, 109], "modulehelp": [5, 8], "abc": [5, 6, 10, 18, 21, 28, 37, 90], "check_submod_ret": 5, "true": [5, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 48, 54, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 91, 92, 93], "expect": [5, 6, 8, 17, 20, 21, 54, 58, 65, 67, 72, 76, 83, 84, 96], "set": [5, 6, 7, 10, 17, 18, 19, 20, 21, 23, 24, 28, 30, 31, 33, 34, 40, 45, 56, 59, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 100, 101, 102, 103, 104, 106, 109], "user": [5, 7, 8, 13, 20, 54, 56, 57, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 76, 80, 81, 82, 84, 86, 87, 88, 96, 100, 102, 108, 109], "dure": [5, 8, 10, 18, 20, 21, 22, 23, 24, 27, 34, 64, 70, 72, 73, 76, 79, 80, 81, 82, 83, 84, 86, 96, 102, 103, 108], "call": [5, 7, 8, 10, 18, 20, 21, 22, 24, 28, 40, 54, 57, 61, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 96, 102, 103, 106], "top": [5, 20, 21, 54, 64, 65, 72, 82, 84, 91, 92, 102, 106], "ha": [5, 16, 18, 19, 20, 22, 24, 26, 32, 34, 56, 57, 58, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 98, 101, 102, 104, 105, 108], "expected_submod_ret": [5, 8], "get_mod_kei": 5, "top_mod": 5, "get": [5, 6, 7, 13, 17, 18, 21, 24, 28, 54, 58, 59, 62, 63, 64, 66, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 97, 102, 108], "current": [5, 8, 17, 18, 20, 21, 22, 24, 28, 40, 54, 58, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 76, 79, 80, 82, 83, 84, 86, 88, 93, 95, 96, 102, 108, 109], "when": [5, 6, 8, 16, 17, 19, 20, 21, 23, 24, 25, 28, 30, 31, 34, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 93, 96, 100, 102, 105, 106, 107, 108], "check": [5, 17, 18, 20, 21, 24, 28, 38, 54, 62, 63, 64, 65, 67, 70, 71, 74, 76, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92], "track": [5, 8, 20, 22, 28, 64, 65, 67, 102], "explicit": [5, 61, 64, 70, 72, 81, 82, 83, 88, 96, 102], "indic": [5, 7, 8, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 40, 41, 48, 52, 61, 71, 77, 78, 82, 93], "A": [5, 6, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 34, 35, 38, 40, 41, 45, 55, 56, 57, 58, 61, 62, 63, 64, 66, 70, 72, 73, 76, 78, 79, 82, 83, 84, 88, 91, 96, 97, 102, 103], "string": [5, 13, 17, 18, 20, 21, 23, 24, 40, 69, 71, 72, 73, 76, 77, 82, 88, 91], "mod_depth": 5, "depth": [5, 8, 16, 20, 21, 23, 28, 65, 71, 91, 92, 93, 95], "root": [5, 19, 20, 61, 64, 65, 82, 91], "mod_height": 5, "height": [5, 20, 21, 23, 91], "level": [5, 54, 58, 59, 63, 65, 70, 76, 79, 82, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109], "being": [5, 6, 16, 20, 21, 24, 37, 40, 54, 57, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 86, 88, 91, 95, 96, 98, 100, 101, 102, 103, 108, 109], "mod_with_top_mod_key_chain": 5, "flatten_key_chain": 5, "contain": [5, 7, 8, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 44, 45, 54, 56, 60, 61, 63, 64, 66, 67, 68, 71, 72, 74, 75, 78, 79, 80, 81, 84, 87, 88, 89, 92, 96, 97, 102, 103, 108], "start": [5, 16, 18, 20, 54, 59, 60, 61, 63, 64, 65, 66, 71, 72, 74, 75, 78, 82, 84, 86, 87, 88, 90, 91, 92, 95, 96, 102, 108], "end": [5, 16, 19, 20, 54, 64, 65, 69, 71, 81, 85, 86, 87, 95, 96, 100, 105], "If": [5, 6, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 40, 54, 56, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "specifi": [5, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 65, 66, 72, 73, 78, 79, 81, 82, 83, 84, 86, 88, 91, 92, 108], "length": [5, 16, 20, 21, 24, 26, 77, 84, 91], "1": [5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 45, 54, 57, 58, 61, 64, 65, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96], "iimedi": 5, "parent": [5, 22, 63, 71, 90], "flat": [5, 20, 21, 26], "all": [5, 6, 16, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 35, 38, 40, 44, 48, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109], "nest": [5, 8, 10, 21, 22, 27, 68, 70, 79, 85, 91, 92, 96, 97, 102], "chain": [5, 11, 27, 28, 68, 70, 82, 92, 93, 96, 102], "flatten": [5, 20, 21, 24, 26, 31, 32, 38, 40, 54, 86], "show_mod_in_top_mod": 5, "upper_depth": 5, "lower_depth": 5, "show": [5, 21, 54, 63, 64, 65, 71, 74, 81, 82, 84, 95, 96, 102], "lower": [5, 6, 16, 19, 20, 24, 30, 54, 65, 74, 82, 84, 86, 88, 96, 97, 98, 99, 100, 102, 103, 108, 109], "control": [5, 20, 24, 70, 72, 81, 82, 83, 86, 90, 91, 95, 97, 102, 108], "coverag": [5, 72, 84], "upper": [5, 16, 20, 24, 30, 81, 84], "Will": [5, 20, 96], "give": [5, 6, 17, 23, 26, 54, 58, 60, 64, 65, 66, 69, 71, 74, 75, 78, 84, 102, 106], "prompt": [5, 65], "found": [5, 18, 28, 60, 63, 64, 65, 68, 69, 70, 72, 75, 77, 80, 81, 82, 86, 104], "how": [5, 6, 7, 8, 20, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 102], "mani": [5, 20, 26, 54, 56, 57, 58, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 96, 98, 102, 105, 108, 109], "up": [5, 20, 23, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "truncat": [5, 20, 21, 76, 91], "down": [5, 20, 64, 76, 84, 97, 102, 108], "show_structur": 5, "print": [5, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 54, 64, 65, 70, 74, 83, 84, 88, 90, 91, 92], "structur": [5, 21, 28, 54, 61, 65, 68, 70, 79, 83, 84, 85, 91, 92, 101, 102], "layer": [5, 6, 8, 9, 10, 11, 29, 54, 56, 75, 82, 85, 86, 88, 89, 92, 100, 102, 106, 109], "this_repr": 5, "show_v_in_top_v": 5, "sub": [5, 20, 24, 26, 27, 63, 65, 66, 70, 76, 82, 83, 84, 90, 91, 92, 98], "perspect": 5, "either": [5, 7, 8, 16, 19, 20, 21, 23, 24, 27, 34, 61, 63, 64, 65, 69, 70, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 88, 91, 96, 102], "v": [5, 7, 8, 9, 10, 11, 20, 23, 33, 40, 54, 60, 64, 65, 88, 91, 92, 93], "top_v": 5, "we": [5, 8, 20, 21, 22, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 102, 103, 107, 108], "want": [5, 8, 20, 54, 57, 59, 63, 64, 65, 71, 76, 80, 81, 84, 86, 91, 92, 93, 96], "step": [5, 10, 16, 20, 22, 27, 54, 58, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 82, 84, 88, 91, 92, 93, 95, 102], "sub_mod": 5, "show_v": 5, "comopos": 5, "befor": [5, 18, 20, 23, 24, 26, 27, 28, 32, 34, 63, 64, 65, 67, 68, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 91, 96, 102], "begin": [5, 20, 28, 64, 67, 83], "enumer": [5, 54], "compos": [5, 20, 64, 70, 82, 84, 96, 102, 109], "track_submod_call_ord": [5, 8], "order": [5, 8, 11, 16, 19, 20, 23, 24, 26, 27, 31, 32, 33, 40, 54, 56, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 91, 93, 96, 98, 101, 102, 103, 105, 108], "allow": [5, 8, 16, 20, 21, 33, 54, 57, 60, 63, 65, 68, 71, 72, 76, 77, 80, 82, 83, 84, 88, 90, 96, 97, 100, 102, 106, 107], "track_submod_ret": [5, 8], "its": [5, 17, 18, 20, 21, 24, 26, 28, 40, 44, 54, 61, 63, 64, 65, 68, 71, 72, 75, 80, 82, 83, 84, 85, 86, 93, 96, 97, 101, 102, 108], "v_with_top_v_key_chain": 5, "": [5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 34, 40, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108], "constant": [6, 8, 9, 20, 26, 28, 29, 54, 79, 83, 85, 92, 93, 96], "fill": [6, 16, 20, 30, 31, 83], "create_vari": [6, 92], "var_shap": [6, 92], "fan_out": [6, 92], "fan_in": [6, 92], "dtype": [6, 7, 8, 9, 11, 16, 17, 18, 20, 21, 23, 24, 30, 31, 33, 34, 35, 37, 38, 40, 48, 54, 67, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 88, 90], "intern": [6, 7, 8, 9, 11, 28, 37, 68, 70, 73, 75, 81, 83, 84], "tupl": [6, 8, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 34, 35, 68, 72, 76, 77, 78, 83, 84, 88, 91, 92, 96], "int": [6, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 70, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 86, 88, 93], "shape": [6, 7, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 40, 54, 65, 70, 72, 73, 74, 75, 78, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93], "desir": [6, 7, 17, 18, 20, 31, 56, 65, 69, 71, 72, 82, 88, 102], "arrai": [6, 7, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 45, 52, 54, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 100, 101, 102, 104, 108, 109], "consid": [6, 19, 20, 24, 32, 56, 57, 68, 71, 72, 79, 85, 89, 90, 91, 99, 103, 107, 109], "rectangular": 6, "matrix": [6, 7, 16, 20, 21, 23, 24, 63, 72, 82, 100, 102], "row": [6, 16, 20, 24, 30, 31], "column": [6, 16, 20, 24], "union": [6, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 85, 86, 88, 93], "nativedevic": [6, 10, 11, 16, 18, 20, 30, 72, 73, 76, 78, 85], "cuda": [6, 7, 8, 9, 10, 11, 16, 18, 20, 30, 54, 88, 96, 97, 107], "cpu": [6, 7, 8, 9, 10, 11, 16, 18, 20, 24, 30, 40, 54, 65, 73, 82, 84, 96, 100, 102, 105, 107], "etc": [6, 7, 8, 9, 10, 11, 16, 20, 30, 32, 58, 63, 64, 65, 67, 68, 70, 72, 74, 76, 78, 82, 83, 84, 85, 88, 90, 91, 96, 97, 100, 102, 108], "node": [6, 28, 57, 70, 82, 103], "next": [6, 8, 10, 17, 20, 58, 60, 63, 64, 65, 69, 74, 75, 80, 82, 85, 89, 90, 91, 102, 104], "previou": [6, 17, 20, 21, 22, 65, 67, 69, 71, 78, 82, 84, 86, 93, 96, 105], "nativedtyp": [6, 16, 17, 20, 23, 24, 30, 31, 33, 34, 72, 73, 78, 85, 88], "data": [6, 7, 8, 16, 18, 19, 20, 21, 23, 24, 26, 30, 31, 33, 34, 35, 37, 38, 40, 41, 45, 48, 54, 55, 57, 64, 66, 67, 68, 70, 73, 75, 78, 79, 80, 81, 83, 85, 86, 88, 90, 97, 102, 103, 104, 106, 107, 108], "firstlayersiren": 6, "uniform": [6, 30, 54, 92, 109], "siren": 6, "first": [6, 7, 8, 10, 16, 17, 18, 19, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 40, 54, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 70, 74, 78, 79, 80, 81, 82, 84, 86, 88, 90, 91, 93, 100, 102, 103, 107], "It": [6, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 100, 102, 103, 105, 106, 107, 108, 109], "draw": [6, 20, 30, 45, 63, 67, 83, 84], "distribt": 6, "limit": [6, 17, 21, 26, 48, 54, 64, 65, 71, 74, 76, 77, 82, 84, 86, 91, 96, 101, 102, 103], "where": [6, 16, 19, 20, 21, 22, 24, 26, 28, 30, 31, 34, 35, 54, 56, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 96, 100, 109], "input": [6, 7, 8, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 45, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 96, 103, 106], "featur": [6, 20, 54, 64, 65, 68, 78, 82, 85, 86, 91, 96, 102, 103, 104, 108], "glorotuniform": [6, 7, 92], "glorot": 6, "also": [6, 7, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 54, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109], "known": [6, 67, 71, 72, 82, 84], "xavier": 6, "sqrt": [6, 19, 20], "6": [6, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 54, 61, 67, 69, 70, 71, 74, 84, 86, 88, 90, 91, 92], "output": [6, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 38, 54, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 92, 93, 96, 97, 103], "respect": [6, 16, 19, 20, 22, 23, 24, 27, 40, 62, 63, 65, 68, 70, 71, 72, 74, 78, 82, 84, 85, 98, 108], "neuron": 6, "form": [6, 16, 20, 21, 23, 24, 28, 57, 59, 79, 84, 86, 92, 93, 102, 103, 108], "g": [6, 17, 18, 20, 28, 30, 32, 34, 58, 59, 63, 64, 66, 67, 70, 82, 84, 88, 96, 97, 98], "z": [6, 16, 18, 19, 20, 21, 24, 25, 26, 28, 30, 31, 32, 34, 54, 69, 70, 74, 88, 90], "activ": [6, 20, 54, 60, 61, 64, 65, 85, 92, 102, 105], "w_1x_1": 6, "w_2x_2": 6, "w_nx_n": 6, "w_i": 6, "weight": [6, 7, 8, 10, 20, 22, 23, 54, 70, 79, 88, 92, 93, 101], "x_i": [6, 19, 20, 32, 34, 75], "To": [6, 21, 60, 61, 64, 67, 68, 70, 72, 74, 76, 77, 79, 82, 83, 84, 85, 91, 92, 93], "prevent": [6, 10, 21, 22, 23, 34, 63, 65, 71, 72, 76, 77, 81, 82, 85, 86], "vanish": 6, "too": [6, 19, 63, 64, 65, 67, 72, 76, 77, 96], "small": [6, 9, 20, 24, 29, 54, 71, 74, 79, 83, 86, 88, 92, 96, 103], "explod": [6, 55, 56], "big": [6, 59, 96, 102], "must": [6, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 40, 48, 56, 58, 60, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 82, 84, 85, 86, 88, 92, 93, 103, 109], "pick": 6, "carefulli": [6, 82, 100, 105], "abstract": [6, 10, 18, 56, 70, 72, 82, 84, 86, 92, 96, 100, 102, 104, 105, 109], "kaimingnorm": 6, "mean": [6, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 34, 54, 64, 65, 66, 67, 69, 70, 72, 73, 74, 79, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 99, 102], "fan_mod": [6, 92], "kaim": 6, "normal": [6, 9, 20, 26, 29, 30, 54, 63, 82, 86, 91, 100], "he": 6, "take": [6, 16, 19, 20, 24, 26, 45, 54, 58, 59, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 79, 81, 82, 83, 84, 86, 88, 90, 92, 93, 96, 99, 100, 108], "account": [6, 20, 26, 64, 71, 75, 82], "non": [6, 8, 10, 13, 17, 19, 20, 24, 28, 30, 31, 34, 35, 68, 70, 72, 74, 80, 88, 102], "linear": [6, 7, 13, 20, 21, 23, 28, 54, 70, 75, 82, 84, 86, 88, 91, 92, 93, 100, 101, 102, 105], "distibut": 6, "center": 6, "standard": [6, 9, 16, 17, 19, 20, 21, 24, 26, 29, 30, 31, 32, 33, 34, 35, 54, 55, 66, 67, 68, 70, 72, 75, 78, 81, 84, 85, 96, 98, 100, 101, 104, 105, 107], "distribut": [6, 7, 8, 20, 25, 30, 63, 71, 73, 96, 102, 105], "2": [6, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 54, 61, 64, 65, 67, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 84, 87, 88, 90, 91, 92, 93, 96, 108, 109], "negative_slop": 6, "fan": 6, "averag": [6, 20, 22, 27], "determin": [6, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 32, 35, 45, 56, 70, 72, 73, 75, 79, 82, 86], "calcul": [6, 19, 20, 24, 25, 34, 57, 63, 75, 88], "train": [6, 20, 22, 23, 54, 58, 70, 73, 79, 91, 92, 93, 94, 95, 96, 97, 100, 101, 106, 108, 109], "back": [6, 8, 10, 20, 21, 26, 57, 64, 65, 68, 72, 76, 80, 87, 96, 100, 104], "propog": 6, "fan_sum": [6, 92], "sum": [6, 18, 19, 20, 21, 23, 24, 25, 34, 54, 70, 72, 79, 81, 82, 88], "higher": [6, 20, 87, 88, 93, 96, 99, 102, 103, 106, 108, 109], "deviat": [6, 9, 20, 29, 30, 34, 58, 67], "relationship": 6, "proport": 6, "Ones": 6, "init": [6, 54, 67, 93], "w0": 6, "30": [6, 19, 20, 21, 24, 28, 34, 71], "numer": [6, 16, 17, 19, 20, 21, 24, 30, 31, 34, 72, 80, 82, 83, 84, 85, 86, 88, 92, 99, 102, 108], "power": [6, 19, 20, 21, 24, 28, 90, 91, 92, 102, 104, 108], "gain": [6, 65, 67, 87, 92, 102], "drawn": [6, 20, 30, 84], "equal": [6, 16, 17, 19, 20, 21, 24, 26, 30, 32, 33, 34, 45, 70, 72, 74, 76, 83, 84], "probabl": [6, 7, 20, 23, 30, 54, 58, 84], "rang": [6, 16, 20, 21, 32, 34, 54, 72, 76, 84, 88, 91, 92, 93, 102, 108], "wlim": 6, "endpoint": [6, 16, 78], "includ": [6, 7, 9, 16, 20, 21, 24, 28, 30, 31, 34, 35, 40, 52, 54, 57, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 95, 96, 99, 100, 102, 104, 107, 108, 109], "help": [6, 21, 34, 54, 59, 60, 63, 64, 68, 69, 70, 71, 72, 74, 80, 82, 84, 85, 86, 90, 91, 92, 94, 97, 98, 102, 104, 108], "issu": [6, 58, 59, 62, 63, 67, 69, 71, 72, 74, 76, 82, 84, 85, 88, 92, 96], "try": [6, 20, 21, 54, 55, 57, 58, 61, 63, 64, 65, 67, 68, 70, 71, 72, 76, 77, 81, 82, 83, 88, 90, 96], "optim": [6, 21, 22, 27, 54, 58, 81, 89, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 109], "varianc": [6, 20, 34], "4": [6, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 54, 58, 61, 63, 64, 69, 70, 71, 74, 83, 84, 88, 90, 91, 92, 93, 102, 108, 109], "intend": [6, 34, 41, 67, 78, 100, 102, 106, 107], "special": [6, 19, 20, 34, 45, 63, 67, 68, 71, 74, 75, 76, 78, 81, 83, 85, 86, 102, 103, 104], "predefin": 6, "initialz": 6, "fan_avg": 6, "drop": [6, 20, 64, 96], "off": [6, 23, 24, 58, 64, 87, 108], "factor": [6, 7, 10, 18, 22, 23, 24, 57, 76], "scale": [6, 7, 10, 18, 20, 22, 23, 29, 102, 104], "zero": [6, 7, 10, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 58, 68, 70, 72, 73, 74, 78, 80, 83, 88, 91, 92, 101], "conv1d": [7, 23], "input_channel": [7, 54, 88, 92], "output_channel": [7, 54, 92], "filter_s": 7, "stride": [7, 20, 23, 102], "pad": [7, 20, 21, 23, 26, 54], "weight_initi": [7, 92], "bias_initi": [7, 92], "data_format": [7, 20, 23, 54], "nwc": [7, 20, 23], "dilat": [7, 20, 23], "1d": [7, 20], "convolut": [7, 20, 23, 100, 102], "size": [7, 16, 18, 20, 21, 23, 24, 26, 30, 31, 35, 54, 83, 84, 91], "filter": [7, 20, 23, 54, 61], "slide": [7, 20, 23], "window": [7, 20, 23, 60, 61, 65, 107], "each": [7, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 95, 96, 98, 99, 103, 105, 108], "dimens": [7, 13, 16, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 37, 74, 76, 82, 83, 84, 86, 88, 91], "same": [7, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 38, 54, 56, 58, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 96, 99, 101, 108, 109], "valid": [7, 17, 20, 21, 23, 26, 35, 64, 69, 72, 74, 83, 84, 103], "algorithm": [7, 20, 24, 72, 82, 86, 96, 102, 104, 106], "per": [7, 20, 65, 71, 82, 91], "bia": [7, 20, 21, 23, 29, 88, 92], "ncw": [7, 20, 23], "construct": [7, 9, 10, 11, 26, 88, 92, 93, 100, 102, 109], "provid": [7, 10, 13, 16, 17, 18, 20, 21, 24, 26, 31, 34, 35, 54, 56, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 90, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 109], "conv1dtranspos": 7, "output_shap": [7, 23], "transpos": [7, 20, 23, 24, 54, 81, 90, 93], "conv2d": [7, 23, 54], "filter_shap": 7, "nhwc": [7, 20, 23], "2d": [7, 20, 54, 82], "nchw": [7, 20, 23, 54], "conv2dtranspos": 7, "conv3d": [7, 23], "ndhwc": [7, 20, 23], "3d": [7, 20, 95], "ncdhw": [7, 20, 23], "conv3dtranspos": 7, "depthwiseconv2d": 7, "num_channel": 7, "depthwis": [7, 23], "dropout": [7, 20, 23, 91], "prob": [7, 20, 23, 30, 54], "randomli": [7, 20, 23, 45], "some": [7, 18, 19, 20, 22, 28, 54, 57, 58, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 98, 99, 101, 102, 103, 108, 109], "element": [7, 13, 16, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 75, 83, 84, 86, 88, 106], "tensor": [7, 16, 17, 19, 20, 21, 23, 24, 26, 30, 54, 56, 68, 69, 72, 73, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 96, 97, 99, 100, 103, 105, 106, 109], "p": [7, 16, 20, 21, 24, 28, 64, 65, 66], "sampl": [7, 16, 20, 30, 34, 80, 83, 84], "bernoul": 7, "lstm": [7, 23, 88, 102], "num_lay": 7, "return_sequ": 7, "return_st": 7, "stack": [7, 16, 20, 21, 24, 26, 28, 54, 62, 67, 88, 98, 100, 107, 108], "cell": [7, 23, 71, 88], "entir": [7, 18, 20, 34, 35, 57, 58, 63, 64, 65, 67, 68, 70, 72, 74, 76, 81, 82, 83, 84, 86, 88, 91, 92, 93, 96, 102, 108, 109], "just": [7, 20, 34, 45, 54, 57, 58, 64, 65, 67, 69, 71, 72, 74, 75, 79, 80, 81, 82, 83, 84, 88, 90, 91, 96, 102, 103, 108], "latest": [7, 17, 19, 20, 24, 26, 34, 54, 61, 63, 64, 65, 69, 71, 72, 75, 85, 96, 107], "timestep": [7, 23, 88], "hidden": [7, 23, 76, 88, 92], "get_initial_st": 7, "batch_shap": [7, 16, 23, 24, 30, 86, 88, 90], "explicitli": [7, 8, 24, 40, 67, 68, 69, 70, 72, 75, 76, 79, 80, 81, 83, 84, 88, 96, 102], "with_bia": [7, 54, 92], "refer": [7, 16, 19, 20, 22, 24, 26, 34, 35, 54, 62, 63, 64, 65, 67, 68, 71, 72, 78, 79, 82, 83, 84, 96, 97, 102], "dens": [7, 54], "fulli": [7, 20, 54, 58, 68, 72, 78, 81, 86, 88, 89, 90, 91, 92, 93, 96, 100, 101, 102, 108, 109], "connect": [7, 57, 64, 92, 93, 100], "receiv": [7, 21, 27, 65, 72, 73, 84], "last": [7, 16, 18, 20, 22, 23, 24, 25, 26, 31, 33, 34, 35, 54, 58, 65, 67, 69, 72, 74, 77, 81, 83, 84, 86, 88, 96, 102], "follow": [7, 10, 17, 18, 19, 20, 21, 22, 23, 24, 28, 32, 54, 56, 57, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 105], "multipl": [7, 19, 20, 21, 22, 23, 24, 26, 29, 31, 34, 35, 54, 58, 65, 68, 69, 70, 74, 76, 79, 81, 82, 83, 84, 86, 88, 96, 100, 101, 102, 109], "addit": [7, 18, 19, 21, 29, 63, 64, 65, 69, 70, 72, 74, 75, 82, 84, 85, 86, 90, 91, 93, 102, 103, 104, 108], "vector": [7, 16, 20, 21, 23, 24, 95, 102], "term": [7, 23, 54, 56, 65, 70, 88, 97, 102], "multiheadattent": 7, "query_dim": [7, 23], "num_head": [7, 23], "8": [7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 61, 64, 70, 71, 74, 84, 87, 91], "head_dim": [7, 23], "64": [7, 17, 19, 20, 21, 22, 23, 24, 34, 54, 64, 91, 92, 107], "dropout_r": 7, "context_dim": 7, "with_to_q_fn": 7, "with_to_kv_fn": 7, "with_to_out_fn": 7, "build_mod": [7, 8], "on_init": [7, 8], "multi": [7, 23, 24, 54, 74, 87, 96, 98, 100, 102, 106], "head": [7, 23, 54, 62, 64, 82], "attent": [7, 23, 57, 65, 68], "queri": [7, 18, 21, 23, 70, 72, 90, 102], "rate": [7, 10, 20, 22, 27, 71], "context": [7, 18, 21, 22, 23, 64, 65, 74], "case": [7, 8, 10, 16, 18, 19, 20, 21, 24, 26, 28, 34, 54, 57, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 96, 101, 105], "dim": [7, 16, 20, 23, 54, 72, 76, 82, 83, 86], "similar": [7, 19, 23, 56, 63, 64, 70, 72, 73, 76, 79, 80, 82, 83, 84, 85, 91, 96, 98, 99, 100, 101, 108], "measur": [7, 20, 23], "5": [7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 54, 61, 64, 65, 67, 69, 70, 74, 78, 83, 84, 90, 91, 92], "map": [7, 20, 21, 28, 68, 70, 72, 78, 79, 82, 84, 85, 91, 95, 96, 97, 103], "x": [7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 44, 48, 54, 61, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93], "dot": [7, 20, 23, 24, 54, 71], "product": [7, 19, 20, 23, 24, 34, 63, 88, 102, 104], "final": [7, 16, 21, 63, 65, 67, 68, 71, 72, 74, 75, 77, 79, 81, 82, 86, 87, 91, 98, 108], "built": [7, 8, 16, 54, 61, 64, 65, 70, 84, 89, 97, 101, 102, 106], "now": [7, 8, 16, 54, 58, 61, 64, 67, 68, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 85, 86, 90, 91, 93, 95, 96, 102], "build": [7, 8, 32, 54, 57, 59, 60, 64, 71, 72, 79, 87, 89, 92, 93, 96, 97, 100, 102, 104, 107, 108, 109], "time": [7, 8, 20, 22, 23, 24, 26, 27, 31, 32, 56, 57, 58, 63, 64, 65, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 84, 85, 88, 91, 93, 96, 100, 102, 103, 106, 107, 108], "__call__": [7, 8, 40, 54], "run": [7, 8, 20, 22, 27, 40, 41, 54, 60, 61, 63, 64, 66, 68, 69, 71, 74, 76, 77, 78, 82, 83, 88, 89, 90, 91, 92, 93, 95, 96, 100, 102, 103, 104, 105, 107, 108, 109], "deriv": [8, 10, 11, 16, 20, 22, 28, 72, 73, 90, 92], "compile_on_next_step": [8, 10, 21, 92], "store_var": 8, "arg_stateful_idx": 8, "kwarg_stateful_idx": 8, "fallback_to_non_compil": [8, 10], "with_partial_v": 8, "dynamic_backend": 8, "with_grad": [8, 22], "submod_depth": 8, "submods_to_track": 8, "through": [8, 19, 20, 28, 54, 59, 62, 63, 65, 66, 69, 70, 71, 74, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 100, 102, 103, 104], "varibl": 8, "temporarili": [8, 67, 85], "gradient": [8, 10, 18, 20, 27, 40, 45, 85, 91, 92, 95, 96, 102], "onli": [8, 10, 16, 17, 18, 19, 20, 21, 24, 26, 28, 30, 31, 33, 34, 41, 54, 56, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 101, 102, 103, 108, 109], "rais": [8, 10, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 34, 35, 38, 54, 57, 65, 67, 69, 76, 77, 81, 82, 88, 90], "differ": [8, 17, 19, 20, 21, 23, 24, 26, 34, 54, 56, 57, 58, 62, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 105, 108, 109], "consist": [8, 24, 34, 56, 67, 68, 71, 72, 76, 81, 88, 103], "compil": [8, 10, 40, 45, 54, 70, 82, 85, 86, 87, 89, 96, 97, 98, 101, 102, 103, 106, 109], "id": [8, 18, 54, 60, 62, 64, 68, 70, 77], "item": [8, 17, 18, 21, 22, 28, 54, 63, 70, 72, 88, 90, 91, 93], "part": [8, 16, 19, 20, 24, 40, 54, 60, 65, 67, 79, 82, 84, 85, 86, 88, 89, 93, 95, 96, 100, 102, 107, 108, 109], "graph": [8, 32, 45, 54, 58, 70, 79, 82, 86, 89, 96, 97, 98, 102, 105], "keyword": [8, 16, 20, 21, 28, 34, 38, 40, 63, 68, 70, 72, 73, 80, 81, 82, 83, 84, 85, 91], "fall": [8, 10, 63, 65, 72, 87], "error": [8, 10, 13, 19, 20, 24, 34, 58, 62, 64, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 82, 84, 85, 90, 96, 102], "partial": [8, 20, 22, 24, 65], "specif": [8, 17, 18, 19, 21, 24, 26, 27, 30, 33, 34, 52, 54, 56, 63, 64, 65, 67, 68, 69, 70, 72, 73, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 105, 109], "from_cal": 8, "denot": [8, 19, 22], "trigger": [8, 63], "otherwis": [8, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 31, 33, 34, 35, 38, 54, 65, 68, 70, 72, 73, 74, 84, 88], "successfulli": [8, 68, 77], "properti": [8, 10, 20, 37, 67, 70, 74, 79, 83, 84, 90, 91, 92, 108], "built_": 8, "compile_kwarg": 8, "_unified_ivy_graph": 8, "_call": 8, "target": [8, 18, 54, 64, 66, 83, 85, 87, 91, 92, 93, 98, 100, 101, 102, 105, 107, 108], "save_weight": 8, "weights_path": 8, "save": [8, 18, 20, 21, 58, 60, 71, 77, 84, 96, 101], "hdf5": [8, 91], "file": [8, 21, 61, 63, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 79, 82, 83, 84, 85, 88, 91, 98, 101, 102, 103], "show_graph": 8, "randomness_factor": 8, "save_to_disk": 8, "with_edge_label": 8, "with_arg_label": 8, "with_output_label": 8, "output_connected_onli": 8, "include_gener": 8, "array_cach": 8, "highlight_subgraph": 8, "fname": [8, 91], "return_graph": 8, "layernorm": 9, "normalized_shap": 9, "epsilon": [9, 10, 20, 21, 22, 24, 25, 29, 70, 79, 81, 92], "1e": [9, 10, 17, 20, 21, 22, 24, 25, 29, 38, 40, 54, 70, 79, 81, 83, 92, 93], "05": [9, 16, 19, 20, 21, 22, 24, 29, 38, 83, 84], "elementwise_affin": 9, "new_std": [9, 29], "over": [9, 20, 21, 24, 29, 30, 34, 35, 54, 56, 58, 64, 65, 69, 74, 75, 81, 83, 88, 90, 96, 100, 102], "mini": [9, 29], "batch": [9, 18, 20, 21, 23, 24, 27, 29, 54, 70, 79, 91, 100], "trail": 9, "add": [9, 19, 20, 21, 22, 29, 40, 45, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 78, 79, 81, 82, 84, 85, 86, 88, 90, 96, 98, 100, 102], "denomin": [9, 21, 29, 79, 96, 99], "global": [9, 17, 18, 20, 21, 22, 29, 45, 64, 68, 69, 71, 72, 73, 76, 79, 82, 88, 102], "_min_bas": [9, 21, 29], "bool": [9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 40, 41, 72, 74, 76, 81, 82, 84, 85, 88, 93], "learnabl": [9, 29, 93], "affin": [9, 20], "adam": [10, 21, 22, 54, 91, 92, 93, 102], "lr": [10, 21, 22, 91, 92], "0001": 10, "beta1": [10, 21, 22, 92], "9": [10, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 61, 70, 74, 76, 84, 91, 92, 98], "beta2": [10, 21, 22, 92], "999": [10, 19, 22, 92], "07": [10, 19, 20, 22, 25, 92], "stop_gradi": [10, 18, 21, 22, 27, 92], "learn": [10, 21, 22, 27, 54, 56, 57, 59, 62, 63, 64, 66, 67, 79, 87, 95, 97, 100, 104, 105, 106, 107, 108, 109], "forget": [10, 22, 54, 72], "second": [10, 17, 19, 20, 21, 22, 24, 26, 27, 28, 32, 58, 64, 67, 72, 74, 81, 82, 84, 90, 107], "moment": [10, 22, 63, 69, 96], "divisor": [10, 19, 20, 22, 34], "divis": [10, 19, 20, 21, 22, 23, 79], "place": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 54, 60, 62, 65, 66, 67, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 97, 104], "handl": [10, 18, 20, 66, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 86, 92, 99, 109], "relev": [10, 16, 20, 54, 57, 63, 64, 65, 68, 70, 71, 72, 74, 83, 84, 91, 100, 107, 108], "pytorch": [10, 19, 54, 57, 58, 62, 63, 68, 72, 73, 76, 78, 79, 81, 82, 83, 85, 86, 88, 93, 96, 97, 103, 105, 106, 108, 109], "support": [10, 17, 18, 19, 20, 21, 23, 24, 38, 54, 56, 57, 58, 60, 64, 67, 68, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 93, 97, 99, 101, 102, 105, 107, 108, 109], "stop": [10, 16, 18, 22, 27, 28, 78, 86, 88, 96, 102], "after": [10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 54, 60, 61, 63, 64, 65, 67, 71, 72, 74, 76, 78, 82, 84, 87, 102], "set_stat": [10, 92], "lamb": [10, 22, 92], "max_trust_ratio": [10, 22], "10": [10, 16, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 54, 57, 61, 64, 67, 70, 71, 72, 74, 83, 84, 88, 90, 91, 107], "decay_lambda": [10, 22], "max": [10, 17, 19, 20, 21, 24, 34, 71, 82, 84], "trust": [10, 22], "ratio": [10, 22], "between": [10, 16, 17, 19, 20, 23, 25, 26, 28, 30, 32, 56, 68, 69, 70, 74, 78, 79, 82, 83, 84, 86, 87, 89, 90, 91, 93, 95, 98, 99, 101, 102, 103, 108], "norm": [10, 20, 21, 24, 85], "decai": [10, 22], "lar": [10, 22, 92], "wise": [10, 13, 19, 20, 26, 86], "adapt": [10, 20, 22, 57], "init_on_first_step": 10, "gener": [10, 16, 17, 19, 20, 23, 24, 26, 30, 34, 45, 61, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 92, 93, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108], "callabl": [10, 13, 16, 17, 18, 20, 21, 22, 23, 27, 28, 38, 41, 45, 51, 70, 76, 82, 88], "grad": [10, 22, 54, 91, 92, 93], "ignore_miss": 10, "overridden": [10, 68], "privat": [10, 61, 82, 84], "self": [10, 13, 18, 20, 37, 54, 65, 68, 70, 76, 82, 83, 88, 90, 91, 92, 93], "_step": [10, 92], "ignor": [10, 16, 20, 24, 28, 71, 74, 84, 96, 108], "miss": [10, 63, 64, 68, 70, 71, 74, 77, 84], "exist": [10, 21, 26, 48, 54, 56, 57, 61, 63, 64, 67, 69, 74, 75, 79, 80, 81, 82, 84, 86, 88, 96, 97, 100, 102, 105, 108], "sgd": [10, 102], "stochast": [10, 102], "descent": [10, 22, 92, 102], "sub_modul": 11, "ad": [11, 20, 21, 24, 26, 54, 57, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 92, 96, 101, 102], "thei": [11, 17, 20, 24, 27, 30, 38, 54, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 96, 99, 102, 104, 105, 108, 109], "togeth": [11, 20, 54, 57, 68, 70, 77, 82, 85, 86, 92, 93, 96, 100, 102, 103, 108], "nativearrai": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 68, 70, 74, 76, 77, 78, 79, 80, 81, 82, 85, 88, 90, 97], "deseri": 13, "name": [13, 20, 21, 24, 32, 40, 45, 50, 61, 63, 64, 65, 69, 70, 71, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 88, 91, 93, 102], "custom_object": 13, "identifi": [13, 67, 71, 84, 86], "str": [13, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 34, 40, 41, 43, 45, 72, 73, 76, 77, 82, 85, 88, 93], "dictionari": [13, 18, 22, 40, 68, 71, 72, 82, 91, 96], "correspond": [13, 17, 19, 20, 21, 23, 24, 26, 30, 31, 32, 34, 40, 54, 63, 65, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 84, 86, 88, 102], "exampl": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 45, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 95, 96, 99, 100, 103, 105, 108, 109], "With": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 57, 58, 64, 74, 80, 82, 84, 86, 88, 102, 105], "sigmoid": [13, 20, 54, 88, 91, 92], "xxxxxxxxxxxxxx": 13, "custom_fn": 13, "lambda": [13, 21, 22, 23, 28, 63, 76, 83, 88, 91], "gaussian": [13, 20], "unit": [13, 20, 54, 64, 67, 72, 82, 83, 84, 96, 103, 106], "write": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 41, 54, 58, 61, 62, 63, 65, 66, 67, 69, 71, 72, 74, 75, 79, 81, 82, 83, 85, 88, 90, 93, 102, 109], "result": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 45, 48, 54, 65, 67, 68, 70, 71, 72, 74, 75, 78, 80, 81, 82, 83, 84, 85, 88, 91, 96, 103, 105], "broadcast": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 70, 72, 74, 75, 84, 85, 88], "y": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 54, 69, 70, 74, 82, 83, 84, 85, 86, 88, 90], "138": 13, "165": [13, 23], "native_arrai": [13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 34, 35, 40, 44, 80, 83, 84], "3": [13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 54, 61, 64, 67, 68, 69, 70, 72, 74, 76, 83, 84, 88, 90, 91, 92, 93, 109], "126": [13, 19, 24, 34], "06": [13, 17, 20, 22, 38, 40, 84, 91], "b": [13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 54, 55, 58, 59, 66, 67, 69, 70, 71, 74, 79, 83, 87, 88, 89, 91, 92, 93, 94, 98], "841": [13, 19], "95": [13, 20, 22, 30], "166": 13, "159": [13, 23], "leaky_relu": 13, "alpha": [13, 19, 20, 82, 83], "leaki": [13, 20], "rectifi": [13, 20], "neg": [13, 16, 19, 20, 24, 26, 30, 35, 70, 79, 81], "slope": [13, 20], "relu": [13, 20, 54, 83, 91, 92], "39": [13, 19, 20, 22, 24, 34], "85": [13, 19, 20, 21, 22, 23, 30], "17": [13, 16, 19, 20, 21, 22, 23, 24, 28, 30, 70, 74], "7": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 61, 65, 70, 71, 74, 79, 81, 84], "48": [13, 19, 20, 21, 22, 24, 28, 34], "88": [13, 19, 22, 24, 30, 34], "32": [13, 17, 19, 20, 21, 23, 24, 30, 31, 34, 54, 71, 91, 107], "24000001": 13, "40000001": [13, 32], "04": [13, 16, 17, 19, 21, 22, 23, 84], "log_softmax": 13, "axi": [13, 16, 18, 20, 21, 23, 24, 25, 26, 30, 31, 33, 34, 35, 48, 70, 72, 74, 76, 78, 79, 81, 82, 84, 86, 88, 90, 93, 95], "would": [13, 18, 20, 26, 54, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 96, 102, 108], "perform": [13, 16, 19, 20, 21, 23, 24, 27, 28, 34, 35, 38, 58, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 96, 99, 102, 103, 104, 105, 106, 107, 109], "98": [13, 19, 22, 24, 28, 31, 34], "703": 13, "683": 13, "41": [13, 19, 20, 21, 24, 34], "408": 13, "68": [13, 16, 19, 20, 29], "18": [13, 19, 20, 24, 30, 34, 70, 74, 76], "31": [13, 16, 19, 20, 21, 24, 91], "313": 13, "437": 13, "mish": 13, "regular": [13, 20, 24, 64, 65, 82, 102], "monoton": 13, "30340147": 13, "86509842": 13, "40337825": 13, "56114835": 13, "20788449": 13, "30883577": 13, "28903052": 13, "10714479": 13, "269": [13, 20], "731": [13, 20], "881": [13, 19, 20], "214": [13, 20], "978": [13, 19, 20], "891": [13, 20], "846": [13, 20], "985": [13, 20], "001": [13, 17, 20, 22, 29, 91, 92], "softmax": [13, 23, 54], "422": 13, "155": [13, 23], "0768": [13, 19], "231": 13, "693": [13, 19, 25], "softplu": [13, 86], "beta": [13, 20, 29, 86], "threshold": [13, 19, 20, 86], "format": [13, 17, 18, 20, 21, 23, 34, 38, 54, 61, 66, 72, 73, 74, 75, 76, 82, 88, 90, 91, 98, 100, 102, 103], "abov": [13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 54, 61, 64, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 102, 107], "revert": 13, "3461": [13, 20], "6491": [13, 20], "535": [13, 20], "42": [13, 19, 20, 22, 24, 29, 30, 34, 54, 88, 93], "22": [13, 19, 20, 23, 24, 28, 31, 34, 70], "09": [13, 19, 22, 23], "13": [13, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 70, 74], "e": [14, 16, 17, 18, 19, 20, 24, 26, 28, 30, 32, 33, 34, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 76, 82, 84, 88, 91, 96, 97, 98], "718281828459045": 14, "ieee": [14, 17, 19, 57], "754": [14, 17, 19, 57], "represent": [14, 17, 18, 19, 20, 21, 95, 100, 101, 103, 107, 108], "euler": [14, 95], "inf": [14, 19, 20, 21, 24, 72], "infin": [14, 17, 19, 20, 21, 24, 34, 35, 67, 75], "nan": [14, 17, 19, 20, 21, 32, 34, 35, 67, 72, 75, 85], "Not": [14, 20, 69, 83, 91, 92, 96], "newaxi": 14, "alia": [14, 63, 82], "index": [14, 16, 18, 20, 21, 26, 28, 31, 32, 33, 40, 52, 61, 70, 71, 79, 83, 84, 90, 102], "pi": [14, 20], "141592653589793": 14, "mathemat": [14, 19, 24, 72, 82, 86, 102, 108], "\u03c0": [14, 19, 61], "ifels": 15, "cond": [15, 20, 96], "body_fn": 15, "orelse_fn": 15, "var": [15, 27, 34, 48, 74, 88], "whileloop": 15, "test_fn": [15, 41, 54], "if_els": 15, "while_loop": 15, "nestedsequ": 16, "protocol": 16, "_t_co": 16, "arang": [16, 20, 21, 24, 34, 54, 72, 109], "evenli": [16, 20, 23, 26], "space": [16, 20, 21, 22, 57, 86], "within": [16, 20, 30, 54, 63, 65, 68, 71, 82, 83, 84, 92, 96, 98, 99, 103], "interv": [16, 20, 24, 26, 30, 35, 65], "half": [16, 30, 86], "open": [16, 30, 54, 56, 57, 58, 59, 61, 64, 65, 72, 75, 82, 83, 86, 95, 100, 101, 102, 104, 105], "other": [16, 17, 19, 20, 21, 30, 34, 54, 57, 60, 63, 64, 65, 67, 68, 70, 71, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 108, 109], "exclud": [16, 20, 30, 74, 88], "equival": [16, 19, 24, 81, 82, 86, 91, 93], "python": [16, 18, 19, 20, 21, 30, 55, 56, 57, 61, 62, 64, 65, 67, 68, 70, 71, 76, 77, 82, 84, 86, 88, 90, 91, 96, 97, 99, 102, 103, 104, 108, 109], "chosen": [16, 19, 31, 63, 71, 82], "ml_framework": 16, "rather": [16, 18, 21, 57, 65, 67, 70, 72, 75, 81, 82, 83, 84, 85, 93, 96, 98, 101, 102], "than": [16, 17, 18, 19, 20, 21, 24, 26, 30, 31, 32, 34, 57, 60, 65, 67, 70, 71, 72, 74, 76, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 96, 99, 100, 101, 102, 108, 109], "see": [16, 17, 19, 20, 24, 31, 32, 34, 35, 54, 56, 59, 61, 63, 64, 65, 67, 68, 70, 71, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 88, 90, 91, 95, 96, 98], "linspac": [16, 78, 86, 88, 109], "certain": [16, 54, 64, 65, 67, 72, 76, 79, 84, 86, 96, 106], "inclus": [16, 20, 30, 59, 69, 81, 86], "exclus": [16, 21, 30, 34, 70, 72, 79, 85, 93, 106, 108], "distanc": 16, "two": [16, 17, 19, 20, 21, 24, 26, 32, 58, 63, 64, 67, 68, 72, 74, 75, 82, 83, 84, 86, 87, 91, 93, 99, 107], "adjac": 16, "mai": [16, 18, 19, 20, 21, 24, 32, 33, 34, 58, 62, 63, 64, 65, 67, 70, 71, 72, 79, 81, 82, 83, 84, 89, 90, 92, 109], "empti": [16, 20, 21, 22, 24, 28, 34, 35, 63, 64, 68, 72, 73], "infer": [16, 17, 20, 21, 23, 26, 66, 69, 72, 73, 80, 84, 88, 93, 100, 101, 104, 106], "those": [16, 17, 21, 24, 26, 28, 56, 63, 64, 65, 68, 70, 71, 72, 80, 82, 83, 84, 86, 99], "one": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 34, 48, 54, 57, 58, 63, 64, 65, 67, 68, 69, 70, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 93, 96, 102, 103, 105, 108], "more": [16, 17, 19, 20, 24, 26, 32, 54, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 108, 109], "dimension": [16, 20, 24, 26, 31, 34, 35, 88, 99, 102, 109], "ceil": [16, 19, 81], "sign": [16, 19, 20, 24, 32, 34, 57, 64, 88, 93], "conform": [16, 17, 19, 20, 24, 26, 31, 32, 33, 34, 35, 75], "api": [16, 17, 19, 20, 24, 26, 31, 32, 33, 34, 35, 54, 55, 56, 64, 66, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 91, 96, 97, 98, 100, 102, 104, 107, 109], "docstr": [16, 17, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 61, 62, 63, 66, 77, 78, 79, 82, 85], "extens": [16, 17, 19, 24, 26, 31, 32, 33, 34, 35, 54, 60, 62, 64, 65, 75, 84, 99, 102, 109], "noqa": [16, 17, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 83], "both": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 38, 54, 61, 65, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 84, 86, 88, 90, 91, 92, 93, 95, 96, 102, 105, 107, 108, 109], "descript": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 63, 75], "hint": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 63, 68, 75, 78, 79, 81, 82, 85], "assum": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 54, 61, 67, 69, 71, 72, 75, 83, 84, 86, 90, 91, 96], "simplic": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 75, 86, 92, 95], "nestabl": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 66, 74, 75, 81, 84, 97], "therefor": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 54, 56, 60, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 96, 99, 102, 108], "accept": [16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 54, 64, 65, 68, 70, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 90, 97, 100], "float64": [16, 17, 20, 30, 40, 72, 83, 84], "obj": 16, "copi": [16, 17, 18, 20, 21, 26, 28, 33, 61, 64, 65, 67, 69, 71, 72, 75, 82, 83, 88, 95, 96], "convert": [16, 17, 18, 19, 20, 21, 24, 28, 40, 54, 58, 63, 68, 80, 82, 84, 88, 96, 97, 100, 101, 108], "typevar": 16, "supportsbufferprotocol": 16, "ndarrai": [16, 20, 21, 63, 68, 72, 73, 78, 81, 82, 83, 85, 86, 88, 90, 93, 97], "boolean": [16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 34, 45, 70, 82, 84, 86], "interpret": [16, 71, 103], "asarrai": [16, 20, 21, 23, 32, 80, 81, 82, 83], "39999998": [16, 32], "5999999": [16, 23], "0999999": 16, "10000038": 16, "np": [16, 19, 20, 21, 28, 40, 54, 63, 68, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 97], "c": [16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 55, 57, 58, 59, 64, 66, 70, 74, 79, 86, 87, 88, 89, 91, 96, 97, 98, 102, 106, 107, 109], "90786433e": 16, "310": 16, "asarray_handle_nest": 16, "fn": [16, 17, 18, 20, 21, 28, 38, 40, 48, 51, 52, 76, 82, 88], "asarray_infer_devic": 16, "asarray_to_native_arrays_and_back": 16, "copy_arrai": 16, "to_ivy_arrai": 16, "depend": [16, 17, 19, 20, 21, 24, 31, 33, 54, 57, 60, 63, 64, 65, 72, 75, 80, 81, 82, 83, 84, 86, 88, 96, 100, 102, 103], "static_copy_arrai": 16, "nativeshap": [16, 20, 21, 23, 26, 30], "uniniti": 16, "empty_lik": [16, 86], "deafult": [16, 31], "ey": [16, 20, 23, 86, 93], "n_row": [16, 20], "n_col": [16, 20], "k": [16, 20, 21, 23, 24, 28, 30, 31, 54, 66, 67, 82, 83, 88, 98, 102], "ones": [16, 18, 19, 20, 22, 23, 54, 68, 71, 74, 78, 84, 90, 91, 102], "diagon": [16, 20, 24], "elsewher": [16, 20, 31, 64], "main": [16, 20, 24, 61, 64, 67, 70, 77, 80, 100, 102, 103, 108], "ident": [16, 18, 21, 24, 28, 56, 58, 70, 79, 80, 82, 83, 85, 86, 90, 91, 96, 97], "replac": [16, 20, 21, 26, 30, 57, 61, 65, 70, 72, 73, 74, 80, 82, 84, 90, 93, 96, 109], "x1": [16, 17, 18, 19, 20, 21, 24, 31, 33, 40, 48, 54, 67, 72, 74, 76, 78, 81, 82], "intdtyp": [16, 17], "int32": [16, 17, 18, 20, 21, 30, 31, 34, 72, 82, 84, 88], "suppos": [16, 21, 84], "numrow": 16, "numcolumn": 16, "a1": 16, "from_dlpack": 16, "anoth": [16, 17, 54, 57, 63, 64, 65, 70, 72, 76, 79, 80, 81, 82, 84, 86, 88, 90, 93, 97, 102, 108], "__dlpack__": [16, 18], "view": [16, 20, 64, 65, 76, 102], "interchang": [16, 26], "detail": [16, 20, 32, 54, 63, 65, 67, 69, 70, 71, 78, 79, 80, 82, 83, 84, 85, 88, 90, 91, 92, 104, 108], "full": [16, 17, 19, 21, 23, 24, 40, 45, 54, 57, 58, 65, 72, 75, 76, 78, 82, 84, 86, 88, 96, 100, 102, 108], "fill_valu": [16, 19, 31, 48, 72, 83, 85], "everi": [16, 20, 21, 60, 61, 63, 65, 67, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 92, 102], "99": [16, 19, 20, 21, 22, 34], "full_lik": [16, 85], "scalar": [16, 19, 20, 21, 24, 72, 82, 96, 102], "datatyp": [16, 17, 38, 85], "000123": 16, "2324": 16, "234": [16, 19, 23], "123": [16, 21, 84], "23": [16, 19, 20, 23, 24, 28, 31, 54, 84, 88], "15": [16, 17, 19, 20, 21, 23, 24, 26, 30, 31, 32, 34, 40, 64, 74, 105], "num": [16, 65, 78, 88], "along": [16, 18, 20, 21, 24, 25, 26, 27, 30, 31, 33, 34, 35, 40, 54, 63, 74, 81, 85, 86, 88, 102], "entri": [16, 20, 26, 28, 64, 71, 84, 102], "oper": [16, 17, 19, 20, 21, 23, 54, 56, 63, 64, 67, 68, 70, 72, 73, 74, 75, 76, 79, 81, 82, 84, 86, 88, 91, 92, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109], "33333337": [16, 22], "66666663": 16, "25": [16, 19, 20, 21, 24, 25, 28, 29, 34, 70], "75": [16, 19, 20, 21, 24, 28, 30], "gpu": [16, 18, 54, 65, 73, 90, 100, 102, 105, 106, 107], "logspac": [16, 88], "log": [16, 19, 20, 65, 70, 71, 74, 79, 81, 82, 84, 86, 88, 91], "on_valu": 16, "off_valu": 16, "float32": [16, 17, 20, 21, 23, 24, 40, 54, 72, 74, 83, 84], "21": [16, 17, 19, 20, 24, 25, 28, 34], "5443469": 16, "46": [16, 19, 20, 28], "41588834": 16, "100": [16, 19, 20, 21, 24, 28, 54, 57, 58, 71, 84, 91, 92, 93, 96], "7827941": 16, "6227766": 16, "56": [16, 19, 20, 22, 23, 24, 34, 74], "23413252": 16, "01": [16, 19, 20, 21, 22, 24, 30, 69, 93], "02": [16, 19, 20, 21, 22, 29, 30, 83], "03": [16, 19, 21, 22, 23, 24], "464": [16, 19], "15888336": 16, "1000": [16, 54, 91], "2154": 16, "43469003": 16, "10000": 16, "meshgrid": 16, "spars": [16, 25], "xy": 16, "coordin": [16, 19, 20, 31], "matric": [16, 20, 23, 24, 95, 102], "arbitrari": [16, 17, 22, 70, 78, 79, 81, 82, 84, 92, 96, 103, 108], "grid": [16, 74, 84, 95], "conserv": 16, "memori": [16, 18, 20, 23, 26, 54, 71, 72, 73, 81, 82, 86, 88, 94, 96, 102, 104, 105, 106], "cartesian": 16, "ij": [16, 34], "effect": [16, 20, 22, 34, 57, 63, 68, 70, 71, 75, 78, 81, 86, 96], "n": [16, 20, 23, 24, 26, 28, 30, 31, 34, 35, 54, 66, 84], "rank": [16, 20, 24, 26, 31, 35, 76], "ni": 16, "len": [16, 20, 24, 54, 70, 71, 81, 82, 84, 90, 93], "xi": 16, "n1": 16, "n2": 16, "n3": 16, "nn": [16, 54, 83, 86, 93, 103], "accordingli": [16, 19, 24, 31, 32, 34, 35, 77, 82, 88], "m": [16, 20, 24, 28, 30, 54, 60, 61, 64, 65, 66, 71, 88], "similarli": [16, 20, 69, 72, 82, 86, 90, 108], "three": [16, 20, 65, 70, 71, 74, 82, 84, 86, 87, 88, 103, 108], "xv": 16, "yv": 16, "one_hot": [16, 54, 93], "hot": [16, 54], "locat": [16, 30, 33, 63, 65, 69, 73, 82, 83, 84, 85, 100], "while": [16, 17, 19, 20, 23, 32, 34, 41, 56, 57, 63, 64, 65, 68, 69, 71, 72, 74, 77, 78, 81, 82, 83, 84, 86, 90, 92, 93, 96, 102, 108, 109], "scatter": [16, 21, 86, 109], "j": [16, 20, 21, 24, 34, 65, 66, 98], "inner": [16, 24, 27, 63, 81], "most": [16, 24, 54, 57, 62, 63, 64, 68, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 96, 102, 103, 105, 106, 108, 109], "unless": [16, 20, 24, 69, 73, 81, 96], "overrid": [16, 68], "d_type": 16, "__new__": 16, "int64": [16, 17, 20, 31, 33, 34, 72, 82, 84, 88], "dev": [16, 18, 64, 73, 79, 90, 92], "ones_lik": [16, 69, 93], "y1": [16, 20], "x2": [16, 17, 18, 19, 20, 21, 24, 31, 40, 48, 67, 72, 74, 76, 78, 81, 82], "y2": 16, "x3": [16, 17, 21], "y3": 16, "tril": 16, "triangular": [16, 20, 24], "whose": [16, 19, 20, 21, 24, 26, 32, 34, 75, 84], "innermost": [16, 24], "mxn": [16, 24], "below": [16, 19, 20, 24, 54, 59, 61, 63, 64, 66, 67, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 100, 105, 107], "alloc": [16, 17, 63, 65, 96], "triu": 16, "zeros_lik": [16, 17, 19, 22, 23, 26, 82, 86], "defaultcomplexdtyp": 17, "complex_dtyp": 17, "defaultdtyp": 17, "defaultfloatdtyp": 17, "float_dtyp": 17, "defaultintdtyp": 17, "int_dtyp": 17, "defaultuintdtyp": 17, "uint_dtyp": 17, "as_ivy_dtyp": [17, 82], "dtype_in": [17, 20], "as_native_dtyp": 17, "astyp": [17, 23, 54, 72, 81, 82, 86], "irrespect": [17, 24, 70, 81, 90, 109], "promot": [17, 19, 20, 24, 26, 34, 67, 75, 76, 79], "rule": [17, 19, 20, 24, 26, 67, 68, 70, 71, 72, 74, 77, 78, 79, 84, 86, 103], "cast": [17, 20, 24, 34, 72, 79, 83, 88], "integr": [17, 20, 54, 62, 64, 66, 100, 102, 104, 105, 106], "implement": [17, 18, 19, 20, 24, 32, 33, 34, 54, 63, 66, 67, 68, 69, 70, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 105, 108, 109], "match": [17, 19, 20, 21, 38, 63, 68, 70, 74, 83, 103, 108], "newli": [17, 21, 65, 71, 81, 84], "alwai": [17, 19, 20, 21, 26, 54, 63, 65, 68, 69, 70, 72, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 96], "141": [17, 19], "718": 17, "618": 17, "14": [17, 19, 20, 21, 22, 23, 24, 26, 32, 34, 61, 70, 74, 84], "broadcast_arrai": 17, "against": [17, 20, 24, 31, 56, 84, 88, 96, 102], "mix": [17, 19, 20, 21, 23, 24, 25, 26, 29, 31, 34, 66, 74, 81, 84, 86, 88, 97, 102, 106, 108], "broadcast_to": [17, 72], "compat": [17, 19, 24, 26, 31, 34, 35, 54, 57, 69, 78, 82, 83, 85, 88, 96], "incompat": 17, "can_cast": [17, 72, 79, 82], "from_": 17, "accord": [17, 19, 20, 21, 24, 26, 34, 48, 61, 63, 64, 67, 72, 79, 82, 84], "occur": [17, 20, 31, 32, 67, 71, 76], "http": [17, 19, 20, 22, 24, 26, 34, 54, 60, 64, 67, 71, 72, 75], "org": [17, 19, 20, 22, 24, 26, 34, 54, 75], "_": [17, 19, 20, 21, 22, 24, 26, 28, 34, 60, 61, 70, 75, 77, 81, 84, 91], "api_specif": [17, 19, 26, 34, 75], "signatur": [17, 19, 20, 24, 26, 34, 57, 72, 73, 74, 75, 78, 81, 84, 85, 86, 99, 108], "data_type_funct": 17, "html": [17, 19, 20, 24, 26, 34, 57, 61, 75], "uint8": [17, 72, 84], "int16": [17, 34, 72, 82, 84, 88], "check_float": 17, "helper": [17, 38, 39, 40, 41, 43, 44, 54, 63, 72, 76, 91, 97], "closest_valid_dtyp": 17, "closest": [17, 19, 84, 86], "xtype": 17, "float16": [17, 20, 24, 72, 84], "ytype": 17, "native_uint16": 17, "uint16": [17, 34, 72, 82, 84, 88], "default_complex_dtyp": 17, "as_n": [17, 18, 72], "complex": [17, 19, 20, 21, 24, 60, 63, 72, 74, 82, 84, 86, 91, 92, 93, 96, 97, 98, 100, 102, 104, 108, 109], "complexdtyp": 17, "els": [17, 20, 21, 28, 30, 38, 54, 63, 65, 67, 69, 72, 76, 79, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 96, 103], "complex64": 17, "set_default_complex_dtyp": 17, "complex128": 17, "4294": 17, "967346": 17, "default_dtyp": [17, 72, 79], "default_float_dtyp": [17, 72], "floatdtyp": 17, "set_default_float_dtyp": [17, 72], "default_int_dtyp": [17, 72], "set_default_int_dtyp": [17, 72], "4294967346": 17, "int8": [17, 72, 84], "default_uint_dtyp": 17, "uint": [17, 72, 83], "uintdtyp": 17, "set_default_uint_dtyp": 17, "uint64": [17, 34, 72, 84, 88], "uint32": [17, 34, 72, 84, 88], "dtype_bit": 17, "bit": [17, 19, 34, 62, 63, 64, 70, 71, 72, 74, 79, 88, 90, 108], "native_bool": 17, "finfo": [17, 84], "machin": [17, 20, 24, 57, 64, 67, 79, 95, 97, 100, 102, 104, 105, 106, 107, 108], "kind": [17, 19, 20, 34, 62, 82, 84, 86, 88, 96], "about": [17, 54, 58, 62, 63, 64, 65, 67, 71, 72, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 103, 104, 107], "inform": [17, 21, 22, 54, 62, 63, 64, 65, 67, 70, 71, 76, 84, 105], "followng": 17, "attribut": [17, 18, 20, 21, 41, 70, 72, 75, 80, 81, 82, 89, 90, 91, 92], "occupi": [17, 21], "ep": [17, 20, 24], "smallest": [17, 19, 20, 24], "larger": [17, 20, 26, 34, 84, 109], "largest": [17, 20, 24, 95], "min": [17, 19, 20, 21, 24, 34, 54], "smallest_norm": 17, "precis": [17, 19, 20, 24, 71, 72, 82, 86, 106], "resolut": [17, 65], "4028235e": 17, "38": [17, 19, 20, 24, 74], "7976931348623157e": 17, "308": [17, 84], "55040e": 17, "function_supported_dtyp": [17, 72], "recurs": [17, 18, 21, 28, 61, 64, 67, 70, 79, 92, 96], "acosh": [17, 19], "bfloat16": [17, 72, 82, 84, 85], "function_unsupported_dtyp": [17, 72], "unsupport": [17, 18, 21, 38, 41, 64, 77, 82], "set_backend": [17, 18, 20, 54, 67, 69, 72, 79, 80, 88, 90, 93], "iinfo": [17, 77], "encapsul": [17, 71], "2147483648": 17, "2147483647": 17, "34": [17, 19, 20, 21, 24, 30], "128": [17, 20, 21, 23, 24], "127": [17, 20], "84": [17, 18, 24, 29, 34], "314": [17, 20], "9223372036854775808": 17, "9223372036854775807": 17, "1800": 17, "89": [17, 19, 20, 24, 34], "76": [17, 19, 20, 24, 28, 34], "81": [17, 19, 24, 28, 30, 34, 84], "16": [17, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 34, 54, 65, 74, 91], "65535": 17, "4294967295": 17, "infer_default_dtyp": 17, "summari": [17, 21, 64, 65, 84], "invalid_dtyp": [17, 72], "un": [17, 88], "native_uint8": 17, "is_bool_dtyp": 17, "test": [17, 19, 20, 35, 38, 41, 54, 58, 62, 63, 66, 72, 74, 76, 77, 80, 82, 85, 96, 102], "is_complex_dtyp": 17, "is_float_dtyp": [17, 85], "arr": [17, 20, 72, 73], "is_int_dtyp": [17, 83, 85], "is_uint_dtyp": [17, 83, 85], "promote_typ": [17, 72], "type1": 17, "type2": 17, "array_api_promot": 17, "promote_types_of_input": [17, 72, 81], "common": [17, 20, 56, 63, 70, 72, 73, 74, 77, 79, 80, 82, 85, 86, 96, 99, 102, 109], "note": [17, 19, 20, 21, 24, 26, 32, 34, 60, 63, 64, 65, 68, 72, 74, 75, 82, 83, 84, 85], "might": [17, 21, 63, 64, 65, 71, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 88, 90, 91, 97], "unexpect": [17, 72], "result_typ": [17, 72], "arrays_and_dtyp": 17, "involv": [17, 19, 57, 59, 61, 66, 71, 72, 74, 86, 93, 102, 108], "d": [17, 20, 23, 24, 28, 54, 57, 58, 59, 64, 66, 70, 84, 91, 98], "set_default_dtyp": [17, 72, 79], "data_typ": [17, 72, 84, 85], "default_dtype_stack": 17, "unset_default_dtyp": 17, "native_uint64": 17, "type_promote_arrai": [17, 72], "share": [17, 54, 57, 69, 70, 74, 79, 82, 83, 84, 86, 88, 100, 101, 108], "correct": [17, 26, 34, 40, 54, 63, 65, 66, 70, 71, 72, 73, 77, 78, 79, 83, 84], "ret1": 17, "ret2": 17, "unset_default_complex_dtyp": 17, "reset": [17, 18, 21], "default_complex_dtype_stack": 17, "unset_default_float_dtyp": 17, "default_float_dtype_stack": 17, "unset_default_int_dtyp": 17, "unset_default_uint_dtyp": 17, "valid_dtyp": 17, "native_float16": 17, "defaultdevic": 18, "__enter__": 18, "enter": [18, 22, 64, 65, 68, 72, 73, 78, 80], "runtim": [18, 66, 79, 84, 86, 102], "relat": [18, 54, 60, 62, 64, 65, 76, 77, 82, 84, 85, 86, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "block": [18, 20, 22, 54, 65, 68, 70, 76, 77, 79, 84, 87, 89, 93, 96, 97, 107, 109], "_dev": 18, "__exit__": 18, "exc_typ": 18, "exc_val": 18, "exc_tb": 18, "exit": 18, "baseexcept": [18, 41], "wa": [18, 20, 21, 28, 34, 35, 54, 57, 65, 67, 71, 74, 82, 88, 90, 101, 102, 104], "traceback": [18, 84], "initialis": [18, 67, 82, 84], "tpu": [18, 73, 102, 105], "profil": 18, "save_dir": 18, "execut": [18, 21, 61, 64, 65, 70, 71, 74, 81, 84, 86, 88, 90, 93, 96, 97, 98, 102, 103, 104, 105, 106, 108], "code": [18, 21, 22, 23, 24, 26, 54, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109], "directori": [18, 21, 60, 61, 63, 64, 65, 71, 82, 84], "as_ivy_dev": [18, 90], "as_native_dev": 18, "instead": [18, 19, 63, 64, 65, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 96, 100, 102, 108, 109], "unmodifi": [18, 69, 72], "numpi": [18, 20, 21, 34, 38, 40, 54, 56, 57, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 76, 78, 81, 83, 84, 85, 86, 88, 90, 93, 97, 104, 109], "tensorflow": [18, 20, 21, 38, 45, 54, 57, 58, 62, 63, 64, 65, 67, 71, 72, 73, 78, 81, 82, 83, 84, 85, 86, 88, 93, 96, 97, 100, 103, 105, 106, 108, 109], "import": [18, 20, 45, 54, 57, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 81, 82, 83, 84, 85, 88, 90, 91, 93, 96, 98, 100, 102, 105, 106, 108], "clear_cached_mem_on_dev": 18, "clear": [18, 54, 56, 57, 58, 63, 65, 69, 72, 73, 74, 82, 86, 88, 90, 102], "cach": [18, 21, 79, 84], "default_devic": [18, 73, 76], "flag": [18, 40, 45, 65, 72, 80, 81, 82, 83, 84], "been": [18, 19, 21, 30, 63, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 84, 88, 90, 95, 96, 97, 102, 109], "avail": [18, 21, 54, 56, 64, 65, 70, 71, 73, 75, 76, 82, 84, 96, 107, 108], "to_devic": [18, 54], "dev_util": [18, 73], "util": [18, 48, 50, 51, 52, 53, 54, 60, 73, 76, 81, 85, 100, 108, 109], "93": [18, 21], "57": [18, 19, 20], "function_supported_devic": 18, "function_unsupported_devic": 18, "get_all_ivy_arrays_on_dev": [18, 73], "aliv": [18, 21, 73], "139740789224448": 18, "gpu_is_avail": [18, 54], "num_cpu_cor": [18, 73], "logic": [18, 19, 35, 63, 68, 71, 72, 73, 76, 80, 82, 84, 86, 90], "core": [18, 54, 56, 63, 64, 73, 84, 93, 100, 101, 102, 103, 107, 109], "request": [18, 20, 54, 58, 59, 63, 74, 85, 86], "physic": 18, "num_gpu": [18, 73, 84], "num_ivy_arrays_on_dev": 18, "count": [18, 20, 24, 26, 32, 35, 70, 74, 91], "percent_used_mem_on_dev": 18, "process_specif": 18, "percentag": 18, "In": [18, 19, 20, 21, 24, 26, 30, 54, 56, 58, 60, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 105, 108], "ram": 18, "process": [18, 57, 58, 59, 61, 64, 65, 70, 71, 79, 82, 83, 84, 86, 88, 93, 100, 101, 102, 105, 106, 108, 109], "alon": [18, 54, 60, 84], "94": [18, 20, 22], "036902561555": 18, "7024003467681645": 18, "7095597456708771": 18, "print_all_ivy_arrays_on_dev": 18, "attr_onli": 18, "set_default_devic": [18, 73], "set_split_factor": [18, 76], "split": [18, 20, 21, 23, 26, 40, 54, 59, 65, 71, 87, 88, 96, 109], "chunk": 18, "across": [18, 21, 23, 28, 31, 63, 67, 70, 72, 74, 76, 78, 79, 82, 84, 86, 100, 102, 107], "codebas": [18, 58, 59, 66, 72, 81, 82, 84, 85, 87], "split_factor": [18, 76], "configur": [18, 28, 60, 61, 64, 65, 71, 72, 80], "split_func_cal": 18, "func": [18, 20, 21, 22, 28, 40, 63, 67, 68, 74, 76, 81], "mode": [18, 19, 20, 21, 24, 60, 64, 65, 70, 74, 86, 96, 102, 105], "max_chunk_s": 18, "chunk_siz": 18, "input_ax": 18, "output_ax": 18, "feed": [18, 102, 103], "onc": [18, 24, 30, 58, 63, 64, 65, 70, 71, 72, 73, 74, 82, 84, 86, 88, 91, 96], "reduc": [18, 20, 21, 24, 31, 34, 35, 71, 76, 82, 86, 88, 90, 100, 104, 105, 106], "usag": [18, 57, 72, 84, 88, 96, 105], "unifi": [18, 54, 55, 57, 66, 67, 68, 72, 76, 82, 86, 88, 96, 98, 99, 100, 102, 106, 109], "concat": [18, 21, 26, 83, 86, 88], "maximum": [18, 19, 20, 21, 22, 24, 26, 28, 31, 34, 45, 65, 74, 81, 91, 109], "fed": [18, 92], "overwrit": [18, 20, 65, 81, 82, 88], "iter": [18, 20, 21, 26, 28, 58, 70, 88, 91], "ax": [18, 20, 21, 24, 26, 31, 34, 35, 37, 72, 74, 84, 85, 88, 90], "fist": 18, "comput": [18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 34, 40, 54, 57, 58, 64, 70, 71, 72, 79, 82, 84, 86, 88, 91, 96, 97, 98, 100, 102, 103, 105, 106, 108], "re": [18, 21, 24, 26, 31, 55, 56, 57, 59, 63, 64, 65, 66, 67, 72, 81, 82, 85, 86, 90, 93, 96, 102], "concatten": 18, "stream": [18, 54, 106], "move": [18, 20, 54, 61, 65, 85], "choos": [18, 19, 31, 32, 34, 63, 64, 65, 84, 89, 93, 109], "librari": [18, 19, 24, 32, 34, 54, 56, 57, 58, 59, 63, 64, 67, 86, 93, 94, 96, 97, 98, 99, 100, 102, 106, 109], "caveat": 18, "portabl": [18, 54, 100], "total_mem_on_dev": [18, 73], "total": [18, 20, 31, 34, 54, 58, 59, 65, 72, 73, 74, 76, 84, 86, 91, 92, 96], "amount": [18, 20, 25, 71, 73, 83], "gb": [18, 64], "53": [18, 22, 29], "66700032": 18, "589934592": 18, "tpu_is_avail": 18, "unset_default_devic": 18, "used_mem_on_dev": 18, "219563008": 18, "902400346": 18, "525205504": 18, "ab": [19, 20, 24, 28, 40, 68, 72, 80, 82, 84], "absolut": [19, 20, 24, 38, 40, 59, 64, 86], "magnitud": [19, 24], "minimum": [19, 20, 21, 26, 31, 34, 45, 99, 105, 109], "particular": [19, 64, 65, 67, 69, 71, 72, 74, 80, 81, 82, 84, 85, 86, 98, 102, 108], "aco": 19, "princip": [19, 20], "invers": [19, 20, 24, 48, 72, 95], "cosin": [19, 20], "domain": [19, 20, 75, 100, 102], "codomain": [19, 20, 75], "express": [19, 20, 48, 75, 77, 82, 88, 93, 102, 103], "radian": [19, 20, 75], "operand": [19, 20, 34, 68, 70, 75, 82], "greater": [19, 20, 24, 26, 30, 65, 83], "less": [19, 20, 24, 30, 34, 57, 65, 70, 72, 74, 76, 78, 81, 82, 84, 86, 87, 88, 102, 104], "hyperbol": 19, "area": [19, 20, 57, 81, 94, 98], "sector": [19, 57], "x1_i": [19, 67], "x2_i": [19, 67], "finit": [19, 20], "nonzero": [19, 31], "remain": [19, 20, 26, 28, 31, 65, 71, 74, 76, 85, 86, 96], "neither": [19, 22, 71, 82, 86], "nor": [19, 22, 71, 82, 106], "round": [19, 20, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "nearest": [19, 20], "2019": [19, 102, 105], "larg": [19, 20, 24, 64, 65, 71, 91, 102], "overflow": [19, 24, 34, 62, 72], "appropri": [19, 20, 31, 63, 65, 80, 84], "commut": 19, "associ": [19, 24, 40, 65, 72, 79, 80, 82, 83, 84, 96], "multipli": [19, 20, 23, 34, 65, 68, 69, 70, 74], "12": [19, 20, 21, 23, 24, 26, 29, 30, 31, 32, 34, 64, 69, 70, 72, 74, 85], "asin": 19, "sine": 19, "524": 19, "644": [19, 92], "201": 19, "305": [19, 20], "412": 19, "asinh": 19, "97": [19, 22], "08": [19, 20, 23, 38], "44": [19, 20, 21, 23, 24, 28, 31, 34], "809": 19, "199": 19, "569": 19, "733": 19, "37": [19, 20, 23, 24, 28, 30], "atan": 19, "tangent": [19, 75], "785": 19, "11": [19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 34, 70, 71, 72, 74, 85], "33": [19, 20, 21, 22, 23, 24, 28, 34], "atan2": 19, "quotient": 19, "notat": [19, 34, 71], "pair": [19, 20, 23, 24, 71], "quadrant": 19, "branch": [19, 65, 67, 71, 96, 102], "angl": [19, 20, 95], "rai": [19, 57], "origin": [19, 20, 24, 26, 34, 40, 54, 58, 63, 64, 65, 69, 71, 72, 80, 81, 82, 83, 88, 102, 103], "3\u03c0": 19, "588": 19, "36": [19, 20, 21, 24, 28, 34], "52": [19, 21, 22, 23, 24, 34], "719": 19, "197": 19, "915": 19, "29": [19, 21, 22], "983": 19, "45": [19, 20, 22, 24, 26, 34], "35": [19, 20, 23, 24, 31, 34], "696": 19, "993": 19, "atanh": 19, "549": [19, 23], "bitwise_and": [19, 76], "bitwis": 19, "AND": [19, 35], "underli": [19, 20, 24, 26, 70, 86, 102], "binari": [19, 20, 23, 25], "bitwise_invert": 19, "invert": [19, 20, 24], "flip": [19, 20, 26, 90, 91, 93], "bitwise_left_shift": 19, "shift": [19, 20, 26, 64, 65, 74, 78], "left": [19, 20, 21, 24, 31, 33, 64, 65, 67, 71, 72, 74], "append": [19, 20, 24, 26, 54, 61, 71, 76, 84, 88, 91], "right": [19, 20, 21, 24, 33, 59, 64, 65, 66, 67, 74, 76, 86, 91], "bitwise_or": 19, "OR": [19, 20, 35, 61, 64, 65], "bitwise_right_shift": 19, "arithmet": [19, 34, 82], "propag": [19, 34], "thu": [19, 20, 24, 60, 63, 71, 76, 82], "floor": [19, 20, 81], "40": [19, 20, 21, 22, 24, 28, 34, 71], "55": [19, 21, 24, 30, 34, 67], "170": 19, "27": [19, 20, 21, 23, 24, 28, 34], "43": [19, 20, 30, 31], "87": [19, 22], "200": [19, 20, 21, 91], "125": [19, 20, 24], "243": 19, "65": [19, 20, 21, 22, 24, 34], "225": 19, "255": [19, 54], "bitwise_xor": 19, "xor": 19, "doe": [19, 20, 21, 24, 26, 38, 57, 61, 63, 65, 66, 69, 71, 72, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 96, 97, 98, 102, 103, 109], "78": [19, 22, 24, 30, 34], "91": [19, 23, 24, 30, 34], "66": [19, 21, 22, 24, 34], "77": [19, 24, 34], "79": [19, 20, 21], "67": [19, 21, 22], "90": [19, 20, 24, 34, 57], "24": [19, 20, 21, 24, 28, 34, 40, 91], "alreadi": [19, 20, 24, 54, 63, 64, 65, 69, 70, 72, 78, 82, 86, 96, 102, 104, 109], "co": [19, 20, 21, 57, 62, 72, 88, 95], "54": [19, 20, 23, 24, 34, 74], "416": 19, "654": [19, 71], "96": [19, 20, 21, 22, 24, 34], "cosh": 19, "122": 19, "368": 19, "670": 19, "202": [19, 67], "548": 19, "1490": 19, "deg2rad": 19, "degre": [19, 20, 34, 101], "180": 19, "270": 19, "360": [19, 71], "71": 19, "28": [19, 20, 21, 22, 23, 24, 29, 34, 54], "50": [19, 20, 21, 24, 28, 31, 34, 90], "0262": 19, "873": 19, "0192": 19, "0384": 19, "0576": 19, "096": [19, 22], "115": [19, 20], "20": [19, 20, 21, 24, 30, 31, 34, 54, 71, 76, 86, 90], "351": 19, "divid": [19, 20, 21, 26, 68, 70, 74, 84], "dividend": 19, "667": [19, 21], "333": [19, 21, 23], "26": [19, 20, 21, 22, 23, 24, 28, 29, 34], "698": 19, "truth": [19, 38, 40, 82, 84], "erf": 19, "gauss": 19, "exponenti": [19, 20], "328": 19, "677": 19, "842": 19, "exp": [19, 20, 24, 82], "natur": [19, 24, 57, 68, 74, 76, 83, 95], "logarithm": [19, 24], "evalu": [19, 20, 22, 28, 35, 65, 70, 72, 86, 102], "72": [19, 20, 22, 24, 34], "expm1": [19, 72], "purpos": [19, 20, 24, 61, 65, 68, 70, 71, 74, 76, 78, 79, 80, 82, 84, 86, 87, 90, 97, 101, 103, 106, 107, 108], "accur": [19, 24], "close": [19, 24, 26, 63, 64, 65, 75, 82, 86, 102], "avoid": [19, 20, 21, 64, 65, 69, 70, 71, 72, 77, 80, 82, 84, 85, 102], "simpli": [19, 20, 54, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 86, 88, 92, 93, 96, 97, 103, 108], "fdlibm": 19, "compliant": [19, 34], "potenti": [19, 54, 63, 64, 65, 71, 72, 82, 87, 105], "147": 19, "632": 19, "20e": 19, "72e": 19, "00": [19, 20, 21, 24, 84], "greatest": [19, 20], "floor_divid": [19, 45], "greater_equ": 19, "isfinit": [19, 82], "out_i": [19, 20], "elementwise_funct": [19, 75], "999999999999": 19, "isinf": 19, "detect_posit": 19, "detect_neg": 19, "detect": [19, 28, 63, 64, 69, 70, 71, 77, 84, 91, 92], "isnan": 19, "isreal": 19, "real": [19, 20, 24, 34, 70, 104], "shown": [19, 20, 21, 63, 65, 67, 71, 72, 74, 76, 77, 78, 82, 83, 84, 85, 88, 90, 96], "0j": [19, 20], "3j": [19, 20], "5j": [19, 20], "7j": [19, 20], "6j": [19, 20], "ref": [19, 26, 75], "less_equ": [19, 76], "61": [19, 20, 22, 23, 25], "0953": 19, "log10": 19, "602": 19, "699": 19, "898": 19, "0414": 19, "log1p": 19, "742": 19, "69": [19, 20, 22, 24, 84, 91], "log2": [19, 20], "logaddexp": 19, "74": [19, 20, 24], "logical_and": [19, 82, 86, 109], "logical_not": [19, 72], "NOT": [19, 63], "recommend": [19, 34, 64, 65, 69], "logical_or": [19, 109], "logical_xor": 19, "use_wher": 19, "formula": 19, "clip": [19, 20, 21, 26, 70, 79, 81, 91, 93], "exce": [19, 20], "param": [19, 21, 48, 54, 93], "not_equ": 19, "pow": [19, 67], "expon": [19, 20, 21, 24], "unspecifi": [19, 24, 26, 81], "behavior": [19, 32, 61, 70, 71, 72, 82, 83, 84, 86, 88, 96, 99], "versu": 19, "even": [19, 20, 57, 58, 64, 65, 67, 71, 72, 73, 75, 78, 79, 81, 82, 83, 86, 90, 91, 92, 93, 96, 108], "odd": [19, 20, 62, 67], "52095687": 19, "92457771": 19, "49372482": 19, "22738838": 19, "156": 19, "5877228": 19, "rad2deg": 19, "63": [19, 20, 24, 28, 34], "189": 19, "252": 19, "315": 19, "378": 19, "1150": 19, "2890": 19, "172": 19, "229": 19, "573": 19, "10300": 19, "487": [19, 23], "344": 19, "reciproc": 19, "33333333": [19, 20], "remaind": [19, 20, 26, 67, 81], "modulu": [19, 81], "semant": [19, 56, 88, 93, 103], "do": [19, 20, 21, 28, 54, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 92, 93, 96, 97, 103, 108, 109], "That": [19, 64, 65, 68, 84, 90, 91, 92, 103], "primarili": [19, 65, 70, 102], "reason": [19, 57, 63, 65, 67, 68, 70, 71, 72, 74, 79, 81, 82, 85, 86, 88, 90, 108], "backward": [19, 20, 24, 35, 96], "decim": 19, "doc": [19, 20, 54, 59, 62, 63, 74, 75, 78, 84, 88, 91, 92], "stabl": [19, 20, 21, 33, 64, 69, 72, 82, 88, 96], "deliber": [19, 86], "omit": [19, 32, 78, 81, 82], "here": [19, 54, 62, 63, 64, 65, 67, 70, 71, 74, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 102, 103], "due": [19, 57, 60, 64, 67, 71, 76, 81, 82, 102], "imprecis": 19, "5654": 19, "034": 19, "433": [19, 22], "343": 19, "300": [19, 20, 21, 24, 84], "527": 19, "301": 19, "sin": [19, 21, 68, 88], "909": 19, "932": 19, "746": 19, "443": 19, "757": 19, "959": 19, "279": [19, 20, 21], "657": [19, 21], "sinh": 19, "232": 19, "51": [19, 20], "253": 19, "62": [19, 29, 30], "squar": [19, 20, 22, 24, 28], "indistinguish": 19, "infinit": 19, "83": [19, 20, 23], "32455532": 19, "89897949": 19, "169": 19, "49": [19, 20, 34], "47": [19, 20, 21, 22, 23, 30], "subtract": [19, 20, 68, 70, 74], "tan": [19, 21, 70, 75, 78, 79, 81, 82, 88], "19": [19, 20, 24, 28, 30, 33, 74], "546": [19, 23], "916": [19, 25], "996": 19, "143": [19, 74], "tanh": [19, 20, 88], "762": 19, "964": 19, "462": 19, "604": 19, "984": 19, "976": [19, 22], "997": 19, "995": 19, "trunc": 19, "025": 19, "0375": 19, "032": 19, "trunc_divid": 19, "toward": [19, 20, 26, 54, 60, 64, 85, 88, 98, 102], "nativesparsearrai": 20, "inherit": [20, 68, 70, 76, 90, 96, 97], "without": [20, 21, 26, 28, 32, 65, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 84, 85, 86, 90, 91, 92, 95, 96, 99, 102, 103, 104, 108], "care": [20, 57, 65, 82, 86, 93], "what": [20, 54, 57, 58, 60, 65, 66, 70, 71, 74, 75, 78, 80, 82, 83, 84, 87, 88, 90, 91, 92, 93, 95, 96, 98, 103, 104, 107], "isinst": [20, 82, 84, 85, 92, 93], "sparsearrai": 20, "coo_indic": 20, "crow_indic": 20, "col_indic": 20, "ccol_indic": 20, "row_indic": 20, "dense_shap": 20, "to_dense_arrai": 20, "adaptive_avg_pool1d": 20, "output_s": [20, 54], "pool": 20, "signal": [20, 101, 102], "sever": [20, 64, 65, 85, 96, 100, 106], "plane": 20, "l_in": 20, "spatial": [20, 23, 95], "l_out": 20, "adaptive_avg_pool2d": 20, "h_in": 20, "w_in": 20, "s_0": 20, "s_1": 20, "adjoint": [20, 24], "conjug": [20, 24], "allclos": 20, "rtol": [20, 24, 38, 40, 83], "atol": [20, 24, 38, 40, 83], "equal_nan": 20, "toler": [20, 24, 38, 40, 67, 83, 102], "typic": [20, 33, 67, 79, 101, 109], "rel": [20, 22, 24, 26, 33, 38, 40, 61, 65, 71, 83, 86, 102, 104], "compar": [20, 21, 32, 33, 40, 54, 69, 74, 76, 77, 83, 84, 91, 98, 100, 102, 108, 109], "smaller": [20, 21, 26, 34, 54, 65, 88], "altern": [20, 54, 63, 64, 81, 82, 91, 105], "1e10": 20, "00001e10": 20, "00001e": 20, "005": 20, "deg": 20, "yj": 20, "1j": [20, 21], "2j": 20, "35619449": 20, "78539816": 20, "135": [20, 21], "atleast_1d": 20, "ari": 20, "least": [20, 24, 54, 65, 68, 71, 72, 74, 79, 84], "whilst": [20, 93, 97, 102], "preserv": [20, 21, 22, 26, 84, 93, 96], "One": [20, 21, 26, 30, 68, 70, 72, 74, 83, 84, 88, 90, 91], "atleast": 20, "made": [20, 57, 60, 63, 65, 67, 68, 70, 71, 76, 81, 82, 85, 88, 90, 102], "necessari": [20, 26, 54, 64, 65, 68, 69, 70, 74, 80, 81, 82, 84, 86], "ary1": 20, "ary2": 20, "atleast_2d": 20, "atleast_3d": 20, "ndim": [20, 21, 24, 31, 37, 70, 76], "possibl": [20, 21, 22, 23, 26, 34, 54, 57, 59, 63, 64, 65, 67, 70, 72, 74, 75, 81, 82, 83, 84, 86, 88, 91, 95, 96, 100, 102, 108], "becom": [20, 26, 56, 58, 65, 70, 74, 76, 82, 96], "ary3": 20, "avg_pool1d": 20, "kernel": [20, 23, 86, 88, 96, 102, 105, 106], "avg": 20, "imag": [20, 21, 23, 54, 60, 61, 64, 85, 88, 89, 91, 93, 95, 102], "batch_siz": [20, 23, 30, 54, 91], "w": [20, 21, 22, 23, 28, 54, 88, 91, 92], "d_in": [20, 23], "reshap": [20, 21, 23, 24, 26, 37, 81, 82, 84, 86, 88, 90, 93], "avg_pool2d": 20, "h": [20, 21, 23, 28, 66, 70, 71, 98], "dimensio": 20, "avg_pool3d": 20, "volum": [20, 23, 60], "batch_norm": 20, "offset": [20, 24, 44], "present": [20, 56, 63, 65, 70, 72, 73, 78, 81, 88, 99, 100, 109], "bernoulli": 20, "logit": [20, 25, 54], "distrubut": 20, "paramter": 20, "event": [20, 84], "parameter": [20, 30], "independ": [20, 24, 30, 54, 67, 72, 74, 80, 88, 93, 100], "random": [20, 23, 54, 63, 73, 83, 84, 85, 93, 95, 102], "std": [20, 23, 30, 34, 74], "singl": [20, 21, 22, 30, 32, 58, 63, 64, 65, 67, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 96], "binar": 20, "outcom": 20, "comparison": [20, 24, 76], "binary_cross_entropy_with_logit": [20, 71], "pred": [20, 25, 54, 70, 79, 81], "pos_weight": 20, "reduct": [20, 21, 25, 35, 72, 76, 84, 90], "cross": [20, 24, 25, 54, 71], "entropi": [20, 25, 54], "loss": [20, 54, 71, 72, 79, 82, 85, 91, 92, 93, 102, 109], "label": [20, 25, 54, 63, 65, 67, 71, 82, 87, 88, 89, 93, 102], "predict": [20, 25, 54], "smooth": [20, 25], "463": 20, "022": 20, "059": 20, "601": 20, "015": 20, "868": 20, "908": 20, "672": 20, "002": 20, "029": 20, "144": 20, "953": 20, "027": 20, "263": [20, 21], "024": [20, 22], "822": 20, "bincount": 20, "minlength": 20, "bind_custom_gradient_funct": 20, "custom_grad_func": 20, "bind": [20, 63, 70, 101, 102], "custom": [20, 57, 71, 76, 83, 84, 92, 102, 106, 107, 108], "upstream": [20, 64, 65, 67], "r": [20, 22, 24, 26, 64, 65, 66, 83], "t": [20, 21, 22, 23, 28, 54, 57, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 96, 100, 102, 104], "broadcast_shap": 20, "celu": 20, "continu": [20, 54, 57, 58, 62, 63, 64, 66, 67, 77, 84, 96, 102], "differenti": [20, 95, 102], "compute_weight_mat": 20, "input_s": 20, "align_corn": 20, "kernel_fn": 20, "antialia": 20, "dim_scale_factor": 20, "condit": [20, 28, 31, 67, 72, 74, 76, 81, 95], "933034": 20, "conj": 20, "arrrai": 20, "355j": 20, "55j": 20, "copysign": 20, "chang": [20, 26, 28, 40, 54, 58, 60, 61, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 82, 83, 84, 85, 86, 88, 92, 96, 105, 108], "unsign": [20, 34, 72, 88], "corrcoef": 20, "rowvar": 20, "count_nonzero": 20, "keepdim": [20, 24, 26, 31, 34, 35, 76, 82, 88], "version": [20, 21, 24, 40, 54, 56, 57, 58, 64, 65, 71, 72, 75, 83, 88, 108, 109], "correctli": [20, 24, 31, 63, 64, 65, 68, 70, 72, 74, 76, 77, 78, 81, 83, 84, 86, 92, 96], "current_backend": [20, 76, 79, 85, 88], "prioriti": [20, 65, 81], "global_backend": 20, "py": [20, 54, 63, 64, 65, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 90, 92, 93], "jax": [20, 21, 32, 54, 57, 58, 62, 63, 64, 65, 67, 69, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 90, 93, 96, 103, 105, 108, 109], "dct": [20, 91], "discret": [20, 25], "tranform": 20, "liter": [20, 24, 33, 77], "lenght": 20, "transform": [20, 23, 54, 84, 93, 95, 97, 100, 102, 103, 104], "ortho": 20, "102": 20, "406": [20, 21], "22e": 20, "24e": 20, "91e": 20, "10e": 20, "16e": 20, "81e": 20, "280": 20, "70": [20, 24, 34, 57], "244": [20, 54], "container_n": 20, "container_typ": [20, 21], "container_norm": 20, "dft": 20, "onesid": 20, "dft_length": 20, "fourier": [20, 21], "need": [20, 21, 24, 26, 28, 54, 58, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 79, 81, 82, 83, 85, 86, 88, 90, 91, 95, 96, 98, 102, 103, 104, 108], "fft": [20, 63, 102], "By": [20, 24, 26, 34, 35, 72, 74, 76, 79, 81, 82, 88, 92, 93], "n_fft": 20, "becaus": [20, 64, 65, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 92, 93, 96, 102, 105, 108], "satisfi": [20, 74], "symmetri": 20, "enabl": [20, 22, 54, 57, 64, 65, 68, 70, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 93, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109], "fast": [20, 102], "rfft": 20, "invok": [20, 54], "batch_idx": 20, "signal_dim1": 20, "signal_dim2": 20, "signal_dimn": 20, "signal_dim": 20, "diagflat": 20, "padding_valu": 20, "align": [20, 64, 65, 82, 88, 90, 97, 108], "right_left": 20, "num_row": 20, "num_col": 20, "th": 20, "superdiagon": [20, 24], "subdiagon": [20, 24], "diff": [20, 74, 81], "prepend": [20, 24, 26], "differenc": 20, "taken": [20, 24, 71, 77, 82, 85, 93, 103], "prior": [20, 85], "expand": [20, 21, 26, 70], "direct": [20, 33, 63, 68, 82, 86, 92, 93, 95, 98, 102, 103, 106], "dirichlet": 20, "seen": [20, 56, 57, 71, 74, 76, 82, 84, 88, 90, 91, 108], "multivari": 20, "multinomi": [20, 30], "bayesian": 20, "10598304": 20, "21537054": 20, "67864642": 20, "48006698": 20, "07472073": 20, "44521229": 20, "55479872": 20, "05426367": 20, "39093761": 20, "19531053": 20, "51675832": 20, "28793114": 20, "12315625": 20, "29823365": 20, "5786101": 20, "15564976": 20, "50542368": 20, "33892656": 20, "1325352": 20, "44439589": 20, "42306891": 20, "dropout1d": 20, "ed": 20, "rest": [20, 61, 64, 71, 93, 104], "400": [20, 21, 24, 71], "500": [20, 21], "600": [20, 71], "dropout3d": 20, "4d": 20, "5d": 20, "dsplit": 20, "indices_or_sect": 20, "3rd": 20, "section": [20, 32, 54, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 98, 105, 108], "dstack": 20, "third": [20, 24, 32, 81, 96, 101, 102, 108], "eig": [20, 24], "eigenvali": 20, "eigenvector": [20, 24], "eigenvalu": [20, 24], "necessarili": [20, 68, 70], "37228132": 20, "82456484": 20, "41597356": 20, "56576746": 20, "90937671": 20, "72281323e": 20, "37228132e": 20, "88578059e": 20, "10000000e": 20, "76822128": 20, "70710678": 20, "6401844": 20, "eigh_tridiagon": 20, "eigvals_onli": 20, "select": [20, 34, 63, 64, 65, 71, 81, 84, 88, 90, 93, 96, 102, 105, 106], "select_rang": 20, "tol": 20, "hermitian": [20, 24], "tridiagon": 20, "imaginari": [20, 74], "super": [20, 54, 76, 88, 91, 92, 93], "cluster": [20, 96, 102], "converg": [20, 58], "li": [20, 56], "width": [20, 21, 23], "_2": 20, "eig_val": 20, "decreas": 20, "eig_vector": 20, "38196": 20, "61803": 20, "18749806": 20, "81250191": 20, "350609": 20, "56713122": 20, "06563006": 20, "74146169": 20, "74215561": 20, "0636413": 20, "56742489": 20, "35291126": 20, "56155": 20, "82842": 20, "eigval": 20, "elu": 20, "embed": [20, 102], "max_norm": [20, 21], "emb": 20, "exp2": 20, "eye_lik": 20, "everywher": 20, "t1": 20, "popul": [20, 30, 34, 72, 73, 84, 88, 108], "frac": 20, "44509285e": 20, "14423775e": 20, "17j": 20, "00000000e": 20, "11483250e": 20, "16j": 20, "33486982e": 20, "22464680e": 20, "95799250e": 20, "66951701e": 20, "02733949e": 20, "00j": 20, "49660576e": 20, "68178638e": 20, "01j": 20, "98912367e": 20, "21802426e": 20, "04549134e": 20, "18j": 20, "82842712e": 20, "86902654e": 20, "25501143e": 20, "32978028e": 20, "52068201e": 20, "71158374e": 20, "fix": [20, 54, 64, 65, 67, 72, 84, 85], "start_dim": [20, 54], "end_dim": [20, 54], "unchang": [20, 23], "read": [20, 26, 61, 63, 64, 71, 84, 86, 102], "fastest": [20, 26], "slowest": [20, 26], "f": [20, 26, 28, 54, 58, 59, 61, 65, 66, 70, 71, 77, 88, 91, 98], "fortran": [20, 26, 102, 106], "layout": [20, 26, 69, 82, 86], "fliplr": 20, "appear": [20, 21, 64, 65, 67, 82, 86], "revers": [20, 21, 24, 26, 34, 63, 70, 71, 72, 74, 75, 82, 86, 93, 96], "diag": [20, 24, 88], "flipud": 20, "float_pow": 20, "position": 20, "so": [20, 23, 28, 54, 56, 57, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 102, 103, 104, 106], "inexact": 20, "fmax": 20, "fmin": 20, "fmod": 20, "frexp": 20, "decompos": [20, 82], "mantissa": 20, "gamma": [20, 29], "gcd": 20, "glu": 20, "edge_ord": 20, "frist": 20, "estim": 20, "boundari": [20, 30, 102], "diment": 20, "80": [20, 24, 28, 34, 57, 76], "group_norm": 20, "num_group": 20, "group": [20, 23, 28, 67, 70, 79, 82, 83, 98, 101, 107], "separ": [20, 65, 68, 70, 71, 84, 88, 90, 91, 103, 107], "hamming_window": 20, "window_length": 20, "period": [20, 65, 85], "ham": 20, "symmetr": [20, 24, 70], "coeffici": [20, 24], "equat": [20, 24, 34, 102], "0800": 20, "3979": 20, "9121": 20, "5400": 20, "0000": 20, "8000": 20, "2000": 20, "handle_array_funct": 20, "wrap": [20, 21, 37, 40, 54, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 88, 90, 93, 96, 97, 98, 102, 103, 108, 109], "extract": [20, 61, 82, 85, 98, 102, 103, 108], "array_funct": 20, "handle_array_like_without_promot": 20, "handle_except": [20, 51], "handle_nest": [20, 70, 79, 80, 88], "handle_out_argu": [20, 72, 73, 78, 80, 81, 88], "handle_view": 20, "_base": [20, 28], "manipul": [20, 56, 82, 85, 86, 88, 93, 95, 102], "view_ref": 20, "hann_window": 20, "hann": 20, "han": 20, "taper": 20, "produc": [20, 23, 63, 72, 83, 84, 85, 103, 105], "hard_sigmoid": 20, "hard": [20, 65, 90, 102], "hard_silu": 20, "silu": 20, "hard_tanh": 20, "min_valu": [20, 83, 84], "max_valu": [20, 83, 84], "min_val": 20, "region": 20, "max_val": 20, "hardshrink": 20, "lambd": 20, "leav": [20, 26, 28, 44, 54, 63, 70, 72, 74, 75, 78, 79, 81, 82, 84, 91, 92], "heavisid": 20, "5000": [20, 24], "hsplit": 20, "horizont": [20, 21], "hstack": 20, "horizot": 20, "hypot": 20, "hypotenus": 20, "side": [20, 33, 64, 65], "triangl": 20, "4031": 20, "8102": 20, "i0": 20, "bessel": [20, 34], "modifi": [20, 63, 64, 65, 67, 69, 72, 73, 75, 77, 79, 83, 84, 85, 88], "26606588": 20, "2795853": 20, "88079259": 20, "ifft": 20, "30636606e": 20, "43029718e": 20, "53080850e": 20, "58689626e": 20, "24474906e": 20, "91858728e": 20, "01435406e": 20, "15318303e": 20, "15148591e": 20, "19j": 20, "25000000e": 20, "35378602e": 20, "02j": 20, "65404249e": 20, "17611649e": 20, "24320230e": 20, "79344813e": 20, "22374531e": 20, "45929364e": 20, "14208718e": 20, "07177031e": 20, "val": [20, 21, 81, 90], "4j": 20, "infer_devic": [20, 72, 73, 78, 80], "infer_dtyp": [20, 72, 73, 78, 80], "inputs_to_native_arrai": [20, 68, 80], "instance_norm": 20, "momentum": [20, 57], "running_mean": 20, "running_stddev": 20, "track_running_stat": 20, "statist": [20, 63, 72, 84, 85, 102], "stddev": 20, "82836342": 20, "58581817": 20, "29290909": 20, "41418171": 20, "14645454": 20, "20709085": 20, "30000001": [20, 21, 32], "52426404": 20, "integer_arrays_to_float": 20, "interp": 20, "xp": [20, 67], "fp": 20, "interpol": [20, 102], "scale_factor": 20, "recompute_scale_factor": 20, "bilinear": 20, "trilinear": 20, "nearest_exact": 20, "tf_area": 20, "bicub": 20, "mitchellcub": 20, "lanczos3": 20, "lanczos5": 20, "exact": [20, 32, 64, 65, 67, 74, 88], "corner": [20, 64, 65, 82], "pixel": 20, "edg": [20, 26, 67, 84, 102, 104, 108], "antialias": 20, "downsampl": 20, "resiz": 20, "is_ivy_sparse_arrai": 20, "is_native_dtyp": 20, "is_native_arrai": [20, 21, 90], "is_native_sparse_arrai": 20, "isclos": [20, 67], "999999e": 20, "isin": 20, "test_el": 20, "assume_uniqu": 20, "uniqu": [20, 27, 28, 32, 54, 56, 67, 70, 79, 82, 83, 86, 96, 105], "speed": [20, 56, 84, 105], "kaiser_bessel_derived_window": 20, "kaiser": 20, "suitabl": [20, 33, 64, 65, 70, 85, 102], "spectral": 20, "analysi": [20, 102, 103], "design": [20, 54, 56, 57, 66, 71, 72, 81, 82, 83, 86, 88, 90, 96, 98, 100, 102, 105, 106, 107], "00713103": 20, "70710677": 20, "99997455": 20, "kaiser_derived_window": 20, "00726415": 20, "9999736": 20, "18493208": 20, "9827513": 20, "kaiser_window": 20, "2773e": 20, "0172e": 20, "9294e": 20, "0367": 20, "4149": 20, "9138": 20, "5529": 20, "kron": [20, 109], "kroneck": 20, "composit": [20, 63, 66, 68, 69, 70, 72, 81, 83, 84, 86, 88, 92, 93, 96, 97, 103], "l2_normal": 20, "l2": [20, 24, 70], "whole": [20, 65], "4472": 20, "8944": 20, "lcm": 20, "60": [20, 21, 24, 28, 34, 71], "ldexp": 20, "lexsort": 20, "indirect": 20, "sort": [20, 24, 54, 62, 71, 85], "ascend": [20, 33], "primari": [20, 66, 69, 72, 81, 82, 84, 86, 96, 97], "secondari": 20, "describ": [20, 34, 63, 65, 71, 84, 88, 93, 102], "indirectli": 20, "log_sigmoid": 20, "logaddexp2": 20, "169925": 20, "outpu": 20, "clamp": [20, 93], "elementwis": [20, 24, 29, 79, 85, 88], "19722438": 20, "38629448": 20, "38629436": 20, "logsigmoid": 20, "31326175": 20, "69314718": 20, "31326169": 20, "20141329": 20, "40318608": 20, "48683619": 20, "46328247": 20, "59813893": 20, "43748799": 20, "lp_normal": 20, "lp": 20, "3333": 20, "6666": 20, "matrix_exp": 20, "7183": 20, "3891": 20, "max_pool1d": 20, "max_pool2d": 20, "ceil_mod": 20, "max_pool3d": 20, "median": [20, 82], "moveaxi": 20, "destin": 20, "reorder": [20, 21, 26], "These": [20, 24, 54, 56, 57, 58, 60, 62, 63, 64, 65, 67, 70, 72, 74, 75, 77, 78, 79, 81, 82, 84, 85, 88, 89, 91, 92, 93, 96, 97, 102, 106, 108, 109], "msort": 20, "multi_dot": 20, "148": 20, "nan_to_num": 20, "posinf": 20, "neginf": 20, "behaviour": [20, 62, 63, 65, 66, 67, 68, 70, 72, 75, 76, 78, 81, 82, 84, 85, 90], "itself": [20, 21, 28, 56, 64, 65, 67, 70, 71, 76, 81, 82, 92, 95, 96, 101, 102, 103, 108], "5e": [20, 22], "nanmean": 20, "anyth": [20, 65, 84, 85, 102, 103], "6666666666666665": 20, "nanmedian": 20, "overwrite_input": 20, "variant": [20, 68, 74, 75, 86], "minim": [20, 75, 81, 83, 86, 88, 100, 108], "content": [20, 61, 63, 81, 88, 91], "treat": [20, 40, 84, 89, 93], "undefin": [20, 77], "hold": [20, 21, 24, 34, 41, 54, 91, 103], "nansum": 20, "accumul": 20, "native_sparse_arrai": 20, "native_sparse_array_to_indices_values_and_shap": 20, "ndenumer": 20, "multidimension": [20, 102], "yield": [20, 31, 54, 71, 77], "ndindex": 20, "nextaft": 20, "0e": [20, 22], "4013e": 20, "4028e": 20, "outputs_to_ivy_arrai": [20, 68, 72, 73, 78, 80], "pad_width": [20, 26], "stat_length": 20, "constant_valu": 20, "end_valu": 20, "reflect_typ": 20, "before_1": [20, 26], "after_1": [20, 26], "before_n": [20, 26], "after_n": [20, 26], "shortcut": [20, 64], "linear_ramp": 20, "reflect": [20, 60, 65, 68, 84], "suppli": [20, 68], "ramp": 20, "mirror": [20, 63, 102], "padding_func": 20, "iaxis_pad_width": 20, "iaxi": 20, "style": [20, 31, 65, 102], "unalt": 20, "around": [20, 65, 68, 78, 79, 82, 85, 90, 96, 97, 100, 102, 109], "extend": [20, 65, 69, 75, 78, 82, 85, 96, 99, 102, 108], "increas": [20, 24, 26, 28, 56, 72, 76, 82, 85, 86, 102], "parametric_relu": 20, "parametr": [20, 67, 84, 102], "poisson": 20, "lam": 20, "quantil": 20, "q": [20, 23, 24, 28, 64, 65, 66, 83, 96], "midpoint": 20, "fraction": [20, 23], "surround": [20, 86], "whichev": 20, "work": [20, 28, 54, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 82, 83, 84, 85, 87, 88, 90, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "relu6": 20, "rot90": 20, "rotat": [20, 95], "selu": 20, "signbit": 20, "sinc": [20, 54, 57, 64, 65, 67, 68, 70, 71, 81, 82, 96, 102, 108], "217234": 20, "637": 20, "212": 20, "0909": 20, "0707": 20, "0579": 20, "softshrink": 20, "o": [20, 21, 54, 64, 66, 71, 88], "softsign": 20, "2806": 20, "4595": 20, "take_along_axi": 20, "slice": [20, 21, 28, 102], "bound": [20, 76, 84, 88, 108], "thresholded_relu": 20, "to_native_arrays_and_back": [20, 78, 80, 88], "top_k": 20, "retun": 20, "insid": [20, 41, 61, 64, 65, 68, 70, 72, 80, 84, 85, 108], "trapz": 20, "dx": 20, "trapezoid": 20, "happen": [20, 54, 58, 64, 65, 84, 91], "apart": 20, "definit": [20, 24, 54, 65, 68, 72, 79, 90], "tril_indic": 20, "col": 20, "retain": [20, 22, 97], "downward": 20, "upward": 20, "2xn": 20, "subarrai": 20, "triu_indic": 20, "unravel_index": 20, "unravel": 20, "vorbis_window": 20, "vorbi": 20, "complementari": [20, 100, 108], "38268346": 20, "38268352": 20, "14943586": 20, "8563191": 20, "14943568": 20, "vsplit": 20, "vertic": [20, 21, 65], "vstack": 20, "xlogi": 20, "0986": 20, "3863": 20, "zeta": 20, "hurwitz": 20, "0369": 20, "2021": [20, 54], "arraymod": 21, "array_mod": 21, "manag": [21, 22, 54, 58, 59, 81, 96, 104, 106], "all_equ": 21, "equality_matrix": 21, "arg_info": 21, "idx": [21, 54, 73, 90], "inspect": 21, "retriev": [21, 65, 82], "arg_nam": 21, "array_equ": 21, "x0": [21, 74], "assert_supports_inplac": 21, "assert": [21, 45, 66, 67, 77, 82, 83, 84, 85, 90, 91], "ivybackendexcept": [21, 51, 68, 76], "jaxlib": [21, 64, 68, 72, 73, 78, 85, 88, 90], "xla_extens": [21, 68, 72, 73, 78, 85, 88, 90], "devicearrai": [21, 68, 82, 88, 90], "cache_fn": [21, 79], "decor": [21, 45, 67, 68, 70, 72, 73, 79, 80, 81, 82, 83], "recalcul": 21, "later": [21, 63, 84, 102], "def": [21, 28, 54, 63, 64, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93], "my_sum": 21, "val1": 21, "val2": 21, "cached_sum": 21, "line_eq": 21, "slp": 21, "itc": 21, "cached_line_eq": 21, "clip_matrix_norm": 21, "downscal": 21, "894": [21, 29], "0353": 21, "424": 21, "58": 21, "176": 21, "339": 21, "271": 21, "168": 21, "391": 21, "849": 21, "clip_vector_norm": 21, "417": 21, "583": 21, "0667": 21, "133": 21, "267": 21, "131": 21, "394": [21, 30], "526": 21, "788": 21, "expos": [21, 54, 56, 71, 88, 92], "public": [21, 71, 90, 105], "current_backend_str": [21, 76, 88, 90], "default_v": 21, "catch_except": 21, "rev": 21, "with_cal": 21, "catch": [21, 84], "default_str": 21, "einops_rearrang": 21, "pattern": [21, 58, 72, 75], "axes_length": 21, "einop": [21, 57], "rearrang": 21, "arrang": 21, "46999979": 21, "66000009": 21, "93000001": 21, "29000092": 21, "33999991": 21, "6400001": 21, "96000004": 21, "36000013": 21, "51999998": 21, "67000008": 21, "vari": [21, 32, 70, 74, 82, 84, 90], "random_norm": [21, 23, 24, 30], "concaten": [21, 26, 83, 86, 88, 91], "960": 21, "1280": [21, 54], "deep": [21, 54, 56, 59, 62, 63, 65, 67, 70, 72, 83, 87, 90, 91, 100, 102, 105, 106, 108, 109], "3600": 21, "bottom": [21, 64, 71, 108], "h1": 21, "w1": 21, "einops_reduc": 21, "prod": [21, 34, 72, 74, 88], "40499985": 21, "61000061": 21, "1500001": 21, "29333329": 21, "53000069": 21, "39666676": 21, "20666695": 21, "einops_repeat": 21, "repeat": [21, 26, 60, 65, 68, 69, 74, 75, 77, 84], "simpl": [21, 54, 56, 63, 64, 65, 68, 70, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 90, 92, 93, 96, 97, 101, 102, 103, 104], "fourier_encod": 21, "max_freq": 21, "num_band": 21, "encod": [21, 54, 57, 91], "frequenc": [21, 65], "band": 21, "linearli": [21, 24], "oppos": [21, 72], "geometr": [21, 24], "seper": [21, 74, 83, 84], "0000000e": 21, "2246468e": 21, "4492936e": 21, "6739404e": 21, "function_supported_devices_and_dtyp": 21, "combin": [21, 24, 65, 68, 70, 72, 74, 76, 79, 84, 86, 93, 102], "function_unsupported_devices_and_dtyp": 21, "gather": [21, 109], "batch_dim": [21, 48], "let": [21, 34, 54, 58, 60, 68, 70, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 109], "gather_nd": 21, "get_all_arrays_in_memori": 21, "get_array_mod": 21, "set_array_mod": 21, "get_exception_trace_mod": 21, "exception_trace_mod": 21, "set_exception_trace_mod": [21, 76], "get_item": 21, "mask": [21, 23, 86], "get_min_bas": 21, "get_min_denomin": 21, "get_nestable_mod": 21, "set_nestable_mod": 21, "get_num_dim": 21, "as_arrai": 21, "get_queue_timeout": 21, "queue": [21, 91], "timeout": 21, "set_queue_timeout": 21, "get_referrers_recurs": 21, "max_depth": [21, 28], "seen_set": 21, "local_set": 21, "get_show_func_wrapper_trace_mod": 21, "trace": [21, 24, 54, 67, 72, 88, 96, 97, 103, 108], "set_show_func_wrapper_trace_mod": [21, 76], "get_tmp_dir": 21, "path": [21, 40, 45, 61, 64, 81, 82, 83, 102], "temporari": [21, 63, 72], "has_nan": 21, "include_inf": 21, "well": [21, 24, 54, 65, 71, 72, 76, 81, 82, 83, 84, 92, 93, 95, 101, 102, 103, 107], "inplace_arrays_support": 21, "inplace_decr": 21, "decrement": 21, "inplace_incr": 21, "increment": [21, 65, 85, 102], "ensure_in_backend": [21, 81], "keep_input_dtyp": 21, "thrown": [21, 68, 73, 76, 96], "ensur": [21, 38, 54, 63, 64, 65, 68, 72, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 102], "ivyexcept": [21, 22, 51, 76, 82], "doesn": [21, 61, 64, 69, 70, 71, 72, 74, 84, 86, 88, 96, 100], "inplace_variables_support": 21, "is_arrai": [21, 82], "is_ivy_arrai": [21, 81, 90], "is_ivy_contain": 21, "isscalar": 21, "match_kwarg": 21, "allow_dupl": 21, "best": [21, 54, 59, 62, 63, 64, 65, 66, 71, 72, 77, 84, 85, 105, 106], "multiprocess": [21, 91, 96], "fork": [21, 59, 67, 71], "forkserv": 21, "spawn": 21, "num_arrays_in_memori": 21, "print_all_arrays_in_memori": 21, "garbag": 21, "collector": 21, "consol": [21, 65, 84, 90], "scatter_flat": 21, "scatter_nd": [21, 86, 90], "convers": [21, 58, 63, 80, 87, 89, 93, 95, 96, 97, 101, 108], "rtype": 21, "frontend": [21, 40, 41, 45, 54, 62, 65, 66, 71, 72, 76, 84, 85, 86, 87, 89, 97, 102], "exept": 21, "set_min_bas": 21, "set_min_denomin": 21, "wait": [21, 54, 63, 65, 71, 82], "arriv": [21, 86], "set_shape_array_mod": 21, "shape_array_mod": 21, "set_tmp_dir": 21, "tmp_dr": 21, "tmp": 21, "my_tmp": 21, "stable_divid": [21, 79], "min_denomin": 21, "stabil": [21, 33, 72, 86], "_min_denomin": 21, "49999999999975": 21, "5015015015010504": 21, "000444502911705e": 21, "9999999999995j": 21, "857": 21, "stable_pow": 21, "min_bas": 21, "supports_inplace_upd": 21, "isn": [21, 65, 80, 91, 96, 104], "to_ivy_shap": 21, "to_list": 21, "possibli": [21, 82, 84, 96], "100000023841858": 21, "200000047683716": 21, "299999952316284": 21, "400000095367432": 21, "599999904632568": 21, "to_native_shap": 21, "to_numpi": [21, 54, 83, 91], "address": [21, 58, 63, 65, 67, 68, 88, 98, 100, 102, 108], "to_scalar": 21, "try_else_non": 21, "dictionai": 21, "__name__": [21, 54, 76], "hemant": 21, "unset_array_mod": 21, "unset_shape_array_mod": 21, "unset_exception_trace_mod": 21, "previous": [21, 61, 64, 69, 79, 84, 88], "unset_nestable_mod": 21, "unset_queue_timeout": 21, "unset_show_func_wrapper_trace_mod": 21, "value_is_nan": 21, "451": 21, "vmap": [21, 96, 102], "in_ax": 21, "out_ax": 21, "thereof": 21, "fun": [21, 28, 71], "extra": [21, 68, 72, 74, 80, 82, 83, 86, 88, 99, 104], "summaris": 21, "document": [21, 59, 62, 65, 71, 72, 74, 76, 82, 83, 84, 91, 93], "matmul": [21, 24, 69, 84, 85, 88], "gradienttrack": 22, "adam_step": 22, "dcdw": 22, "mw": [22, 92], "vw": [22, 92], "delta": 22, "cost": [22, 27, 86, 100], "en": [22, 24, 71], "wikipedia": [22, 24], "wiki": [22, 24], "stochastic_gradient_desc": 22, "dc": 22, "dw": 22, "adam_step_delta": 22, "2020105": 22, "22187898": 22, "24144873": 22, "10000002": 22, "20000005": 22, "00300002": 22, "00800002": 22, "86": 22, "0125": 22, "171": 22, "49e": 22, "74e": 22, "95e": 22, "82": [22, 76], "216": 22, "384": 22, "626": 22, "adam_upd": [22, 92], "mw_tm1": 22, "vw_tm1": 22, "ws_new": 22, "updated_weight": 22, "90000075": 22, "90000164": 22, "9000032": 22, "50000012e": 22, "00000063e": 22, "00000016e": 22, "92558873": 22, "92558754": 22, "92558718": 22, "92558694": 22, "92558682": 22, "92558861": 22, "00000086e": 22, "60000025e": 22, "01024": 22, "01003": 22, "01015": 22, "99936122": 22, "99936116": 22, "99936128": 22, "99936104": 22, "execute_with_gradi": [22, 54, 91, 92, 93, 96], "retain_grad": 22, "xs_grad_idx": [22, 40, 54], "ret_grad_idx": [22, 40, 54], "func_ret": 22, "33333334": [22, 24], "66666669": 22, "666666": 22, "333332": 22, "66666675": 22, "grad_fn": [22, 91], "933": 22, "gradient_descent_upd": [22, 27], "new_weight": [22, 91], "w_new": 22, "jac": 22, "jacobian": [22, 96, 102], "jac_fn": 22, "lamb_upd": 22, "784": 22, "639": 22, "361": 22, "708": 22, "445": 22, "6e": 22, "00036": 22, "00016": 22, "00049": 22, "lars_upd": 22, "layerwis": 22, "optimizer_upd": 22, "effective_grad": 22, "3e": 22, "92": [22, 24], "set_with_grad": 22, "compon": [22, 54, 57, 88, 98, 103, 105], "with_grads_stack": 22, "preserve_typ": 22, "unset_with_grad": 22, "delet": [22, 61, 65, 71], "remov": [22, 24, 26, 27, 28, 54, 61, 63, 69, 71, 72, 75, 79, 84, 86, 93, 102], "value_and_grad": 22, "value_grad": 22, "423332": 22, "conv": [23, 86], "channel_last": 23, "feature_group_count": 23, "x_dilat": 23, "fd": 23, "fh": 23, "fw": [23, 40, 84], "d_out": 23, "low": [23, 30, 70, 82, 86, 88, 98, 100, 102, 103, 104, 106, 108], "high": [23, 30, 58, 63, 82, 86, 91, 97, 98, 99, 100, 101, 102, 106, 108, 109], "channel_first": 23, "wio": 23, "conv1d_transpos": 23, "256": 23, "258": 23, "512": [23, 54], "hwio": 23, "conv2d_transpos": 23, "dhwio": 23, "cont_shap": 23, "conv3d_transpos": 23, "conv_general_dil": [23, 82], "conv_general_transpos": 23, "depthwise_conv2d": 23, "hwi": 23, "expand_dim": [23, 26, 54, 82, 88, 91], "inp": 23, "noise_shap": 23, "overfit": 23, "overal": [23, 61, 70, 72, 73, 75, 93, 98, 100, 101, 102], "turn": [23, 58, 64, 70, 74, 82, 84], "reproduc": [23, 45, 67], "42857146": 23, "85714293": 23, "28571415": 23, "14285755": 23, "5714283": 23, "4285717": 23, "2857151": 23, "1428566": 23, "19999981": 23, "39999962": 23, "71428585": 23, "8571434": 23, "245": 23, "278": 23, "105": [23, 24, 25], "4000001": 23, "49000001": 23, "55599999": 23, "21000004": 23, "incom": 23, "outer_batch_shap": 23, "inner_batch_shap": 23, "in_featur": 23, "out_featur": 23, "666": [23, 24], "4269": 23, "911": 23, "157": 23, "753": 23, "101": [23, 24, 28], "545": [23, 30], "547": 23, "124": [23, 76], "852": 23, "963": 23, "108": [23, 34], "352": 23, "196": 23, "306": 23, "lstm_updat": [23, 88], "init_h": [23, 88], "init_c": [23, 88], "recurrent_kernel": [23, 88], "recurrent_bia": [23, 88], "long": [23, 64, 65, 71, 72, 74, 76, 88, 102], "short": [23, 65, 72, 82, 85, 88, 92], "unrol": [23, 88, 91], "recurr": [23, 88, 102, 106], "multi_head_attent": [23, 81], "to_q_fn": 23, "to_kv_fn": 23, "to_out_fn": [23, 81], "to_q_v": 23, "to_kv_v": 23, "to_out_v": 23, "num_queri": 23, "num_kei": 23, "cont_feat_dim": 23, "numhead": 23, "applic": [23, 28, 54, 64, 72, 73, 80, 92, 99, 100, 102, 104, 106, 108], "out_feat_dim": 23, "5678761": 23, "65441847": 23, "18969631": 23, "40131447": 23, "19991851": 23, "40000153": 23, "68589532": 23, "40129396": 23, "40000817": 23, "31219625": 23, "25698996": 23, "31022024": 23, "16286421": 23, "30296469": 23, "16460133": 23, "59497029": 23, "40046397": 23, "14009905": 23, "81691194": 23, "10732293": 23, "40012637": 23, "73519301": 23, "40021262": 23, "7615059": 23, "40326414": 23, "30141067": 23, "19610119": 23, "32028484": 23, "1708746": 23, "34100914": 23, "14920235": 23, "40000009": 23, "73333335": 23, "num_or_size_split": [23, 26, 88], "scaled_dot_product_attent": 23, "feat_dim": 23, "score": [23, 54], "choleski": [24, 81], "decomposit": [24, 63, 109], "u": [24, 28, 54, 57, 59, 64, 65, 70, 71, 80, 81, 82, 83, 84, 85, 86, 92, 96], "l": [24, 65, 66], "625": 24, "73": [24, 30, 84], "577": 24, "707": 24, "axisa": 24, "axisb": 24, "axisc": 24, "vif": 24, "det": [24, 71], "293": 24, "46997": 24, "axis1": [24, 26], "axis2": 24, "eigendecomposit": 24, "qlq\u1d40": 24, "orthogon": 24, "eigh": 24, "namedtupl": [24, 32], "field": [24, 32, 54, 71, 95, 100, 108], "uplo": 24, "futur": [24, 54, 56, 58, 64, 65, 71, 72, 84, 85, 86, 90, 96, 108], "eigvalsh": 24, "done": [24, 62, 63, 64, 65, 67, 71, 74, 77, 82, 84, 91, 102], "45033181e": 24, "02829754e": 24, "54220343e": 24, "12647155e": 24, "38447177e": 24, "56155300e": 24, "26794919": 24, "7320509": 24, "51572949": 24, "17091519": 24, "3448143": 24, "88178420e": 24, "35898387e": 24, "46410179e": 24, "array_lik": 24, "inv": 24, "static_inv": 24, "0012": 24, "00342": 24, "000565": 24, "0104": 24, "0003": 24, "000981": 24, "00282": 24, "000766": 24, "0322": 24, "00237": 24, "000151": 24, "00101": 24, "00019": 24, "0214": 24, "00171": 24, "0107": 24, "0167": 24, "0472": 24, "0536": 24, "0177": 24, "000429": 24, "00762": 24, "lu_factor": 24, "pivot": 24, "lu": 24, "transpose_a": 24, "transpose_b": 24, "adjoint_a": 24, "adjoint_b": 24, "convent": [24, 34, 56, 69, 78, 85, 95, 108], "matrix_norm": 24, "ord": 24, "fro": 24, "nuc": 24, "frobeniu": 24, "nuclear": 24, "singular": [24, 72], "induc": 24, "47722558": 24, "776": 24, "6000004": 24, "matrix_pow": 24, "118": [24, 76], "134": 24, "matrix_rank": 24, "largest_singular_valu": 24, "defici": 24, "matrix_transpos": [24, 90], "outer": [24, 27, 63], "112": [24, 34], "104": [24, 34], "120": [24, 54], "pinv": 24, "moor": 24, "penros": 24, "pseudo": 24, "qr": [24, 83], "orthonorm": 24, "lead": [24, 57, 58, 71, 74, 85, 96], "complet": [24, 57, 63, 65, 67, 68, 70, 71, 74, 76, 82, 83, 84, 90, 91, 100], "slogdet": 24, "underflow": [24, 72], "logabsdet": 24, "howev": [24, 57, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 96, 101, 102, 108], "logsabsdet": 24, "although": [24, 68, 70, 82, 86, 100, 102], "again": [24, 57, 58, 65, 68, 69, 70, 74, 76, 81, 82, 84, 85, 86, 91, 93, 96, 107, 108], "subject": 24, "linalg": [24, 63, 81, 83], "609438": 24, "098611": 24, "6931472": 24, "0986123": 24, "solv": [24, 54, 67, 82, 89, 95, 104], "solut": [24, 54, 65, 70, 72, 83, 84, 86, 100, 104], "system": [24, 54, 64, 65, 69, 71, 72, 96, 100, 102, 105, 107, 109], "ordin": [24, 95], "svd": 24, "compute_uv": 24, "full_matric": 24, "usvh": 24, "vh": 24, "significantli": [24, 56, 71, 100], "faster": [24, 62, 97, 104, 107], "still": [24, 57, 63, 65, 68, 72, 75, 76, 81, 82, 84, 86, 92, 96, 99, 102, 108], "descend": [24, 33], "et": 24, "cetera": 24, "reconstruct": [24, 32, 83], "reconstructed_x": 24, "svdval": 24, "ss": 24, "615": 24, "866": 24, "864": 24, "tensordot": [24, 72], "contract": [24, 34], "tensorsolv": 24, "vander": 24, "vandermond": 24, "0x": 24, "Such": [24, 65, 79, 84], "progress": [24, 64, 65, 93], "alexandr": 24, "theophil": 24, "vecdot": 24, "invalid": [24, 26, 35, 64, 72, 77], "vector_norm": 24, "singleton": [24, 26, 31, 34, 35, 88], "l1": [24, 70, 91], "manhattan": 24, "euclidean": 24, "7416575": 24, "9000001": 24, "64158917": 24, "vector_to_skew_symmetric_matrix": 24, "skew": 24, "symmetric_matrix": 24, "cross_product": 24, "linear_algebra": [24, 85], "binary_cross_entropi": [25, 71], "223": 25, "357": 25, "511": 25, "cross_entropi": [25, 54, 70, 79, 81], "3862944": 25, "35667497": 25, "sparse_cross_entropi": 25, "793291": 25, "512926": 25, "x_min": [26, 93], "x_max": [26, 93], "outsid": [26, 73, 77, 79, 90, 107], "join": [26, 54, 76], "constant_pad": 26, "insert": [26, 28, 31, 33, 71], "resid": [26, 37, 82, 88, 92], "henc": [26, 32, 64, 70, 71, 84], "resolv": [26, 34, 65, 72, 88], "indexerror": [26, 51, 76], "container_axi": 26, "permute_dim": 26, "permut": 26, "repetit": [26, 76], "fit": [26, 82, 88, 98, 99, 102], "allowzero": 26, "never": [26, 65, 72, 82, 84, 86], "valueerror": [26, 51, 76], "reus": [26, 76, 84, 107], "buffer": [26, 96], "roll": [26, 70, 78], "beyond": [26, 75, 82, 108], "introduc": [26, 32, 56, 70, 72, 83, 84, 91], "restor": 26, "with_remaind": 26, "classivi": [26, 32], "squeez": [26, 102], "squeezabl": 26, "famili": 26, "intxx": 26, "floatxx": 26, "swapax": 26, "axis0": 26, "swap": 26, "tile": 26, "rep": 26, "unstack": [26, 70, 88, 91, 109], "unpack": [26, 77, 83, 84], "keep": [26, 62, 63, 64, 65, 67, 70, 71, 76, 82, 84, 85, 86, 91, 93], "zero_pad": 26, "manipulation_funct": 26, "fomaml_step": 27, "inner_cost_fn": 27, "outer_cost_fn": 27, "inner_grad_step": 27, "inner_learning_r": 27, "inner_optimization_step": 27, "inner_batch_fn": 27, "outer_batch_fn": 27, "average_across_step": 27, "inner_v": 27, "keep_inner_v": 27, "outer_v": 27, "keep_outer_v": 27, "return_inner_v": 27, "num_task": 27, "maml": 27, "loop": [27, 54, 69, 77, 96], "task": [27, 54, 59, 65, 82, 83, 95, 102, 108, 109], "0x7f0f22b10820": 27, "kept": [27, 65, 81, 85], "maml_step": 27, "vanilla": [27, 92, 102], "recev": 27, "reptile_step": 27, "cost_fn": 27, "reptil": 27, "receivng": 27, "all_nested_indic": 28, "include_nest": 28, "_index": 28, "extra_nest_typ": 28, "themselv": [28, 70, 72, 73, 75, 79, 82, 92, 99, 108], "far": [28, 73, 74, 89, 107, 108], "manual": [28, 63, 64, 65, 82, 84, 92], "decid": [28, 54, 63, 64, 72, 86], "go": [28, 54, 59, 60, 63, 64, 65, 66, 69, 71, 72, 74, 76, 82, 83, 84, 85, 87, 91, 96, 98, 102, 103, 107, 109], "deeper": [28, 56, 65, 66, 84, 87], "copy_nest": 28, "include_deriv": 28, "to_mut": 28, "deepli": [28, 96, 102], "mutabl": 28, "copied_nest": 28, "1337": 28, "duplicate_array_index_chain": 28, "find": [28, 32, 54, 56, 59, 61, 62, 63, 64, 65, 67, 71, 84, 86, 88, 91, 97], "duplic": [28, 69, 75, 77, 80, 83, 92, 108], "index_nest": [28, 79], "insert_into_nest_at_index": 28, "insert_into_nest_at_indic": 28, "onto": [28, 55, 56, 102], "special_squar": 28, "6666666666666667": 28, "special_pow": 28, "linear_model": 28, "map_nest_at_index": 28, "shallow": 28, "_result": 28, "placehold": [28, 65, 68, 77, 78, 97], "paramt": 28, "hh": 28, "map_nest_at_indic": 28, "ub": 28, "tb": 28, "multi_index_nest": 28, "repeatedli": [28, 71, 84], "nested_ani": 28, "check_nest": 28, "leaf": [28, 70, 79, 91], "via": [28, 65, 67, 70, 72, 73, 76, 81, 85, 86, 88, 90, 91, 95, 102], "conditon": 28, "nested_argwher": 28, "to_ignor": 28, "stop_after_n_found": 28, "nested_indic": 28, "nested_map": [28, 79], "_depth": 28, "_tuple_check_fn": 28, "_list_check_fn": 28, "_dict_check_fn": 28, "manner": [28, 56, 64, 73, 75, 82, 85, 91, 95, 96, 98, 100, 108, 109], "wherebi": [28, 63, 99], "travers": [28, 70, 72, 88], "lowest": [28, 30, 79, 96, 97, 99, 103, 107], "directli": [28, 54, 58, 65, 67, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 85, 86, 88, 90, 92, 93, 95, 96, 106, 107, 108], "nested_multi_map": 28, "index_chain": 28, "to_appli": 28, "prune_unappli": 28, "config": [28, 60, 64, 67, 71, 91, 103], "to_ivi": 28, "skip": [28, 61, 80, 84], "prune": [28, 41, 71], "leftmost": 28, "nest0": 28, "ivy_arrai": [28, 68, 82], "unappli": 28, "prune_empti": 28, "prune_nest_at_index": 28, "prune_nest_at_indic": 28, "set_nest_at_index": 28, "set_nest_at_indic": 28, "111": 28, "xyz": 28, "pqr": 28, "layer_norm": 29, "normalized_idx": 29, "post": [29, 64, 93], "0976": 29, "3452": 29, "2740": 29, "1047": 29, "5886": 29, "2732": 29, "7696": 29, "7024": 29, "2518": 29, "826": 29, "178": 29, "981": 29, "831": 29, "421": 29, "342": 29, "0427": 29, "299": 29, "217": 29, "203": 29, "population_s": 30, "num_sampl": 30, "unnorm": [30, 84], "ve": [30, 63, 64, 65, 84, 86, 87, 90, 97], "randint": [30, 32, 72], "uniformli": 30, "highest": 30, "22346112": 30, "0922": 30, "515": 30, "49671414": 30, "1382643": 30, "64768857": 30, "5230298": 30, "23415337": 30, "23413695": 30, "9213753": 30, "12818667": 30, "799": 30, "469": 30, "287": 30, "0366": 30, "random_uniform": [30, 73, 84, 88, 92], "26431865": 30, "475": 30, "878": 30, "861": 30, "929": 30, "789": 30, "519": 30, "0435": 30, "381": 30, "4608004": 30, "8458502": 30, "67270088": 30, "31128597": 30, "seed_valu": 30, "shuffl": 30, "argmax": [31, 54, 82], "select_last_index": 31, "occurr": [31, 32], "argmin": 31, "output_dtyp": 31, "argwher": [31, 77], "as_tupl": 31, "fewer": 31, "major": [31, 57, 72, 73, 83, 84, 96, 99, 102], "unique_al": 32, "dask": [32, 57], "difficult": [32, 65, 67, 72, 84, 96], "know": [32, 58, 65, 83, 84, 85, 103], "x_j": 32, "impli": [32, 84], "As": [32, 54, 56, 65, 68, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 96, 102, 107], "distinct": [32, 57, 64, 70, 75, 81, 82, 87, 102], "could": [32, 57, 58, 63, 64, 65, 67, 71, 72, 74, 80, 81, 82, 83, 84, 88, 90, 91, 92, 102, 107, 108], "inverse_indic": 32, "guarante": [32, 58, 68, 96], "aggreg": [32, 71], "fourth": 32, "1141": 32, "8101": 32, "9298": 32, "8460": 32, "2119": 32, "3519": 32, "6252": 32, "4033": 32, "7443": 32, "2577": 32, "3707": 32, "0545": 32, "3238": 32, "5944": 32, "0775": 32, "4327": 32, "62519997": 32, "40329999": 32, "59439999": 32, "74430001": 32, "81010002": 32, "84600002": 32, "92979997": 32, "unique_count": 32, "29999995": 32, "unique_invers": 32, "unique_valu": 32, "argsort": [33, 82], "maintain": [33, 56, 65, 67, 71, 82, 83, 84, 101], "searchsort": 33, "sorter": 33, "ret_dtyp": 33, "cumprod": [34, 82, 93], "cumul": [34, 95], "cumsum": [34, 72], "einsum": 34, "einstein": 34, "summat": 34, "seq": 34, "ii": [34, 65], "jk": 34, "ik": 34, "510": 34, "117": 34, "sentinel": 34, "90000004": 34, "30800003": 34, "freedom": [34, 69], "adjust": 34, "choic": [34, 54, 58, 64, 81, 82, 91, 102], "constitut": [34, 79, 88, 103], "commonli": [34, 76, 79], "statistical_funct": 34, "8164966": 34, "509902": 34, "unbias": 34, "07472222": 34, "00666667": 34, "11555555": 34, "08966666": 34, "12666667": 34, "simplicit": 35, "nested_arrai": 37, "nestedarrai": 37, "hardwar": [37, 57, 64, 86, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108], "classmethod": 37, "from_row_length": 37, "row_length": 37, "from_row_split": 37, "row_split": 37, "unbind": 37, "ivy_test": [38, 39, 40, 41, 43, 44, 45, 63, 64, 65, 67, 71, 83], "test_ivi": [38, 39, 40, 41, 43, 44, 45, 63, 64, 65, 71, 83, 84], "assert_all_clos": [38, 83], "ret_np": [38, 40, 83], "ret_from_gt_np": [38, 83], "ground_truth_backend": [38, 40, 41, 45, 83], "ground": [38, 40, 56, 82, 84], "mark": [38, 63, 65, 67, 84, 88], "fail": [38, 63, 64, 65, 67, 71, 72, 74, 77, 82, 83], "assert_same_type_and_shap": 38, "this_key_chain": 38, "check_unsupported_devic": 38, "input_devic": 38, "all_as_kwargs_np": [38, 40], "presenc": [38, 70, 81], "check_unsupported_device_and_dtyp": 38, "input_dtyp": [38, 40, 44, 83, 84], "check_unsupported_dtyp": 38, "test_unsupported_funct": 38, "value_test": 38, "ret_np_flat": 38, "ret_np_from_gt_flat": 38, "ret_from_np_gt_flat": 38, "available_framework": 39, "ground_truth": 39, "function_test": 40, "args_to_contain": 40, "array_arg": [40, 79], "as_list": 40, "compiled_if_requir": 40, "test_compil": [40, 44, 45], "convtru": 40, "nativeclass": 40, "counter": [40, 92], "create_args_kwarg": 40, "args_np": 40, "arg_np_val": 40, "args_idx": 40, "kwargs_np": 40, "kwarg_np_val": 40, "kwargs_idx": 40, "test_flag": [40, 83, 84], "on_devic": [40, 44, 83], "empty_func": 40, "flatten_and_to_np": 40, "flatten_fw_and_to_np": 40, "framework_compar": 40, "get_frontend_ret": 40, "get_ret_and_flattened_np_arrai": 40, "gradient_incompatible_funct": 40, "gradient_test": [40, 84], "rtol_": 40, "atol_": [40, 83], "gradient_unsupported_dtyp": 40, "kwargs_to_args_n_kwarg": 40, "num_positional_arg": [40, 44, 45, 83, 84], "port": [40, 58], "make_json_pick": 40, "test_frontend_funct": [40, 83], "fn_tree": [40, 41, 45, 82, 83, 84], "test_valu": [40, 83, 84], "all_alias": [40, 83], "alias": [40, 45, 63, 82, 83], "namespac": [40, 61, 63, 72, 80, 82, 83, 85, 88, 93], "test_frontend_method": [40, 83], "init_input_dtyp": [40, 83], "method_input_dtyp": [40, 83], "init_flag": [40, 83, 84], "method_flag": [40, 44, 83, 84], "init_all_as_kwargs_np": [40, 83], "method_all_as_kwargs_np": [40, 83], "frontend_method_data": [40, 83], "consum": [40, 70, 71, 78, 83, 84], "init_as_variable_flag": [40, 45], "dictat": [40, 68, 74, 78, 81], "init_num_positional_arg": [40, 45], "init_native_array_flag": 40, "with_v": 40, "ret_gt": 40, "test_funct": [40, 64, 65, 71, 83, 84], "fn_name": [40, 41, 45, 69, 83, 84], "return_flat_np_arrai": 40, "functiontestflag": [40, 44], "with_out": [40, 44, 80, 83, 84], "instance_method": [40, 44, 80, 84], "as_vari": [40, 44, 80, 83, 84], "as_variable_flag": [40, 45, 83], "native_array_flag": [40, 45, 83], "container_flag": [40, 44, 45], "test_method": 40, "class_nam": 40, "method_nam": [40, 43, 45, 83], "init_with_v": 40, "method_with_v": 40, "test_gradi": [40, 44, 45, 80], "method_as_variable_flag": [40, 45], "method_num_positional_arg": [40, 45], "method_native_array_flag": 40, "method_container_flag": [40, 45], "tthe": 40, "var_fn": 40, "holder": 41, "interruptedtest": 41, "test_interrup": 41, "tri": 41, "testdata": 41, "supported_device_dtyp": 41, "is_method": 41, "remove_all_current_framework": 41, "setup_api_test": 41, "test_data": 41, "setup_frontend_test": 41, "teardown_api_test": 41, "teardown_frontend_test": 41, "frontendmethoddata": 43, "ivy_init_modul": 43, "framework_init_modul": 43, "init_nam": 43, "test_parameter_flag": 44, "frontendfunctiontestflag": 44, "testflag": 44, "apply_flag": 44, "args_to_iter": 44, "frontendmethodtestflag": 44, "initmethodtestflag": 44, "methodtestflag": 44, "as_cont": 44, "build_flag": 44, "frontend_function_flag": 44, "searchstrategi": [44, 45, 84], "frontend_method_flag": 44, "function_flag": 44, "init_method_flag": 44, "testing_help": 45, "handle_frontend_method": [45, 83, 84], "class_tre": [45, 83], "init_tre": [45, 83], "init_native_arrai": 45, "min_siz": [45, 84], "max_siz": [45, 84], "_as_varaible_strategi": 45, "method_native_arrai": 45, "_given_kwarg": 45, "wrapper": [45, 68, 70, 72, 76, 80, 81, 82, 90, 97, 98, 102], "strategi": [45, 63, 80, 83], "handle_frontend_test": [45, 83, 84], "number_positional_arg": [45, 83], "test_with_out": [45, 83], "test_inplac": 45, "search": [45, 56, 62, 64, 70, 74, 84, 85], "handle_method": [45, 84], "method_tre": [45, 83, 84], "handle_test": [45, 84], "test_instance_method": 45, "ex": [45, 71], "hypothesi": [45, 63, 65, 67, 71, 80], "num_positional_args_method": 45, "check_al": 48, "messag": [48, 51, 53, 57, 65, 71, 74, 76, 77, 82, 88, 90], "check_all_or_any_fn": 48, "check_ani": 48, "check_dimens": 48, "check_elem_in_list": [48, 82], "elem": 48, "check_equ": [48, 82], "check_exist": 48, "check_fals": 48, "check_fill_value_and_dtype_are_compat": 48, "check_gather_input_valid": 48, "check_gather_nd_input_valid": 48, "check_great": 48, "allow_equ": [48, 76], "check_inplace_sizes_valid": 48, "check_isinst": 48, "allowed_typ": 48, "check_kernel_padding_s": 48, "kernel_s": 48, "padding_s": 48, "check_less": [48, 76], "check_one_way_broadcast": 48, "check_same_dtyp": 48, "check_shap": 48, "check_shapes_broadcast": 48, "check_tru": 48, "dynamic_import": 50, "import_modul": [50, 88], "packag": [50, 54, 60, 61, 64, 71, 76, 77, 82, 96, 102, 104], "ivyerror": [51, 54, 76], "attributeerror": [51, 76, 90], "ivynotimplementedexcept": 51, "notimplementederror": [51, 77], "add_array_spec": 52, "fn_array_spec": 52, "cprint": [53, 88], "color": 53, "green": [53, 64, 65], "warn": [54, 65], "publicli": 54, "yet": [54, 63, 64, 96], "readm": [54, 61, 96], "won": [54, 57, 58, 64, 65, 70, 93], "websit": [54, 57, 67], "faq": 54, "ai": [54, 100, 104], "your": [54, 57, 58, 59, 60, 61, 62, 63, 64, 67, 71, 75, 85, 86, 91, 92, 96, 102], "fingertip": 54, "ml": [54, 55, 57, 58, 59, 62, 82, 87, 88, 89, 91, 92, 93, 95, 98, 99, 100, 101, 102, 105, 107, 109], "model": [54, 91, 92, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109], "written": [54, 56, 64, 67, 68, 75, 78, 81, 82, 85, 88, 90, 93, 96, 100, 102, 106, 108, 109], "prefer": [54, 61, 64, 70, 80, 82, 86, 102], "straight": [54, 82, 84, 90], "awai": [54, 100, 102], "dive": [54, 59, 62, 63, 65, 67, 70, 72, 83, 87, 90, 91, 96, 108], "grow": [54, 85, 102], "guid": [54, 59, 63, 64, 65, 77, 82, 108], "look": [54, 56, 60, 61, 64, 65, 69, 70, 72, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 88, 90, 92, 93, 98, 102], "own": [54, 57, 58, 64, 67, 71, 72, 75, 76, 82, 85, 88, 96, 97, 98, 101, 102, 107, 108], "line": [54, 58, 64, 67, 68, 71, 74, 76, 77, 80, 84, 86, 89, 90, 91, 92, 94, 105], "under": [54, 63, 64, 65, 66, 67, 70, 74, 75, 79, 82, 83, 84, 86, 87, 88, 91, 93, 96, 102, 105, 109], "hood": [54, 66, 70, 74, 79, 82, 84, 86, 87, 88, 91, 93, 109], "leverag": [54, 81, 100, 102], "link": [54, 60, 63, 64, 65, 71, 72, 82, 84, 98, 100], "wai": [54, 56, 57, 62, 63, 64, 67, 68, 69, 71, 72, 81, 82, 83, 84, 86, 90, 91, 92, 93, 96, 104, 108, 109], "make": [54, 57, 58, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 100, 102, 103, 104, 105, 108, 109], "project": [54, 56, 57, 58, 61, 64, 65, 68, 69, 84, 92, 95, 96, 98, 100, 102, 105, 109], "research": [54, 56, 95, 102, 109], "develop": [54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 71, 85, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109], "deploi": [54, 71, 97, 100, 101, 102, 104, 108], "wanto": 54, "redund": [54, 65, 72, 76, 82, 86], "eagerli": 54, "lazili": 54, "instantli": 54, "eager_graph": 54, "lazy_graph": 54, "publish": [54, 58, 96], "pipelin": [54, 56, 67, 68, 83, 93, 97, 102, 103, 108], "variou": [54, 65, 67, 72, 75, 76, 78, 80, 82, 83, 84, 95, 97, 98, 100, 101, 102, 105, 108], "mayb": [54, 64, 71, 88, 90], "tool": [54, 55, 58, 65, 74, 89, 93, 95, 96, 100, 101, 102, 103, 105, 108, 109], "job": [54, 71], "applii": 54, "perk": [54, 68, 70], "essenti": [54, 56, 57, 63, 70, 73, 74, 79, 82, 85, 108], "mainli": [54, 65, 66, 84, 89, 91, 97, 102], "handler": [54, 77, 87, 89, 93, 97], "behind": [54, 65, 66, 78, 84, 87, 89], "scene": [54, 55, 56, 66, 87, 89, 102], "likewis": [54, 65, 70, 72, 75, 78, 79, 82, 86, 91, 108], "facilit": [54, 80], "agnost": [54, 64, 68, 78, 88, 90, 93, 96, 108, 109], "jnp": [54, 72, 73, 76, 78, 81, 85, 88, 93], "tf": [54, 68, 72, 73, 78, 81, 82, 84, 85, 86, 88, 93, 96, 97, 102], "mse_loss": 54, "jax_ms": 54, "tf_mse": 54, "np_mse": 54, "torch_ms": 54, "hand": [54, 67, 72, 79, 84, 96], "mymodel": [54, 91], "linear0": [54, 91, 92], "linear1": [54, 91, 92], "_forward": [54, 75, 88, 91, 92], "put": [54, 63, 84, 96, 108], "togheth": 54, "ll": [54, 58, 59, 64, 65, 74, 81, 91], "someth": [54, 65, 85, 91, 92, 96, 108], "easili": [54, 57, 64, 68, 71, 82, 86, 91, 92, 93, 96, 102, 108, 109], "favorit": 54, "x_in": [54, 91, 92, 93], "loss_fn": [54, 91, 92, 93], "finish": [54, 59, 63, 64, 66], "usabl": [54, 78, 85], "cover": [54, 63, 67, 68, 74, 75, 79, 80, 84, 86, 87], "topic": [54, 80, 90, 102], "mechan": [54, 71, 94, 96], "vision": [54, 60, 94, 98, 108], "robot": [54, 94], "reinforc": [54, 95], "gym": 54, "builder": [54, 61, 94, 96, 97], "trainer": [54, 58, 94, 96, 109], "loader": [54, 91, 96], "break": [54, 69, 72, 77, 78, 85, 96], "highli": [54, 86, 102], "flexibl": [54, 70, 78, 85, 102], "everyon": [54, 58, 59, 65, 96], "plan": [54, 95], "interoper": [54, 57, 99, 100, 102, 105], "There": [54, 56, 63, 64, 65, 67, 68, 70, 72, 74, 76, 77, 79, 82, 83, 88, 91, 96, 103, 104, 108, 109], "environ": [54, 59, 60, 61, 65, 95, 102, 104], "easiest": [54, 64], "command": [54, 61, 64, 67, 71, 80], "python3": [54, 60, 61, 64, 65, 76], "pre": [54, 60, 63, 84, 93, 96, 102], "pull": [54, 58, 59, 60, 61, 63, 64, 67, 74, 85, 86, 96], "unifyai": [54, 60, 61, 64, 65], "obvious": [54, 65, 71], "advantag": [54, 65, 81, 82, 102], "everyth": [54, 58, 63, 65, 71, 74, 82, 83, 84, 85, 89, 96], "sweat_smil": 54, "git": [54, 60, 62, 64, 65, 67, 71, 84], "clone": [54, 60, 61, 65], "github": [54, 56, 60, 62, 63, 65, 67, 71, 72, 74, 75, 84], "com": [54, 60, 64, 67, 71, 72], "cd": [54, 60, 61, 64, 65], "page": [54, 61, 64, 65, 71, 89, 90, 93, 94], "instruct": [54, 63, 64, 67, 76, 83, 84, 100, 103, 106, 108], "video": [54, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 100], "tutori": [54, 65, 82], "quit": [54, 65, 68, 74, 75, 79, 80, 84, 86, 102, 108], "lot": [54, 57, 58, 71, 72, 80, 84, 96, 101], "jax_fn": 54, "jax_x": 54, "torch_x": 54, "torch_fn": 54, "focus": [54, 85, 95, 100, 101, 102, 108, 109], "architectur": [54, 64, 93, 96, 100, 101, 102, 105, 106, 107], "orient": [54, 95], "contributor": [54, 59, 64, 65, 82, 87, 102], "explain": [54, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 98, 105, 108], "nuanc": 54, "background": [54, 64, 102, 104], "contextualis": 54, "problem": [54, 57, 65, 67, 68, 82, 90, 98, 104, 108], "explos": [54, 55, 57], "why": [54, 55, 57, 65, 81, 90], "adher": [54, 56, 57, 67, 72, 75, 78, 86, 88, 93, 98, 99, 108], "lastli": [54, 61, 68], "paint": [54, 56, 88], "pictur": [54, 56, 63, 88], "role": [54, 65, 82, 89, 103, 105, 109], "plai": [54, 68, 82, 84, 93, 102, 105], "wide": [54, 65, 84, 100, 102], "demo": [54, 60, 95], "showcas": [54, 74, 95], "shorter": [54, 90], "ensp": 54, "pretrain": 54, "eff_encod": 54, "efficientnet_v2": 54, "efficientnetv2b0": 54, "include_top": 54, "imagenet": 54, "input_shap": 54, "224": 54, "nois": 54, "torch_eff_encod": 54, "classifi": 54, "num_class": [54, 93], "fc": [54, 92], "customiz": 54, "rand": 54, "script": [54, 60, 61, 64, 65, 71, 74, 88, 96, 102], "deepmind_perceiver_io": 54, "perceiver_backbon": 54, "dummy_input": 54, "rng": [54, 93], "backbon": [54, 88, 91], "params_v": 54, "perceiverioclassifi": 54, "max_pool": 54, "maxpool2d": 54, "1024": 54, "sm_framework": 54, "segmentation_model": 54, "sm": 54, "torch_sm": 54, "metric": [54, 96], "iou_scor": 54, "rax": 54, "torch_rax": 54, "poly1_softmax_loss": 54, "madmom": 54, "madmon": 54, "torch_madmom": 54, "freq": 54, "audio": 54, "hz2midi": 54, "todo": [54, 63, 72, 82, 84], "timm": 54, "mlp_encod": 54, "create_model": 54, "mixer_b16_224": 54, "randn": 54, "output_dens": 54, "maxpooling1d": 54, "pool_siz": 54, "kornia": 54, "pil": 54, "tf_kornia": 54, "url": 54, "cocodataset": 54, "train2017": 54, "000000000034": 54, "jpg": 54, "raw_img": 54, "raw": [54, 75, 103], "img": [54, 91], "enhanc": 54, "sharp": 54, "tf_rax": 54, "tf_madmom": 54, "hk": [54, 93], "_forward_classifi": 54, "rng_kei": 54, "prngkei": [54, 93], "forward_classifi": 54, "hk_eff_encod": 54, "dummy_x": 54, "jax_kornia": 54, "jax_sm": 54, "key1": [54, 92], "key2": 54, "jax_madmom": 54, "np_kornia": 54, "np_sm": 54, "np_rax": 54, "Or": [54, 91], "yourself": [54, 63, 65, 82, 84, 86, 95], "anyon": [54, 57, 59, 65, 71, 96, 108], "classif": [54, 102], "ivynet": 54, "h_w": 54, "extractor": 54, "sequenti": [54, 70, 92], "image_height": 54, "image_width": 54, "favourit": [54, 64], "pure": [54, 75, 78, 82, 86, 90, 93, 96, 102, 108, 109], "load": [54, 84, 96, 101, 108], "dataset": [54, 91, 94], "generate_batch": 54, "dataset_s": 54, "y_train": 54, "num_correct": 54, "y_pred": 54, "And": [54, 84], "model_nam": 54, "hyperparam": 54, "num_epoch": 54, "epoch": 54, "epoch_loss": 54, "running_loss": 54, "training_accuraci": 54, "train_loss": 54, "train_correct": 54, "train_loop": 54, "tqdm": 54, "xbatch": 54, "ybatch": 54, "ybatch_encod": 54, "loss_prob": 54, "batch_loss": 54, "set_descript": 54, "set_postfix": 54, "accuracy_percentag": 54, "naverag": 54, "6f": 54, "plot": [54, 102], "_train_summari": 54, "csv": 54, "writer": 54, "writerow": 54, "prepar": [54, 71], "folder": [54, 60, 61, 64, 65, 67, 71, 79, 82, 84, 85], "believ": [54, 57, 65], "bug": [54, 65, 82, 84, 85], "feedback": [54, 71], "welcom": [54, 59, 64, 65], "appreci": 54, "info": [54, 75], "amaz": 54, "acceler": [54, 82, 100, 104, 105, 106, 107], "journei": [54, 59], "achiev": [54, 71, 72, 77, 80, 84, 91, 93, 97], "ambiti": 54, "goal": [54, 57, 63, 102, 108], "season": 54, "server": [54, 64, 65, 102], "perfect": [54, 95], "ask": [54, 58, 63, 64, 74, 88, 90, 96], "idea": [54, 58, 60, 82, 85, 89, 95, 101], "fellow": 54, "team": [54, 59, 63, 64, 65, 82, 104], "twitter": 54, "sneak": 54, "peek": 54, "certainli": [54, 57, 108], "great": [54, 57, 58, 65, 84, 88, 90, 108], "stai": [54, 71], "don": [54, 58, 63, 64, 65, 71, 72, 84, 92, 96], "proper": [54, 63, 82], "credit": 54, "accompani": 54, "paper": [54, 58], "articl": 54, "lenton2021ivi": 54, "titl": [54, 63, 65, 82], "templat": [54, 75, 84], "inter": [54, 83], "author": [54, 63, 65, 100, 104], "lenton": 54, "daniel": 54, "pardo": 54, "fabio": 54, "falck": 54, "fabian": 54, "jame": 54, "stephen": 54, "clark": 54, "ronald": 54, "journal": 54, "arxiv": 54, "preprint": 54, "2102": 54, "02886": 54, "year": [54, 56, 58, 67, 96, 102], "huge": [55, 57, 71, 91, 102, 108], "collabor": [55, 56, 57], "consortium": [55, 57], "grown": 56, "consider": [56, 74, 78, 86, 99, 100], "recent": [56, 57, 64, 65, 84], "especi": [56, 64, 86, 102], "rapidli": 56, "repo": [56, 60, 61, 62, 65, 67, 71, 72, 82, 83, 84, 85], "wonder": [56, 58, 90], "thing": [56, 57, 58, 62, 63, 64, 65, 69, 77, 82, 84, 86, 90, 91, 102], "evolv": [56, 102], "shareabl": 56, "hinder": [56, 78], "outdat": 56, "matter": [56, 74], "month": [56, 64], "rigor": [56, 84], "newest": 56, "softwar": [56, 57, 64, 65, 100, 105, 106, 107], "rapid": [56, 57, 64, 102], "prototyp": [56, 102], "vital": [56, 93], "signific": [56, 57, 96, 102], "bottleneck": 56, "quickli": [56, 58, 64, 65, 71, 91, 92, 102, 109], "obsolet": [56, 58], "constantli": [56, 85, 86], "invent": 56, "wheel": 56, "simultan": [56, 58], "modern": [56, 57, 107], "scalabl": [56, 88, 107, 108], "exactli": [56, 58, 70, 71, 72, 73, 74, 84, 86], "univers": [56, 82], "languag": [56, 58, 82, 86, 88, 97, 100, 103, 105, 106, 107, 108], "front": [56, 82, 87, 88, 91, 100, 102], "runner": 56, "littl": [56, 90, 104], "principl": [56, 100, 102, 105], "almost": [56, 62, 70, 83, 89, 91], "syntax": [56, 57, 72, 77, 102], "unsurprisingli": [56, 74], "fundament": [56, 71, 82, 86, 88, 102], "2006": 56, "cut": [56, 108], "cloth": 56, "central": [57, 63, 86, 108], "forgiven": 57, "eyebrow": 57, "somehow": 57, "strong": [57, 96, 102], "industri": [57, 102, 104], "wors": 57, "funni": 57, "comic": 57, "strip": 57, "easi": [57, 64, 65, 68, 70, 79, 83, 84, 86, 100, 102, 108, 109], "feasibl": [57, 63, 71], "unlik": [57, 67, 70, 71, 74, 81, 107, 109], "charger": 57, "instant": 57, "mandat": [57, 72, 81, 84, 85], "adopt": [57, 65, 68, 78, 86, 101, 102, 107], "despit": [57, 70, 72, 73, 83, 86, 88, 99, 102], "bring": [57, 67, 84, 88, 89, 97], "benefit": [57, 58, 64, 68, 70, 81, 86, 90, 91, 96, 100, 104, 107], "unrel": [57, 65], "contrari": 57, "bumpi": 57, "road": 57, "allud": [57, 91], "technologi": [57, 100, 104], "success": 57, "thank": [57, 91], "bio": [57, 64], "pcie": 57, "interfac": [57, 90, 93, 96, 97, 98, 99, 100, 101, 102, 106, 109], "motherboard": 57, "raid": 57, "storag": [57, 91], "virtual": [57, 60, 61, 65, 82, 105, 106], "bluetooth": 57, "wireless": 57, "exchang": [57, 62, 98, 100], "btx": 57, "sata": 57, "host": [57, 71, 96, 107], "bu": 57, "tcp": 57, "ip": 57, "commun": [57, 59, 63, 64, 65, 96, 101, 102, 104], "smtp": 57, "send": [57, 107], "gmail": [57, 71], "outlook": 57, "pop": [57, 64], "email": [57, 71], "live": [57, 58, 72, 98, 100], "did": [57, 63, 93, 108], "aris": [57, 72, 96], "until": [57, 65, 77, 85, 88, 96, 109], "substanti": [57, 65, 68, 72, 84, 102], "innov": 57, "growth": [57, 105], "necess": 57, "parti": [57, 96, 101, 102, 108], "engag": [57, 59, 65], "regard": [57, 62, 70, 82, 83, 86], "2015": [57, 102], "alongsid": 57, "frame": [57, 95, 102], "matur": [57, 96, 102], "preced": [57, 92], "mention": [57, 63, 64, 65, 68, 74, 78, 79, 81, 82, 84, 86, 102], "aros": 57, "effort": [57, 59, 96, 98, 102, 108], "stage": [57, 59, 61, 65, 66, 77, 84, 102], "mission": [57, 104], "At": [57, 63, 64, 67, 82, 84, 85, 102], "ourselv": [57, 108], "quansight": [57, 108], "compani": [57, 98], "organ": [57, 68, 70, 79, 82, 85, 97], "panda": 57, "scipi": [57, 104, 109], "conda": [57, 61, 64, 104], "apach": [57, 104, 108], "mxnet": [57, 109], "onnx": [57, 100, 108], "scikit": 57, "jupyt": [57, 104], "aw": 57, "cupi": [57, 102, 109], "net": [57, 58, 88, 93], "sympi": 57, "modin": 57, "spyder": 57, "member": [57, 63, 65, 82], "googl": [57, 71], "octoml": [57, 108], "further": [57, 58, 61, 65, 67, 68, 71, 74, 76, 78, 82, 84, 87, 88, 91, 92, 107, 108], "sponsor": 57, "lg": 57, "electron": 57, "microsoft": [57, 102, 107, 109], "shaw": 57, "intel": [57, 100, 107], "promis": 57, "pursuit": 57, "unif": [57, 59, 90, 98, 108], "clearli": [57, 63, 65, 74, 83, 84, 106], "thought": [57, 64, 65, 78, 100], "gone": [57, 87], "simplifi": [57, 76, 82, 88, 89, 92, 98, 100, 101, 102, 105, 108, 109], "excit": [57, 59, 66], "complianc": 57, "hope": [57, 96, 108], "suit": [57, 64, 66, 67, 71, 84, 91, 95, 97, 102, 108], "motiv": [57, 90], "convinc": 57, "celebr": 57, "encourag": [57, 95, 96], "foundat": [57, 105], "perfectli": 58, "happi": [58, 64, 96], "abund": 58, "better": [58, 60, 66, 82, 83, 85, 86, 87, 90, 91, 92, 105], "streamlin": [58, 105], "workflow": [58, 63, 65, 69, 72, 82, 91, 94, 97, 101, 108, 109], "week": [58, 65], "sai": [58, 64, 80, 90], "deepmind": 58, "releas": [58, 63, 64, 65, 72, 82, 85, 86, 96, 102, 108], "awesom": 58, "love": 58, "perceiverio": 58, "slew": 58, "rush": 58, "inevit": [58, 103], "often": [58, 62, 67, 76, 77, 78, 79, 82, 84, 96, 103, 106, 109], "erron": 58, "poor": 58, "repositori": [58, 60, 61, 64, 65, 66, 67, 77], "confus": [58, 72, 76, 81, 86, 97], "hour": [58, 71], "spent": 58, "spin": 58, "discuss": [58, 65, 72, 73, 81, 82, 84, 86, 89, 90, 91, 96, 98, 103], "sake": 58, "few": [58, 62, 63, 65, 70, 72, 73, 78, 79, 81, 84, 86, 88, 89, 90, 91, 92, 94, 102, 104], "automat": [58, 63, 64, 65, 66, 70, 71, 72, 77, 79, 84, 86, 87, 89, 92, 93, 97, 102, 105, 109], "regardless": [58, 59, 72, 90, 93], "wouldn": 58, "nice": [58, 84, 102], "among": [58, 71, 84, 86, 102], "frantic": 58, "lucid": 58, "honk": 58, "improv": [58, 65, 72, 78, 79, 86, 88, 97, 100, 102, 104, 105], "understand": [58, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 78, 83, 86, 87, 98, 108], "hasn": 58, "spend": [58, 102], "torchvis": 58, "sonnet": 58, "said": 58, "statu": [58, 63, 71], "quo": 58, "dopamin": 58, "ignit": 58, "catalyst": 58, "lightn": 58, "fastai": 58, "flax": [58, 93, 96, 102], "trax": [58, 93], "objax": [58, 93], "offer": [58, 82, 92, 102, 108, 109], "strongli": [59, 64, 108, 109], "skill": [59, 104], "veteran": 59, "beginn": [59, 102], "aspect": [59, 91, 102], "board": 59, "local": [59, 60, 61, 64, 67, 79, 83, 84], "resourc": [59, 63, 71], "contribut": [60, 62, 63, 64, 65, 82, 88, 106], "slightli": [60, 70, 82, 88, 92], "setup": [60, 64, 65, 71], "mech": 60, "grasp": [60, 82], "tree": [60, 61, 72], "dir": [60, 91], "mutual": [60, 70, 79], "venv": [60, 76], "ivy_dev": [60, 61, 64, 65], "bat": [60, 61, 64, 65], "mac": [60, 61, 64, 65], "linux": [60, 61, 64, 65, 105, 107], "bin": [60, 61, 64, 65, 67, 70], "instal": [60, 61, 64, 65, 69, 77, 95], "edit": [60, 63, 64, 65], "pip": [60, 64, 95], "immedi": [60, 64, 86], "ivy_robot": [60, 95], "docker": [60, 62], "desktop": [60, 64], "my": [60, 71, 85], "mount": [60, 65], "rm": [60, 65], "pwd": 60, "rebuild": 60, "pycharm": 60, "vscode": [60, 64], "devcontain": [60, 64], "remot": [60, 64, 67], "codespac": 60, "json": [60, 64, 91], "good": [60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 92], "commit": [60, 63, 67, 74, 84], "deprec": 61, "old": [61, 64, 69, 81], "pr": [61, 63, 65, 67, 82, 83, 84], "soon": [61, 65, 71, 72, 94, 96], "dockerfil": [61, 64], "maco": [61, 107], "ubuntu": 61, "uid": 61, "bash": [61, 64, 65, 67], "termin": [61, 64, 65, 70, 88, 91], "cmd": [61, 64], "make_docs_without_dock": 61, "browser": [61, 64], "affect": [61, 71, 82], "synchron": [61, 71], "respons": [61, 65, 71, 72], "remove_doc": 61, "access": [61, 63, 64, 65, 71, 72, 82, 102, 104, 106], "fulfil": [61, 87], "autogenerated_sourc": 61, "Then": [61, 63, 64, 65, 71, 80, 85, 96], "png": [61, 91], "_imag": 61, "rst": 61, "partial_sourc": 61, "conf": 61, "create_rst_fil": 61, "markup": 61, "get_functions_and_class": 61, "doctr": 61, "module_nam": 61, "copy_readme_to_rst": 61, "tabl": [61, 72, 82, 102], "toc": 61, "append_toctree_to_rst": 61, "create_index_rst": 61, "resours": 62, "climb": 62, "steep": 62, "curv": 62, "realpython": 62, "pyn": 62, "platform": [62, 64, 100, 104, 106], "pilot": 62, "stuck": [62, 63], "spell": 62, "though": [62, 63, 65, 72, 75, 79, 81, 82, 86, 91, 96], "sound": [62, 71, 87], "peopl": [62, 64, 65, 66, 102, 104], "action": [62, 71, 74, 84], "frequent": [63, 65, 102], "outlin": [63, 64, 65, 66, 70, 72, 75, 79, 81, 82, 84], "broad": [63, 104], "individu": [63, 65, 67, 72, 79, 81, 82, 102, 105, 108, 109], "explan": [63, 65, 70, 75, 78, 82, 90], "focu": [63, 100, 101, 104, 109], "pypi": [63, 64, 96], "familiar": [63, 64, 76], "sure": [63, 64, 65, 67, 71, 82, 83, 84, 86], "aforement": 63, "categori": [63, 67, 68, 70, 72, 82, 85, 87], "arraywithelementwis": [63, 68, 90], "containerwithmanipul": 63, "thorough": [63, 75, 78, 84], "comment": [63, 64, 65, 67, 72, 77, 82], "add_reformatting_checklist_": 63, "category_nam": [63, 72, 73, 75, 78, 79], "belong": [63, 67, 92], "autom": [63, 71, 84, 97, 104], "bot": 63, "markdown": 63, "text": [63, 65, 74, 75], "patient": [63, 64], "symbol": [63, 64, 102, 103], "emoji": 63, "legend": 63, "review": [63, 65, 71, 74, 82, 85], "checkbox": [63, 64], "proce": [63, 64], "elabor": 63, "struggl": 63, "assigne": 63, "status": 63, "refrain": 63, "transpil": [63, 76, 82, 87, 88, 89, 97, 102, 108, 109], "subsect": [63, 65, 67, 71], "verifi": [63, 72, 73, 82, 84, 85], "func_nam": [63, 74, 75, 79, 82], "simpler": [63, 65, 82, 103, 109], "suggest": [63, 64, 65, 72, 82, 84, 85], "assess": [63, 86], "merg": [63, 65, 67, 71, 82, 102], "composition": [63, 81], "pend": 63, "helpfulli": [63, 86, 100], "problemat": [63, 64], "unimpl": 63, "issue_link": 63, "alias_nam": 63, "function_nam": 63, "notic": [63, 68, 71, 86], "push": [63, 65, 67, 77, 83, 84, 108], "liner": 63, "meanwhil": [63, 71], "reselect": 63, "placement": 63, "categoris": [63, 67, 82], "faithfulli": 63, "creation_routin": [63, 83], "indexing_routin": 63, "ma": 63, "manipulation_routin": 63, "mathematical_funct": [63, 82], "sorting_searching_count": 63, "ufunc": [63, 82], "hierarchi": [63, 91, 98, 108], "matrix_and_vector_product": 63, "matrix_eigenvalu": 63, "norms_and_other_numb": 63, "solving_equations_and_inverting_matric": 63, "seem": [63, 64, 86, 92, 93, 96, 102], "gleam": 63, "uncom": 63, "test_numpy_inn": 63, "test_frontend": [63, 71, 83], "unsur": [63, 84], "explor": [63, 64, 65, 72, 86, 89, 93, 95, 102, 105], "confirm": 63, "backend_nam": [63, 69, 72, 73, 75, 78, 79, 80], "relevant_submodul": 63, "sometim": [63, 64, 65, 67, 72, 79, 82, 84, 85, 86], "recreat": [63, 67], "defer": [63, 68, 70, 72, 73, 79, 80, 81, 82, 84, 108], "clearer": [63, 76, 83, 91], "mind": [63, 68, 70, 84], "realli": [64, 70, 96, 107, 108], "button": [64, 65], "your_usernam": 64, "gh": 64, "your_fold": 64, "sync": [64, 67], "cours": [64, 65, 67, 68, 74, 82, 85, 86, 91, 96, 107, 108], "whatev": [64, 70, 96], "elig": 64, "student": 64, "licenc": 64, "remind": 64, "licens": [64, 105], "expir": 64, "abl": [64, 65, 67, 72, 79, 81, 82, 86, 88, 93, 105, 108], "profession": 64, "trial": 64, "jetbrain": 64, "bui": [64, 108], "paid": 64, "pace": 64, "person": [64, 65], "experi": [64, 84, 89, 91, 96], "abil": [64, 86, 89, 96, 102], "perhap": [64, 90, 91, 92, 96, 108], "click": [64, 65, 71, 75, 89], "icon": [64, 65], "panel": 64, "builtin": [64, 90, 92], "virtualenv": 64, "tick": [64, 65, 71], "test_array_api": [64, 65, 67, 84], "txt": [64, 67, 85], "visual": [64, 82, 96, 102, 104, 107], "mitig": [64, 108], "conflict": [64, 65, 71, 82, 91], "wsl": 64, "powershel": 64, "admin": 64, "visit": [64, 65, 71], "deploy": [64, 101, 104, 105, 108, 109], "press": [64, 65, 91], "ok": 64, "debug": [64, 65, 70, 71, 84, 86, 91, 102], "dialog": 64, "caus": [64, 65, 67, 69, 70, 71, 72, 74, 81, 83, 84, 96], "earlier": [64, 65], "virtualis": 64, "On": [64, 72, 82, 84, 89, 93], "dropdown": 64, "menu": 64, "tag": [64, 65], "navig": [64, 65, 66], "tab": [64, 71, 91], "m1": 64, "optional_m1_1": 64, "optional_m1_2": 64, "sudo": 64, "apt": 64, "ca": 64, "certif": 64, "curl": 64, "gnupg": 64, "lsb": 64, "mkdir": [64, 71], "keyr": 64, "fssl": 64, "download": [64, 84], "gpg": 64, "dearmor": 64, "echo": [64, 71], "deb": 64, "arch": 64, "dpkg": 64, "lsb_releas": 64, "tee": 64, "null": 64, "ce": 64, "cli": 64, "containerd": 64, "io": [64, 71], "plugin": 64, "systemctl": 64, "permiss": [64, 71], "coupl": [64, 68, 90, 92, 102], "test_ab": [64, 84], "editor": 64, "pytest": [64, 65, 67, 71, 84], "keyboard": 64, "displai": [64, 70, 76, 84, 91], "screenshot": 64, "ctrl": [64, 65], "screen": [64, 91], "test_elementwis": 64, "bar": 64, "shell": [64, 65], "run_tests_cli": [64, 67], "run_ivy_core_test": 64, "run_ivy_nn_test": 64, "run_ivy_stateful_test": 64, "run_test": [64, 71], "sh": [64, 65, 67, 71], "test_depend": 64, "test_ivy_cor": 64, "test_ivy_nn": 64, "test_ivy_st": 64, "test_": [64, 83], "test_cor": [64, 65, 83], "wish": [64, 82], "ivy_cor": 64, "ivy_nn": 64, "ivy_st": 64, "simplest": [64, 74, 84, 86], "header": [64, 65], "advanc": [64, 101], "arrow": 64, "test_stat": 64, "test_submodule_nam": 64, "test_function_nam": 64, "debugg": 64, "studio": 64, "afterward": [64, 91], "restart": 64, "overlap": [64, 71, 85, 86, 103], "test_file_path": 64, "test_fn_nam": 64, "engin": [64, 102, 104, 105], "comma": 64, "postcreatecommand": 64, "post_create_command": 64, "poststartcommand": 64, "safe": [64, 82], "containerworkspacefold": 64, "roughli": [64, 67, 105], "reopen": 64, "test_fle_path": 64, "slash": 64, "headach": 64, "arm": [64, 65], "vm": [64, 71], "azur": 64, "cloud": [64, 71, 95, 104], "longer": [64, 72, 80, 81, 84, 102], "worri": 64, "usual": [64, 67, 82, 84, 86], "theme": 64, "slow": 64, "ipad": 64, "cool": [64, 85], "quota": 64, "requisit": 64, "pane": [64, 65, 71], "readi": 64, "master": [64, 65, 67, 71, 85, 102], "box": 64, "upto": [64, 65], "minut": [64, 71], "subsequ": [64, 68, 71, 72, 74, 78, 79, 81, 84, 86, 92, 103], "launch": 64, "approach": [64, 65, 68, 70, 72, 79, 80, 82, 84, 86, 90, 91, 96, 99, 106, 108], "colour": 64, "chanc": 64, "troubleshoot": 64, "ever": 64, "usr": 64, "flask": 64, "toolbar": [64, 65], "_array_modul": [64, 67], "array_api_test": [64, 65, 67], "refresh": 64, "conftest": 64, "nutshel": [64, 78], "hook": 64, "lint": 64, "attempt": [64, 77, 96], "succe": 64, "properli": [64, 66, 76, 82, 84], "quick": [65, 66, 83, 92], "tendenc": 65, "land": 65, "world": [65, 104], "come": [65, 68, 71, 82, 85, 86, 92, 94, 97, 102], "fly": [65, 102], "internship": 65, "serv": [65, 68, 70, 78, 79, 82, 84, 86, 87, 97, 100], "suspect": 65, "observ": [65, 76, 88, 104], "act": [65, 74, 96, 109], "iii": 65, "reformat": [65, 77], "issue_numb": 65, "No": [65, 71, 102], "clean": [65, 85, 86, 88, 89, 91], "respond": 65, "dai": 65, "freed": 65, "basi": [65, 67, 91], "situat": [65, 71, 93], "upon": [65, 74, 81, 84, 86, 96, 101, 102], "unabl": [65, 86], "qualiti": 65, "hypothet": 65, "frustrat": 65, "delai": 65, "busi": 65, "fine": [65, 72, 74, 82, 90, 93, 108], "inact": 65, "me": 65, "unfairli": 65, "investig": 65, "incomplet": 65, "assign": [65, 69, 72, 77, 81, 90], "regist": 65, "wherea": [65, 68, 70, 72, 73, 74, 78, 79, 84, 85, 93, 99], "invit": 65, "roadmap": [65, 71], "ideal": [65, 71, 81, 91], "easier": [65, 67, 68, 72, 82, 83, 85, 97, 102, 104], "forth": 65, "rare": [65, 73, 96, 107], "scenario": [65, 76], "someon": [65, 76, 96], "unfortun": 65, "practic": [65, 71, 82, 105], "date": [65, 85], "complic": [65, 83, 88], "merge_with_upstream": 65, "name_of_your_branch": 65, "abort": 65, "tediou": [65, 74], "stash": 65, "reinstat": 65, "fetch": [65, 67, 71], "uncommit": 65, "unstag": 65, "untrack": 65, "comprehens": [65, 67], "atlassian": 65, "wrote": 65, "piec": [65, 68, 79, 80, 88, 98, 100], "blame": 65, "revis": 65, "eg": 65, "past": [65, 67, 83, 84, 102], "filepath": [65, 67], "grep": 65, "commit_id": 65, "handi": 65, "histori": 65, "toggl": 65, "highlight": [65, 71, 74, 82], "whenev": [65, 71, 72, 76, 80, 81, 84, 91], "think": [65, 71, 74, 103], "cannot": [65, 67, 69, 72, 82, 88, 93, 108], "approv": 65, "hash": [65, 91], "cancel": 65, "speedup": 65, "unavail": 65, "tickbox": 65, "span": [65, 86, 100, 108], "intent": [65, 81], "discourag": 65, "philosophi": 65, "valuabl": 65, "infrequ": 65, "earli": [65, 102], "wast": [65, 71], "spot": [65, 74, 79], "mistak": [65, 77], "propos": [65, 82, 86, 102], "mountain": 65, "advoc": [65, 96], "were": [65, 72, 76, 77, 84, 85, 86, 88, 102, 103, 108], "actual": [65, 66, 71, 79, 81, 82, 83, 84, 86, 87, 92, 96, 103, 108], "aim": [65, 67, 82, 84, 87, 100, 102, 105], "session": [65, 102], "beauti": 65, "particularli": [65, 91, 96, 100], "concern": [65, 66, 70, 74, 81, 86, 87, 108], "undo": 65, "stress": 65, "nifti": 65, "reassur": 65, "isol": [65, 103, 108], "fact": [65, 67, 71, 82, 84, 88, 91], "local_path_to_ivi": 65, "subfold": [65, 83, 84, 85], "dep": 65, "fresh": 65, "arsen": 65, "declar": 65, "exec": 65, "rf": 65, "cp": 65, "ivy_contain": 65, "test_imag": 65, "test_random_crop": 65, "test_creation_funct": 65, "test_arang": 65, "cursor": 65, "alt": 65, "blog": 65, "breakpoint": 65, "gutter": 65, "caret": 65, "f8": 65, "f9": 65, "Into": 65, "f7": 65, "smart": 65, "interest": 65, "fragment": [65, 98, 100, 104], "pychram": 65, "dummi": 65, "wherein": [65, 80, 84], "failur": [65, 71, 83, 84], "who": [66, 76, 87, 96, 102, 104], "weed": [66, 87], "tour": 66, "superset": [66, 82, 96], "goe": [66, 86], "dynam": [66, 72, 73, 81, 82, 88, 102, 106], "borrow": 66, "conjunct": 67, "establish": [67, 104], "2020": [67, 102], "popular": [67, 102], "sens": [67, 74, 82, 90], "unconnect": 67, "decis": [67, 70, 72, 82, 86, 88, 90, 102], "checkout": [67, 84], "everytim": [67, 72], "thoroughli": 67, "ci": [67, 72, 77, 83, 84, 96], "test_linalg": [67, 83], "test_set_funct": 67, "test_signatur": 67, "excess": [67, 69, 74], "array_modul": 67, "vv": 67, "test_manipulation_funct": 67, "test_concat": [67, 84], "nb": 67, "liber": 67, "bodi": [67, 84], "fortun": 67, "falsifi": [67, 84], "______________________": 67, "test_remaind": 67, "_______________________": 67, "test_operators_and_elementwise_funct": 67, "1264": 67, "st": [67, 83, 84], "1277": 67, "binary_param_assert_against_refimpl": 67, "ctx": 67, "mod": 67, "620": 67, "binary_assert_against_refimpl": 67, "324": 67, "scalar_o": 67, "assertionerror": [67, 76, 83, 84], "17304064": 67, "binaryparamcontext": 67, "reproduce_failur": [67, 84], "axic42baaowcnp": 67, "rumwmabaear0": 67, "make_binary_param": 67, "dh": 67, "numeric_dtyp": 67, "left_strat": 67, "left_sym": 67, "right_strat": 67, "right_sym": 67, "right_is_scalar": 67, "binary_param_assert_dtyp": 67, "binary_param_assert_shap": 67, "led": [67, 104], "unexpectedli": 67, "discrep": [67, 83], "varieti": [67, 71, 72, 73, 84, 98, 100, 104, 105, 108, 109], "test_asarray_arrai": 67, "test_floor_divid": 67, "health": 67, "test_iop": 67, "__imod__": 67, "isequ": 67, "test_matrix_norm": 67, "alter": 67, "tweak": 67, "array_api_methods_to_test": 67, "test_trac": 67, "latter": [67, 69, 72, 75, 82], "scheme": [67, 92, 102], "test_special_cas": 67, "__ipow__": 67, "is_integ": 67, "revisit": [67, 78], "overwritten": [68, 69], "_data": [68, 82, 90], "meta": [68, 85, 102], "organiz": [68, 70, 82], "bear": [68, 70, 72, 82], "underpin": [68, 70, 88], "programmat": [68, 70, 103], "backup": [68, 70], "accident": [68, 70, 82], "readabl": [68, 70, 76, 78, 84, 85, 90, 91], "absent": [68, 70], "auto": [68, 70, 91], "__add__": [68, 70, 74, 75, 78, 82, 83, 90], "__sub__": [68, 70, 74, 78, 90], "__mul__": [68, 70, 74, 78, 86, 90], "__truediv__": [68, 70, 74], "__setitem__": [68, 70, 90], "throw": [68, 72, 76, 90, 102], "imposs": 68, "firstli": [68, 72, 74, 75, 76, 79, 80, 81, 86, 91, 98, 108], "anywai": [68, 80, 82], "secondli": [68, 72], "permit": [68, 78, 82, 84, 86], "standalon": [68, 84, 97, 98, 103, 108, 109], "__ivy_array_function__": 68, "inspir": [68, 95], "__torch_function__": 68, "myarrai": 68, "handled_funct": 68, "notimpl": [68, 77], "four": [68, 72, 74, 78, 79, 84, 86, 91], "enough": [68, 71, 84, 90, 91, 92], "ivy_funct": 68, "my_ab": 68, "my_arrai": 68, "Of": [68, 82, 91, 107, 108], "subset": [68, 71, 75, 78, 82, 84, 88, 102], "implicit_backend": [69, 88], "__dict__": [69, 88], "ivy_original_dict": [69, 88], "get_backend": [69, 79], "opt": [69, 72, 81, 84, 85, 86], "previous_backend": 69, "fallback": 69, "unset_backend": 69, "backend_handl": [69, 88], "requires_grad": 69, "memory_format": 69, "preserve_format": 69, "weren": 69, "vast": [69, 72, 102], "minor": [69, 86, 96], "fn_name_v_1p12_and_abov": 69, "fn_name_v_1p01_to_1p1": 69, "five": [70, 91], "cont_map": [70, 91], "cont_all_tru": [70, 91], "cont_to_iter": 70, "containerbas": 70, "cont_multi_map": 70, "cont_diff": [70, 91], "cont_common_key_chain": 70, "recap": [70, 74, 92], "arbitrarili": [70, 80, 91], "cont_multi_map_in_funct": 70, "multi_map": 70, "static_add": [70, 74, 75], "static_tan": [70, 74], "static_rol": [70, 74], "containerwithelementwis": 70, "__repr__": 70, "__getattr__": 70, "__setattr__": 70, "__getitem__": 70, "__contains__": 70, "__getstate__": 70, "__setstate__": 70, "pickl": [70, 91], "unpickl": 70, "num_dim": [70, 93], "__len__": 70, "restrict": [70, 71, 82, 88, 99], "enforc": [70, 90], "extern": [70, 78, 82, 84, 85], "c1": 70, "lefthand": 70, "righthand": 70, "addition": [70, 81, 82, 108], "counterpart": [70, 80], "absenc": [70, 78, 102], "implicitli": [70, 84, 88], "log_pr": [70, 79, 81], "intuit": [70, 84, 91, 92, 98], "chronolog": 70, "concurr": [70, 71, 79, 102], "had": [70, 71, 81, 88, 102, 103], "But": [70, 71, 75, 80, 81, 93], "flow": [70, 95, 102, 103], "implic": 70, "whatsoev": [70, 79, 97, 108], "implicit": [70, 75, 82, 84, 88, 102], "eager": [70, 96, 102], "children": 70, "shallowest": 70, "deepest": 70, "regularli": 71, "rollback": 71, "incorpor": [71, 91, 102], "fold": 71, "techniqu": 71, "triplet": 71, "test_torch": [71, 83], "test_tensor": [71, 83], "test_torch_instance_arctan_": 71, "7284": 71, "daili": 71, "shoot": 71, "impact": [71, 84, 92, 104], "_reduce_loss": 71, "test_nn": 71, "test_loss": 71, "test_binary_cross_entropy_with_logit": 71, "test_cross_entropi": 71, "test_binary_cross_entropi": 71, "test_sparse_cross_entropi": 71, "test_loss_funct": 71, "test_torch_binary_cross_entropi": 71, "test_torch_cross_entropi": 71, "torch_binary_cross_entropi": 71, "torch_cross_entropi": 71, "underneath": [71, 100], "magic": 71, "statement": [71, 77, 81, 84, 86, 96], "readthedoc": 71, "pedagog": 71, "f1": 71, "fm": 71, "yeah": 71, "procedur": [71, 74], "cyclic": 71, "intellig": [71, 84, 86, 104], "tests_fil": 71, "file_nam": [71, 84, 85], "del": 71, "intersect": [71, 84, 95], "tests_lin": 71, "elif": [71, 76, 81, 82, 83], "correspondingli": 71, "tests_to_run": 71, "determine_tests_lin": 71, "mongodb": 71, "databas": [71, 84], "somewher": 71, "secret": 71, "db": 71, "ssh": 71, "ssh_deploy_kei": 71, "suffic": [71, 80, 84], "massiv": 71, "constraint": [71, 72], "mb": 71, "yml": 71, "felicit": 71, "clone_map": 71, "home": 71, "deploy_kei": 71, "user_email": 71, "rashul": 71, "chutani": 71, "user_nam": 71, "target_branch": 71, "github_serv": 71, "deploy_key_fil": 71, "chmod": 71, "ssh_known_hosts_fil": 71, "known_host": 71, "keyscan": 71, "export": [71, 101, 108], "git_ssh_command": 71, "userknownhostsfil": 71, "methodologi": 71, "master1": 71, "restructur": 71, "index_map": 71, "test_map": 71, "routin": [71, 82, 86, 96, 102], "incorrect": 71, "snowbal": 71, "irrelev": [71, 72, 74], "recalibr": 71, "workflow_dispatch": 71, "schedul": [71, 96, 102, 109], "cron": 71, "saturdai": 71, "night": 71, "pm": 71, "gut": 71, "lesser": [71, 76], "lol": 71, "cater": 71, "master2": 71, "master32": 71, "runner2": 71, "corrupt": 71, "forc": 71, "discard": 71, "decoupl": [71, 92], "150": 71, "cycl": [71, 84], "rashulchutani": 71, "yellow": 71, "queu": 71, "redirect": 71, "book": 71, "ran": 71, "badg": 71, "clickabl": 71, "all_dtyp": 72, "all_numeric_dtyp": 72, "all_int_dtyp": 72, "all_float_dtyp": 72, "replic": [72, 74, 82, 86], "thirdli": 72, "native_float32": 72, "importantli": [72, 90, 93, 95], "conveni": [72, 73, 78, 83, 89, 91, 92, 97, 108], "arguabl": [72, 73, 82], "jaxarrai": [72, 73, 78, 81, 85, 88], "_handle_0_dim_output": [72, 81], "experiment": [72, 82, 85, 88, 102], "subtli": [72, 81], "promote_types_frontend_nam": 72, "promote_types_of_frontend_name_input": 72, "frontend_nam": 72, "demonstr": [72, 74, 76, 90], "accuraci": 72, "upcast": 72, "instabl": 72, "nearli": [72, 78, 80, 102], "downcast": 72, "footprint": 72, "concret": 72, "creation": [72, 73, 76, 78, 80, 82, 83, 84, 85, 88, 102, 104, 108], "compound": 72, "settabl": [72, 73], "deleg": [72, 109], "shape_to_tupl": 72, "with_supported_dtyp": 72, "with_unsupported_dtyp": 72, "unment": 72, "backend_vers": 72, "_cast_for_unary_op": 72, "target_typ": 72, "discov": 72, "unsupported_dtyp": 72, "former": [72, 75, 82], "lack": [72, 76, 81, 102, 109], "patch": [72, 102], "subtl": [72, 85, 108], "offici": [72, 88], "inconsist": [72, 76], "84530": 72, "unwarr": 72, "risk": [72, 108], "needlessli": 72, "bloat": 72, "undergo": [72, 96], "supported_dtyp": [72, 82], "unsupported_devic": 72, "supported_devic": 72, "slight": [72, 84, 92], "downsid": 72, "inflat": 72, "dual": 73, "categor": [73, 79, 82], "eight": [74, 87], "static_func_nam": 74, "__": [74, 91], "op_nam": 74, "__r": 74, "combinatori": 74, "variat": [74, 82, 84], "unus": [74, 77, 81], "okai": [74, 86, 88], "meant": 74, "spec": [74, 75], "my_func": [74, 85], "some_flag": 74, "another_flag": 74, "jointli": 74, "5574077": 74, "1850398": 74, "5463025": 74, "8422884": 74, "91601413": 74, "9647598": 74, "3738229": 74, "1597457": 74, "0963247": 74, "9955841": 74, "3278579": 74, "pars": [74, 96], "asid": [74, 95], "increasingli": 74, "14254655": 74, "1578213": 74, "380515": 74, "trivial": 74, "exlud": 74, "__radd__": [74, 75, 82], "failing_fn_nam": 74, "onlin": [74, 75], "minutest": 74, "suffici": [74, 82, 84], "segment": 74, "fault": [74, 102], "contrast": [75, 78, 82, 108], "instanti": 75, "array_api": 75, "preview": 75, "newlin": 75, "render": 75, "incorrectli": 75, "needless": [75, 83], "renam": [75, 82], "judgment": 75, "operator_nam": 75, "succinct": 75, "contstructor": 75, "docst": 75, "_default": 76, "_delimit": 76, "julia": [76, 105, 108], "new_fn": [76, 82], "413": 76, "347": 76, "new_arg": 76, "new_kwarg": 76, "186": 76, "lib": 76, "site": [76, 103], "_src": 76, "219": 76, "_reduce_al": 76, "_ensure_optional_ax": 76, "213": [76, 84], "_reduct": 76, "lax": [76, 82, 83, 86, 93, 96], "preproc": 76, "_cast_to_bool": 76, "pos_dim": 76, "_reduction_dim": 76, "113": 76, "canon_axi": 76, "_canonicalize_axis_allow_nam": 76, "genexpr": 76, "106": 76, "maybe_named_axi": 76, "_canonicalize_axi": 76, "stdin": 76, "295": 76, "262": 76, "ivy_arg": 76, "ivy_kwarg": 76, "354": 76, "truth_value_test": 76, "121": 76, "switch": [76, 109], "visibl": 76, "unwieldi": 76, "awar": 76, "recov": [76, 82], "squash": 76, "hid": 76, "cleaner": [76, 91], "caught": 76, "functool": [76, 82, 90], "_print_traceback_histori": 76, "error_stack": 76, "axiserror": 76, "got": 76, "polici": [76, 84, 95], "moreov": 76, "met": 76, "flake8": 77, "annot": [77, 78], "star": 77, "byte": [77, 107, 108], "unsuccess": 77, "exceed": 77, "black": 77, "disobei": 77, "inde": [77, 78, 86, 96, 100], "adress": 78, "sole": [78, 85, 101, 102, 103], "strictli": [78, 81], "rational": 78, "__div__": [78, 86], "dicat": 78, "pep": 78, "484": 78, "brittl": 78, "freeli": 78, "technic": [78, 81, 96, 102, 104], "original_typ": 78, "cumbersom": 78, "venn": 79, "diagram": [79, 108], "light": [79, 82, 96, 97, 103, 108], "maximis": 79, "deal": [79, 82, 96], "modif": [79, 102], "_wrap_funct": [79, 80], "briefli": [79, 84, 91], "get_all_arrays_on_dev": 79, "inputs_to_ivy_arrai": 80, "heavili": [80, 82, 96], "integer_array_to_float": 80, "handle_cmd_line_arg": 80, "program": [81, 99, 100, 102, 105, 106, 109], "ration": [81, 86], "speak": 81, "x_nativ": 81, "val_n": 81, "args_to_n": 81, "_is_vari": 81, "predominantli": [81, 85, 95], "support_native_out": [81, 88], "math": [81, 82, 83, 93, 100], "_wrap_fn": 81, "dim0": 81, "dim1": 81, "res_floor": 81, "mul": [81, 90], "extent": [81, 82], "maxim": [81, 86, 88, 99, 100, 104, 105, 106], "capabl": [81, 84, 86], "input_arrai": 81, "tf_frontend": 82, "wrong": [82, 86], "torch_frontend": [82, 83], "numpy_frontend": 82, "jax_frontend": 82, "to_ivy_arrays_and_back": [82, 83], "fidel": 82, "algebra": [82, 100, 101, 102, 105, 109], "xla": [82, 96, 97, 102], "dynamic": 82, "mimic": 82, "arithmetic_oper": 82, "handle_numpy_out": 82, "handle_numpy_dtyp": 82, "handle_numpy_cast": 82, "from_zero_dim_arrays_to_scalar": 82, "_add": 82, "same_kind": 82, "subok": [82, 83, 86], "promote_types_of_numpy_input": 82, "underscor": 82, "obtain": 82, "unhandl": 82, "subclass": [82, 86], "trigonometric_funct": 82, "_tan": 82, "check_tensorflow_cast": 82, "raw_op": [82, 83], "tackl": 82, "map_raw_ops_alia": 82, "unnecessari": [82, 86], "output_typ": 82, "kwargs_to_upd": 82, "implemnt": 82, "pointwise_op": 82, "preferred_element_typ": 82, "finer": 82, "margin": 82, "meet": 82, "criteria": 82, "reduce_logsumexp": 82, "input_tensor": 82, "logsumexp": 82, "trick": 82, "max_input_tensor": 82, "omiss": 82, "sensibl": 82, "deem": 82, "reserv": 82, "resum": 82, "ahead": [82, 102], "heavi": [82, 83, 86, 103], "logicaland": 82, "np_frontend": 82, "_ivy_arrai": 82, "radd": 82, "_init_data": 82, "_process_str_data": 82, "_dtype": [82, 83, 90], "_shape": [82, 90], "govern": 82, "promote_types_of_": 82, "_input": 82, "promote_types_of_torch_input": [82, 83], "saniti": 82, "func_wrapp": 82, "handle_numpy_casting_speci": 82, "equiv": 82, "unsaf": 82, "array_type_test": 82, "_isfinit": 82, "organis": 82, "watch": 82, "youtub": 82, "seri": [82, 84, 102, 104], "jump": 83, "knowledg": 83, "lift": [83, 103], "get_dtyp": [83, 84], "dtype_and_valu": [83, 84], "get_shap": [83, 84], "np_frontend_help": 83, "test_jax": 83, "test_jax_lax_oper": 83, "dtype_and_x": [83, 84], "available_dtyp": [83, 84], "test_jax_lax_tan": 83, "test_numpi": 83, "test_mathematical_funct": 83, "test_np_trigonometric_funct": 83, "dtypes_values_cast": 83, "dtypes_values_casting_dtyp": 83, "arr_func": 83, "get_dtypes_kind": 83, "get_num_positional_args_ufunc": 83, "test_numpy_tan": 83, "handle_where_and_array_bool": 83, "test_tensorflow": 83, "test_math": 83, "test_tensorflow_tan": 83, "test_pointwise_op": 83, "test_torch_tan": 83, "_fill_valu": 83, "allow_non": [83, 84], "min_num_dim": [83, 84], "max_num_dim": [83, 84], "min_dim_s": [83, 84], "max_dim_s": 83, "test_jax_lax_ful": 83, "test_from_shape_or_valu": 83, "_input_fill_and_dtyp": 83, "dtype_and_input": 83, "dtype_to_cast": 83, "input_fill_dtyp": 83, "test_numpy_ful": 83, "test_tf_funct": 83, "test_tensorflow_fil": 83, "test_creation_op": 83, "test_torch_ful": 83, "add_nois": 83, "all_clos": 83, "_get_dtype_and_matrix": 83, "test_torch_qr": 83, "frontend_ret": 83, "frontend_q": 83, "frontend_r": 83, "walkthrough": 83, "gt": [83, 88], "comparison_op": 83, "test_comparison_op": 83, "num_arrai": [83, 84], "allow_inf": [83, 84], "shared_dtyp": 83, "test_torch_great": 83, "test_ndarrai": 83, "test_numpy_instance_add__": 83, "test_tensorflow_instance_add": 83, "eagertensor": 83, "1e04": 83, "allow_infin": 83, "test_torch_instance_add": 83, "_arrays_idx_n_dtyp": 83, "test_manipul": [83, 84], "surprisingli": 83, "cat": [83, 86, 88, 93], "closest_relevant_group": 83, "strive": [83, 84, 86, 96, 104], "exhaust": [84, 99, 108], "fixtur": 84, "hit": [84, 88], "eleg": [84, 102], "unexplor": 84, "upload": 84, "artifact": 84, "bespok": 84, "_array_or_typ": 84, "test_default_int_dtyp": 84, "clariti": [84, 86, 102], "print_hypothesis_exampl": 84, "custom_strategi": 84, "sampled_from": 84, "randomis": 84, "simplist": 84, "intricaci": 84, "glanc": 84, "stratigi": 84, "one_of": 84, "datum": 84, "pipe": 84, "overload": 84, "shorthand": 84, "scaler": 84, "array_or_scal": 84, "len_of_arrai": 84, "test_add": 84, "keywoard": 84, "test_gpu_is_avail": 84, "requri": 84, "summara": 84, "pretest": 84, "slighlti": 84, "pytet": 84, "snippet": 84, "thankfulli": 84, "captur": [84, 93, 103], "mostli": 84, "seamlessli": 84, "encount": 84, "criterion": 84, "array_valu": 84, "valid_ax": 84, "craft": 84, "hoc": 84, "44758124e": 84, "11228": 84, "456": 84, "268": 84, "wherev": 84, "dtype_values_axi": 84, "9622": 84, "28136": 84, "6375": 84, "12720": 84, "21354": 84, "900e": 84, "955e": 84, "exclude_min": 84, "large_abs_safety_factor": 84, "safety_factor_scal": 84, "57384": 84, "25687": 84, "248": 84, "array_dtyp": 84, "array_bool": 84, "na": 84, "test_devic": 84, "array_shap": 84, "common_shap": 84, "test_lay": 84, "size_bound": 84, "reshape_shap": 84, "stand": 84, "fashion": 84, "some_sequ": 84, "allow_nan": 84, "allow_subnorm": 84, "get_bound": 84, "arrays_valu": 84, "36418": 84, "21716926": 84, "none_or_list_of_float": 84, "get_prob": 84, "get_mean_std": 84, "103515625e": 84, "099609375": 84, "probabilist": 84, "get_axi": 84, "number_positional_argu": 84, "unreproduc": 84, "report": 84, "ivy_np": 84, "valid_float_dtyp": 84, "test_demo": 84, "failing_test": 84, "shrink": 84, "prescrib": 84, "scratch": 84, "therebi": 84, "test_gelu": 84, "test_fil": 84, "brief": 84, "phase": [84, 96, 102], "notabl": [84, 102], "verbos": [84, 88], "newer": 84, "max_exampl": 84, "deadlin": 84, "weird": 84, "systemat": 84, "safeguard": 84, "inabl": 84, "test_result_typ": 84, "9090909090909091": 84, "judgement": 85, "some_namespac": 85, "some_backend": 85, "another_backend": 85, "refactor": 85, "ongo": 85, "op": [85, 88, 96], "cooler": 85, "something_cool": 85, "_assert_fill_value_and_dtype_are_compat": 85, "_to_devic": 85, "shouldn": 85, "older": 85, "unbound": 85, "battl": 85, "face": [86, 88, 102, 108], "answer": [86, 90, 96], "contradict": 86, "entail": 86, "sacrif": 86, "dimems": 86, "noth": [86, 108], "jacfwd": 86, "jacrev": 86, "banner": 86, "ravel": 86, "pointwis": 86, "fuse": 86, "tensorrt": 86, "expens": 86, "incredibli": [86, 91, 96, 105], "six": 86, "__gt__": 86, "price": 86, "pai": 86, "intrus": 86, "x_beta": 86, "equip": 86, "priorit": 86, "simplif": 86, "allevi": 86, "ineffici": [86, 96, 102], "fledg": [88, 89], "syntact": [88, 93], "power_seq": 88, "to_n": 88, "unset": 88, "backend_stack": 88, "_determine_backend_from_arg": 88, "importlib": 88, "_backend_dict": 88, "illustr": [88, 95], "x_shape": 88, "x_flat": 88, "wi": 88, "wi_x": 88, "wii_x": 88, "wif_x": 88, "wig_x": 88, "wio_x": 88, "wh": 88, "ht": 88, "ct": 88, "hts_list": 88, "wii_xt": 88, "wif_xt": 88, "wig_xt": 88, "wio_xt": 88, "zip": 88, "htm1": 88, "ctm1": 88, "wh_htm1": 88, "whi_htm1": 88, "whf_htm1": 88, "whg_htm1": 88, "who_htm1": 88, "ft": 88, "ot": 88, "reliabl": 88, "sacrific": 88, "hear": 88, "virtu": [88, 99], "pure_ivi": 88, "compile_graph": [88, 93], "pure_torch": 88, "_layer": 88, "unclean": 88, "wx": 88, "temp": 88, "ivy_func": 88, "emphas": 88, "torchscript": [88, 97, 109], "example_input": 88, "static_argnum": 88, "static_argnam": 88, "jit": [88, 96, 102], "primit": [89, 96, 100, 102], "upcom": 89, "hierarch": [89, 91, 92, 102], "arraywithactiv": 90, "arraywithcr": 90, "arraywithdatatyp": 90, "arraywithdevic": 90, "arraywithgener": 90, "arraywithgradi": 90, "arraywithimag": 90, "arraywithlay": 90, "arraywithlinearalgebra": 90, "arraywithloss": 90, "arraywithmanipul": 90, "arraywithnorm": 90, "arraywithrandom": 90, "arraywithsearch": 90, "arraywithset": 90, "arraywithsort": 90, "arraywithstatist": 90, "arraywithutil": 90, "_init": 90, "_size": 90, "_devic": 90, "_dev_str": 90, "_pre_repr": 90, "_post_repr": 90, "framework_str": 90, "noinspect": 90, "pypep8nam": 90, "mt": 90, "typeerror": 90, "immut": 90, "claim": 90, "truli": 90, "_native_wrapp": 90, "genuin": 90, "some_method": 90, "rewritten": 90, "__pow__": 90, "strang": 90, "compartment": 90, "newshap": 90, "new_shap": 90, "tidi": 90, "crystal": 90, "ton": 91, "ado": [91, 92], "soup": 91, "walk": [91, 92], "cnt": 91, "combo": 91, "3333335": 91, "6666665": 91, "delimit": 91, "autocomplet": 91, "midwai": 91, "agent": 91, "total_spe": 91, "total_height": 91, "total_width": 91, "ag": 91, "tot": 91, "total_": 91, "total_h": 91, "disk": [91, 101], "cont_to_disk_as_hdf5": 91, "cont_from_disk_as_hdf5": 91, "cont_ident": 91, "same_arrai": 91, "cont_to_disk_as_pickl": 91, "cont_from_disk_as_pickl": 91, "cont_to_disk_as_json": 91, "cont_from_disk_as_json": 91, "cnt0": 91, "cnt1": 91, "cont_deep_copi": 91, "diff_0": 91, "diff_1": 91, "config0": 91, "config1": 91, "decod": 91, "l0": 91, "cont_flatten_key_chain": 91, "above_height": 91, "decoder__l0": 91, "decoder__l1": 91, "encoder__l0": 91, "encoder__l1": 91, "below_depth": 91, "l0__b": 91, "l0__w": 91, "l1__b": 91, "l1__w": 91, "cont_with_print_limit": 91, "printabl": 91, "cont_with_key_length_limit": 91, "cont_with_print_ind": 91, "indent": 91, "obviou": [91, 102], "foresight": 91, "untidili": 91, "update_ag": 91, "normalize_img": 91, "img_max": 91, "reduce_max": 91, "img_min": 91, "reduce_min": 91, "img_rang": 91, "agent_posit": 91, "agent_veloc": 91, "agent_cam_front_rgb": 91, "agent_cam_front_depth": 91, "agent_cam_rear_rgb": 91, "agent_cam_rear_depth": 91, "agent_cam_lidar": 91, "camera": 91, "front_rgb": 91, "front_depth": 91, "rear_rgb": 91, "rear_depth": 91, "lidar": 91, "rgb": 91, "rear": 91, "veloc": 91, "cam": 91, "cam_max": 91, "cam_min": 91, "cam_rang": 91, "perman": 91, "thread": [91, 102], "pretti": [91, 108], "straightforward": 91, "dataload": [91, 94], "_cnt": 91, "img_": 91, "_dataset_s": 91, "_batch_siz": 91, "_count": [91, 92], "__next__": 91, "cont_copi": 91, "filenam": 91, "img_fnam": 91, "cont_list_stack": 91, "loaded_img": 91, "cv2": 91, "imread": 91, "from_numpi": 91, "batch_slic": 91, "reduce_mean": [91, 92, 93], "0145": 91, "addbackward0": 91, "_create_vari": 92, "_input_channel": 92, "_output_channel": 92, "_w_shape": 92, "_b_shape": 92, "_with_bia": 92, "729": 92, "396": 92, "764": 92, "872": 92, "211": 92, "439": 92, "nightmar": 92, "overcom": 92, "v0": 92, "v1": 92, "key0": 92, "linear3": 92, "v2": 92, "_w_init": 92, "_b_init": 92, "misnom": 92, "saw": 92, "_beta1": 92, "_beta2": 92, "_epsilon": 92, "_mw": 92, "_vw": 92, "_first_pass": 92, "_should_compil": 92, "new_v": 92, "_lr": 92, "_inplac": 92, "_stop_gradi": 92, "clip_by_valu": 93, "sparse_funct": 93, "new_axi": 93, "constitu": 93, "_linear": 93, "jax_graph": 93, "to_backend": 93, "thinli": 93, "to_haiku_modul": 93, "loss_fn_t": 93, "without_apply_rng": 93, "update_rul": 93, "tree_multimap": 93, "pose": 95, "quaternion": 95, "ivy_mech": 95, "target_facing_rotation_matrix": 95, "polar_to_cartesian_coord": 95, "warp": 95, "optic": 95, "voxel": 95, "ivy_vis": 95, "coords_to_voxel_grid": 95, "render_pixel_coord": 95, "radianc": 95, "nerf": 95, "trajectori": 95, "motion": 95, "mobil": [95, 102], "sample_spline_path": 95, "rigidmobil": 95, "sample_bodi": 95, "drone": 95, "sample_link": 95, "openai": 95, "swimmer": 95, "reward": 95, "supervis": 95, "door": [95, 96], "cartpol": 95, "mountain_car": 95, "pendulum": 95, "reacher": 95, "learnt": 95, "ture": 95, "ntm": 95, "egospher": 95, "esm": 95, "ivy_memori": 95, "egocentr": 95, "room": 95, "doubt": 96, "grate": 96, "probe": 96, "remark": 96, "surpris": 96, "lock": 96, "gold": 96, "dex": 96, "ye": 96, "scan": 96, "tricki": [96, 97], "predictor": 96, "tight": 96, "driver": 96, "dispatch": [96, 102, 105], "ast": 96, "checkpoint": 96, "autodiff": 96, "shine": 96, "merci": 96, "autograd": 96, "compet": [96, 102], "paradigm": [96, 102], "parallelis": 96, "spmd": 96, "mixtur": 96, "expert": 96, "sophist": 96, "depart": 96, "hundr": 96, "thousand": 96, "broadli": [96, 108], "supplementari": 96, "reusabl": [96, 100, 102], "fanci": [96, 102], "fusion": [96, 106], "lose": 96, "pmap": 96, "overhead": [96, 105], "eventu": 96, "supplement": 96, "backdoor": 96, "callback": 96, "record": [96, 103], "somewhat": [96, 102], "outsourc": 96, "nail": 97, "funtion": 97, "asset": 97, "scientist": 97, "correl": 97, "analyz": 97, "conceptu": [98, 103], "broken": [98, 102], "tracer": 98, "infrastructur": [98, 104, 105], "vendor": [98, 104], "complimentari": [98, 108], "acycl": [98, 103], "insert_numb": 99, "insert_t": 99, "scaffold": [100, 108], "heart": 100, "toolchain": [100, 105], "intermedi": [100, 101, 102, 103, 108], "ir": [100, 103, 108], "assembli": [100, 107, 108], "idl": 100, "middl": 100, "emit": 100, "gnu": [100, 105], "gcc": [100, 107], "broader": 100, "heterogen": 100, "aid": 100, "coprocessor": 100, "programm": [100, 107], "gate": 100, "onednn": 100, "sit": [100, 103, 108], "tandem": 100, "possess": 100, "khrono": [101, 107], "appl": 101, "interact": [101, 102, 107], "coremltool": 101, "albeit": 101, "promin": 102, "abbrevi": 102, "laboratori": 102, "proprietari": [102, 106, 107], "mathwork": 102, "commerci": 102, "1984": 102, "toolbox": 102, "mupad": 102, "simulink": 102, "graphic": [102, 106, 107], "simul": 102, "million": [102, 105], "worldwid": 102, "scienc": [102, 104], "econom": 102, "2001": 102, "scientif": 102, "od": 102, "solver": 102, "cython": 102, "friendli": 102, "2002": 102, "lua": 102, "luajit": 102, "idiap": 102, "epfl": 102, "2005": 102, "numarrai": 102, "cpython": 102, "partli": 102, "2007": 102, "regress": [102, 109], "forest": 102, "boost": 102, "dbscan": 102, "inbuilt": 102, "esqu": 102, "aesara": 102, "2008": 102, "datafram": 102, "critic": [102, 108], "2012": 102, "Its": 102, "polymorph": 102, "parallel": [102, 106, 107], "mpi": 102, "openmp": 102, "glue": 102, "jaot": 102, "nasa": 102, "cern": 102, "climat": 102, "allianc": 102, "influenti": 102, "2014": 102, "analyt": [102, 104, 108], "scala": 102, "ship": 102, "forgiv": 102, "decemb": 102, "announc": 102, "transit": 102, "mainten": 102, "v7": 102, "meaning": 102, "2016": 102, "imper": 102, "amazon": 102, "traction": 102, "cognit": [102, 109], "toolkit": [102, 103, 109], "grade": 102, "realiz": 102, "dnn": 102, "cnn": 102, "rnn": 102, "backpropag": 102, "succumb": 102, "came": 102, "asynchron": 102, "monitor": 102, "practition": [102, 106, 107, 108], "hobbyist": 102, "tremend": 102, "ecosystem": 102, "gear": 102, "batteri": 102, "zygot": 102, "jl": 102, "workload": 102, "daggerflux": 102, "frontier": 102, "hessian": 102, "2018": 102, "lightweight": [102, 109], "shortcom": 102, "eas": 102, "barrier": 102, "inexperienc": 102, "underdevelop": 102, "fanat": 102, "ounc": 102, "infanc": 102, "emerg": 102, "nich": 102, "introduct": 102, "lite": 102, "enterpris": 102, "reinvent": [102, 104], "inertia": 102, "haven": 102, "creator": [102, 104], "paszk": 102, "hi": 102, "safeti": 102, "bulk": 102, "haskel": 102, "dataflow": 103, "distil": 103, "essenc": [103, 108], "enclos": 103, "scope": [103, 107], "trace_modul": 103, "scriptfunct": 103, "scriptmodul": 103, "fake": 103, "proxi": 103, "graphmodul": 103, "travi": 104, "oliph": 104, "leader": 104, "cornerston": 104, "numba": 104, "numfocu": 104, "pydata": 104, "confer": 104, "consult": 104, "servic": 104, "expertis": 104, "devop": 104, "mlop": 104, "dashboard": 104, "startup": 104, "mlir": [104, 105, 108], "Their": 104, "held": 104, "privileg": 104, "presum": 104, "llvm": [104, 107], "founder": 104, "tvm": [104, 108], "sustain": 104, "empow": 104, "har": 104, "burden": 104, "benchmark": 104, "convention": 105, "precompil": 105, "executor": 105, "exploit": 105, "fsf": 105, "gpl": 105, "biggest": [105, 108], "nvidia": [106, 107], "conduct": 106, "throughput": 106, "autotun": 106, "consumpt": 106, "gpgpu": 106, "talk": 107, "classic": 107, "sycl": 107, "dpc": 107, "processor": 107, "x86": 107, "oneapi": 107, "ia": 107, "aka": 107, "xeon": 107, "gen9": 107, "xe": 107, "card": 107, "arria": 107, "gx": 107, "fpga": 107, "tune": [107, 108], "lofti": 108, "ambit": 108, "realm": 108, "bedrock": 108, "flux": 108, "bite": 108, "chew": 108, "eagerpi": 108, "tensorli": 108, "thinc": 108, "neuropod": 108, "exhibit": 108, "emploi": 108, "fx": 108, "retrain": 108, "wider": 108, "closer": 108, "greatli": 108, "challeng": 108, "modular": 108, "anywher": 108, "theano": 109, "plaidml": 109, "partial_svd": 109, "tucker_mode_dot": 109, "excel": 109, "subsystem": 109}, "objects": {"": [[0, 0, 0, "-", "array"]], "ivy.functional.ivy": [[13, 0, 0, "-", "activations"], [14, 0, 0, "-", "constants"], [15, 0, 0, "-", "control_flow_ops"], [16, 0, 0, "-", "creation"], [17, 0, 0, "-", "data_type"], [18, 0, 0, "-", "device"], [19, 0, 0, "-", "elementwise"], [20, 0, 0, "-", "experimental"], [21, 0, 0, "-", "general"], [22, 0, 0, "-", "gradients"], [23, 0, 0, "-", "layers"], [24, 0, 0, "-", "linear_algebra"], [25, 0, 0, "-", "losses"], [26, 0, 0, "-", "manipulation"], [27, 0, 0, "-", "meta"], [28, 0, 0, "-", "nest"], [29, 0, 0, "-", "norms"], [30, 0, 0, "-", "random"], [31, 0, 0, "-", "searching"], [32, 0, 0, "-", "set"], [33, 0, 0, "-", "sorting"], [34, 0, 0, "-", "statistical"], [35, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[13, 1, 1, "", "deserialize"], [13, 1, 1, "", "gelu"], [13, 1, 1, "", "get"], [13, 1, 1, "", "leaky_relu"], [13, 1, 1, "", "log_softmax"], [13, 1, 1, "", "mish"], [13, 1, 1, "", "relu"], [13, 1, 1, "", "sigmoid"], [13, 1, 1, "", "softmax"], [13, 1, 1, "", "softplus"]], "ivy.functional.ivy.constants": [[14, 2, 1, "", "e"], [14, 2, 1, "", "inf"], [14, 2, 1, "", "nan"], [14, 2, 1, "", "newaxis"], [14, 2, 1, "", "pi"]], "ivy.functional.ivy.control_flow_ops": [[15, 1, 1, "", "IfElse"], [15, 1, 1, "", "WhileLoop"], [15, 1, 1, "", "if_else"], [15, 1, 1, "", "while_loop"]], "ivy.functional.ivy.creation": [[16, 3, 1, "", "NestedSequence"], [16, 1, 1, "", "arange"], [16, 1, 1, "", "array"], [16, 1, 1, "", "asarray"], [16, 1, 1, "", "asarray_handle_nestable"], [16, 1, 1, "", "asarray_infer_device"], [16, 1, 1, "", "asarray_to_native_arrays_and_back"], [16, 1, 1, "", "copy_array"], [16, 1, 1, "", "empty"], [16, 1, 1, "", "empty_like"], [16, 1, 1, "", "eye"], [16, 1, 1, "", "from_dlpack"], [16, 1, 1, "", "full"], [16, 1, 1, "", "full_like"], [16, 1, 1, "", "linspace"], [16, 1, 1, "", "logspace"], [16, 1, 1, "", "meshgrid"], [16, 1, 1, "", "native_array"], [16, 1, 1, "", "one_hot"], [16, 1, 1, "", "ones"], [16, 1, 1, "", "ones_like"], [16, 1, 1, "", "tril"], [16, 1, 1, "", "triu"], [16, 1, 1, "", "zeros"], [16, 1, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[16, 4, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[17, 3, 1, "", "DefaultComplexDtype"], [17, 3, 1, "", "DefaultDtype"], [17, 3, 1, "", "DefaultFloatDtype"], [17, 3, 1, "", "DefaultIntDtype"], [17, 3, 1, "", "DefaultUintDtype"], [17, 1, 1, "", "as_ivy_dtype"], [17, 1, 1, "", "as_native_dtype"], [17, 1, 1, "", "astype"], [17, 1, 1, "", "broadcast_arrays"], [17, 1, 1, "", "broadcast_to"], [17, 1, 1, "", "can_cast"], [17, 1, 1, "", "check_float"], [17, 1, 1, "", "closest_valid_dtype"], [17, 1, 1, "", "default_complex_dtype"], [17, 1, 1, "", "default_dtype"], [17, 1, 1, "", "default_float_dtype"], [17, 1, 1, "", "default_int_dtype"], [17, 1, 1, "", "default_uint_dtype"], [17, 1, 1, "", "dtype"], [17, 1, 1, "", "dtype_bits"], [17, 1, 1, "", "finfo"], [17, 1, 1, "", "function_supported_dtypes"], [17, 1, 1, "", "function_unsupported_dtypes"], [17, 1, 1, "", "iinfo"], [17, 1, 1, "", "infer_default_dtype"], [17, 1, 1, "", "invalid_dtype"], [17, 1, 1, "", "is_bool_dtype"], [17, 1, 1, "", "is_complex_dtype"], [17, 1, 1, "", "is_float_dtype"], [17, 1, 1, "", "is_int_dtype"], [17, 1, 1, "", "is_uint_dtype"], [17, 1, 1, "", "promote_types"], [17, 1, 1, "", "promote_types_of_inputs"], [17, 1, 1, "", "result_type"], [17, 1, 1, "", "set_default_complex_dtype"], [17, 1, 1, "", "set_default_dtype"], [17, 1, 1, "", "set_default_float_dtype"], [17, 1, 1, "", "set_default_int_dtype"], [17, 1, 1, "", "set_default_uint_dtype"], [17, 1, 1, "", "type_promote_arrays"], [17, 1, 1, "", "unset_default_complex_dtype"], [17, 1, 1, "", "unset_default_dtype"], [17, 1, 1, "", "unset_default_float_dtype"], [17, 1, 1, "", "unset_default_int_dtype"], [17, 1, 1, "", "unset_default_uint_dtype"], [17, 1, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultComplexDtype": [[17, 4, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultDtype": [[17, 4, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[17, 4, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[17, 4, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[17, 4, 1, "", "__init__"]], "ivy.functional.ivy.device": [[18, 3, 1, "", "DefaultDevice"], [18, 3, 1, "", "Profiler"], [18, 1, 1, "", "as_ivy_dev"], [18, 1, 1, "", "as_native_dev"], [18, 1, 1, "", "clear_cached_mem_on_dev"], [18, 1, 1, "", "default_device"], [18, 1, 1, "", "dev"], [18, 1, 1, "", "dev_util"], [18, 1, 1, "", "function_supported_devices"], [18, 1, 1, "", "function_unsupported_devices"], [18, 1, 1, "", "get_all_ivy_arrays_on_dev"], [18, 1, 1, "", "gpu_is_available"], [18, 1, 1, "", "num_cpu_cores"], [18, 1, 1, "", "num_gpus"], [18, 1, 1, "", "num_ivy_arrays_on_dev"], [18, 1, 1, "", "percent_used_mem_on_dev"], [18, 1, 1, "", "print_all_ivy_arrays_on_dev"], [18, 1, 1, "", "set_default_device"], [18, 1, 1, "", "set_split_factor"], [18, 1, 1, "", "split_factor"], [18, 1, 1, "", "split_func_call"], [18, 1, 1, "", "to_device"], [18, 1, 1, "", "total_mem_on_dev"], [18, 1, 1, "", "tpu_is_available"], [18, 1, 1, "", "unset_default_device"], [18, 1, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[18, 4, 1, "", "__enter__"], [18, 4, 1, "", "__exit__"], [18, 4, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[18, 4, 1, "", "__init__"], [18, 4, 1, "", "start"], [18, 4, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[19, 1, 1, "", "abs"], [19, 1, 1, "", "acos"], [19, 1, 1, "", "acosh"], [19, 1, 1, "", "add"], [19, 1, 1, "", "asin"], [19, 1, 1, "", "asinh"], [19, 1, 1, "", "atan"], [19, 1, 1, "", "atan2"], [19, 1, 1, "", "atanh"], [19, 1, 1, "", "bitwise_and"], [19, 1, 1, "", "bitwise_invert"], [19, 1, 1, "", "bitwise_left_shift"], [19, 1, 1, "", "bitwise_or"], [19, 1, 1, "", "bitwise_right_shift"], [19, 1, 1, "", "bitwise_xor"], [19, 1, 1, "", "ceil"], [19, 1, 1, "", "cos"], [19, 1, 1, "", "cosh"], [19, 1, 1, "", "deg2rad"], [19, 1, 1, "", "divide"], [19, 1, 1, "", "equal"], [19, 1, 1, "", "erf"], [19, 1, 1, "", "exp"], [19, 1, 1, "", "expm1"], [19, 1, 1, "", "floor"], [19, 1, 1, "", "floor_divide"], [19, 1, 1, "", "greater"], [19, 1, 1, "", "greater_equal"], [19, 1, 1, "", "isfinite"], [19, 1, 1, "", "isinf"], [19, 1, 1, "", "isnan"], [19, 1, 1, "", "isreal"], [19, 1, 1, "", "less"], [19, 1, 1, "", "less_equal"], [19, 1, 1, "", "log"], [19, 1, 1, "", "log10"], [19, 1, 1, "", "log1p"], [19, 1, 1, "", "log2"], [19, 1, 1, "", "logaddexp"], [19, 1, 1, "", "logical_and"], [19, 1, 1, "", "logical_not"], [19, 1, 1, "", "logical_or"], [19, 1, 1, "", "logical_xor"], [19, 1, 1, "", "maximum"], [19, 1, 1, "", "minimum"], [19, 1, 1, "", "multiply"], [19, 1, 1, "", "negative"], [19, 1, 1, "", "not_equal"], [19, 1, 1, "", "positive"], [19, 1, 1, "", "pow"], [19, 1, 1, "", "rad2deg"], [19, 1, 1, "", "reciprocal"], [19, 1, 1, "", "remainder"], [19, 1, 1, "", "round"], [19, 1, 1, "", "sign"], [19, 1, 1, "", "sin"], [19, 1, 1, "", "sinh"], [19, 1, 1, "", "sqrt"], [19, 1, 1, "", "square"], [19, 1, 1, "", "subtract"], [19, 1, 1, "", "tan"], [19, 1, 1, "", "tanh"], [19, 1, 1, "", "trunc"], [19, 1, 1, "", "trunc_divide"]], "ivy.functional.ivy.experimental": [[20, 3, 1, "", "NativeSparseArray"], [20, 3, 1, "", "Number"], [20, 3, 1, "", "SparseArray"], [20, 1, 1, "", "adaptive_avg_pool1d"], [20, 1, 1, "", "adaptive_avg_pool2d"], [20, 1, 1, "", "adjoint"], [20, 1, 1, "", "allclose"], [20, 1, 1, "", "angle"], [20, 1, 1, "", "atleast_1d"], [20, 1, 1, "", "atleast_2d"], [20, 1, 1, "", "atleast_3d"], [20, 1, 1, "", "avg_pool1d"], [20, 1, 1, "", "avg_pool2d"], [20, 1, 1, "", "avg_pool3d"], [20, 1, 1, "", "batch_norm"], [20, 1, 1, "", "bernoulli"], [20, 1, 1, "", "beta"], [20, 1, 1, "", "binarizer"], [20, 1, 1, "", "binary_cross_entropy_with_logits"], [20, 1, 1, "", "bincount"], [20, 1, 1, "", "bind_custom_gradient_function"], [20, 1, 1, "", "broadcast_shapes"], [20, 1, 1, "", "celu"], [20, 1, 1, "", "compute_weight_mat"], [20, 1, 1, "", "cond"], [20, 1, 1, "", "conj"], [20, 1, 1, "", "copysign"], [20, 1, 1, "", "corrcoef"], [20, 1, 1, "", "cos"], [20, 1, 1, "", "count_nonzero"], [20, 1, 1, "", "current_backend"], [20, 1, 1, "", "dct"], [20, 1, 1, "", "dft"], [20, 1, 1, "", "diagflat"], [20, 1, 1, "", "diff"], [20, 1, 1, "", "dirichlet"], [20, 1, 1, "", "dropout1d"], [20, 1, 1, "", "dropout3d"], [20, 1, 1, "", "dsplit"], [20, 1, 1, "", "dstack"], [20, 1, 1, "", "eig"], [20, 1, 1, "", "eigh_tridiagonal"], [20, 1, 1, "", "eigvals"], [20, 1, 1, "", "elu"], [20, 1, 1, "", "embedding"], [20, 1, 1, "", "exp2"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "eye_like"], [20, 1, 1, "", "fft"], [20, 1, 1, "", "fix"], [20, 1, 1, "", "flatten"], [20, 1, 1, "", "fliplr"], [20, 1, 1, "", "flipud"], [20, 1, 1, "", "float_power"], [20, 1, 1, "", "fmax"], [20, 1, 1, "", "fmin"], [20, 1, 1, "", "fmod"], [20, 1, 1, "", "frexp"], [20, 1, 1, "", "gamma"], [20, 1, 1, "", "gcd"], [20, 1, 1, "", "glu"], [20, 1, 1, "", "gradient"], [20, 1, 1, "", "group_norm"], [20, 1, 1, "", "hamming_window"], [20, 1, 1, "", "handle_array_function"], [20, 1, 1, "", "handle_array_like_without_promotion"], [20, 1, 1, "", "handle_exceptions"], [20, 1, 1, "", "handle_nestable"], [20, 1, 1, "", "handle_out_argument"], [20, 1, 1, "", "handle_view"], [20, 1, 1, "", "hann_window"], [20, 1, 1, "", "hard_sigmoid"], [20, 1, 1, "", "hard_silu"], [20, 1, 1, "", "hard_tanh"], [20, 1, 1, "", "hardshrink"], [20, 1, 1, "", "heaviside"], [20, 1, 1, "", "hsplit"], [20, 1, 1, "", "hstack"], [20, 1, 1, "", "hypot"], [20, 1, 1, "", "i0"], [20, 1, 1, "", "ifft"], [20, 1, 1, "", "imag"], [20, 1, 1, "", "infer_device"], [20, 1, 1, "", "infer_dtype"], [20, 1, 1, "", "inputs_to_native_arrays"], [20, 1, 1, "", "instance_norm"], [20, 1, 1, "", "integer_arrays_to_float"], [20, 1, 1, "", "interp"], [20, 1, 1, "", "interpolate"], [20, 1, 1, "", "is_ivy_sparse_array"], [20, 1, 1, "", "is_native_dtype"], [20, 1, 1, "", "is_native_sparse_array"], [20, 1, 1, "", "isclose"], [20, 1, 1, "", "isin"], [20, 1, 1, "", "kaiser_bessel_derived_window"], [20, 1, 1, "", "kaiser_window"], [20, 1, 1, "", "kron"], [20, 1, 1, "", "l2_normalize"], [20, 1, 1, "", "lcm"], [20, 1, 1, "", "ldexp"], [20, 1, 1, "", "lexsort"], [20, 1, 1, "", "log_sigmoid"], [20, 1, 1, "", "logaddexp2"], [20, 1, 1, "", "logit"], [20, 1, 1, "", "logsigmoid"], [20, 1, 1, "", "lp_normalize"], [20, 1, 1, "", "matrix_exp"], [20, 1, 1, "", "max_pool1d"], [20, 1, 1, "", "max_pool2d"], [20, 1, 1, "", "max_pool3d"], [20, 1, 1, "", "median"], [20, 1, 1, "", "moveaxis"], [20, 1, 1, "", "msort"], [20, 1, 1, "", "multi_dot"], [20, 1, 1, "", "nan_to_num"], [20, 1, 1, "", "nanmean"], [20, 1, 1, "", "nanmedian"], [20, 1, 1, "", "nansum"], [20, 1, 1, "", "native_sparse_array"], [20, 1, 1, "", "native_sparse_array_to_indices_values_and_shape"], [20, 1, 1, "", "ndenumerate"], [20, 1, 1, "", "ndindex"], [20, 1, 1, "", "nextafter"], [20, 1, 1, "", "outputs_to_ivy_arrays"], [20, 1, 1, "", "pad"], [20, 1, 1, "", "parametric_relu"], [20, 1, 1, "", "poisson"], [20, 1, 1, "", "quantile"], [20, 1, 1, "", "real"], [20, 1, 1, "", "relu6"], [20, 1, 1, "", "rot90"], [20, 1, 1, "", "selu"], [20, 1, 1, "", "sigmoid"], [20, 1, 1, "", "signbit"], [20, 1, 1, "", "silu"], [20, 1, 1, "", "sinc"], [20, 1, 1, "", "softshrink"], [20, 1, 1, "", "softsign"], [20, 1, 1, "", "sqrt"], [20, 1, 1, "", "take_along_axis"], [20, 1, 1, "", "threshold"], [20, 1, 1, "", "thresholded_relu"], [20, 1, 1, "", "to_native_arrays_and_back"], [20, 1, 1, "", "top_k"], [20, 1, 1, "", "trapz"], [20, 1, 1, "", "tril_indices"], [20, 1, 1, "", "triu_indices"], [20, 1, 1, "", "unravel_index"], [20, 1, 1, "", "vorbis_window"], [20, 1, 1, "", "vsplit"], [20, 1, 1, "", "vstack"], [20, 1, 1, "", "xlogy"], [20, 1, 1, "", "zeta"]], "ivy.functional.ivy.experimental.SparseArray": [[20, 4, 1, "", "__init__"], [20, 5, 1, "", "ccol_indices"], [20, 5, 1, "", "col_indices"], [20, 5, 1, "", "coo_indices"], [20, 5, 1, "", "crow_indices"], [20, 5, 1, "", "data"], [20, 5, 1, "", "dense_shape"], [20, 5, 1, "", "row_indices"], [20, 4, 1, "", "to_dense_array"], [20, 5, 1, "", "values"]], "ivy.functional.ivy.general": [[21, 3, 1, "", "ArrayMode"], [21, 1, 1, "", "all_equal"], [21, 1, 1, "", "arg_info"], [21, 1, 1, "", "arg_names"], [21, 1, 1, "", "array_equal"], [21, 1, 1, "", "assert_supports_inplace"], [21, 1, 1, "", "cache_fn"], [21, 1, 1, "", "clip_matrix_norm"], [21, 1, 1, "", "clip_vector_norm"], [21, 1, 1, "", "container_types"], [21, 1, 1, "", "current_backend_str"], [21, 1, 1, "", "default"], [21, 1, 1, "", "einops_rearrange"], [21, 1, 1, "", "einops_reduce"], [21, 1, 1, "", "einops_repeat"], [21, 1, 1, "", "exists"], [21, 1, 1, "", "fourier_encode"], [21, 1, 1, "", "function_supported_devices_and_dtypes"], [21, 1, 1, "", "function_unsupported_devices_and_dtypes"], [21, 1, 1, "", "gather"], [21, 1, 1, "", "gather_nd"], [21, 1, 1, "", "get_all_arrays_in_memory"], [21, 1, 1, "", "get_array_mode"], [21, 1, 1, "", "get_exception_trace_mode"], [21, 1, 1, "", "get_item"], [21, 1, 1, "", "get_min_base"], [21, 1, 1, "", "get_min_denominator"], [21, 1, 1, "", "get_nestable_mode"], [21, 1, 1, "", "get_num_dims"], [21, 1, 1, "", "get_queue_timeout"], [21, 1, 1, "", "get_referrers_recursive"], [21, 1, 1, "", "get_show_func_wrapper_trace_mode"], [21, 1, 1, "", "get_tmp_dir"], [21, 1, 1, "", "has_nans"], [21, 1, 1, "", "inplace_arrays_supported"], [21, 1, 1, "", "inplace_decrement"], [21, 1, 1, "", "inplace_increment"], [21, 1, 1, "", "inplace_update"], [21, 1, 1, "", "inplace_variables_supported"], [21, 1, 1, "", "is_array"], [21, 1, 1, "", "is_ivy_array"], [21, 1, 1, "", "is_ivy_container"], [21, 1, 1, "", "is_native_array"], [21, 1, 1, "", "isscalar"], [21, 1, 1, "", "match_kwargs"], [21, 1, 1, "", "multiprocessing"], [21, 1, 1, "", "num_arrays_in_memory"], [21, 1, 1, "", "print_all_arrays_in_memory"], [21, 1, 1, "", "scatter_flat"], [21, 1, 1, "", "scatter_nd"], [21, 1, 1, "", "set_array_mode"], [21, 1, 1, "", "set_exception_trace_mode"], [21, 1, 1, "", "set_min_base"], [21, 1, 1, "", "set_min_denominator"], [21, 1, 1, "", "set_nestable_mode"], [21, 1, 1, "", "set_queue_timeout"], [21, 1, 1, "", "set_shape_array_mode"], [21, 1, 1, "", "set_show_func_wrapper_trace_mode"], [21, 1, 1, "", "set_tmp_dir"], [21, 1, 1, "", "shape"], [21, 1, 1, "", "shape_array_mode"], [21, 1, 1, "", "stable_divide"], [21, 1, 1, "", "stable_pow"], [21, 1, 1, "", "supports_inplace_updates"], [21, 1, 1, "", "to_ivy_shape"], [21, 1, 1, "", "to_list"], [21, 1, 1, "", "to_native_shape"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "to_scalar"], [21, 1, 1, "", "try_else_none"], [21, 1, 1, "", "unset_array_mode"], [21, 1, 1, "", "unset_exception_trace_mode"], [21, 1, 1, "", "unset_nestable_mode"], [21, 1, 1, "", "unset_queue_timeout"], [21, 1, 1, "", "unset_shape_array_mode"], [21, 1, 1, "", "unset_show_func_wrapper_trace_mode"], [21, 1, 1, "", "value_is_nan"], [21, 1, 1, "", "vmap"]], "ivy.functional.ivy.general.ArrayMode": [[21, 4, 1, "", "__init__"]], "ivy.functional.ivy.gradients": [[22, 3, 1, "", "GradientTracking"], [22, 1, 1, "", "adam_step"], [22, 1, 1, "", "adam_update"], [22, 1, 1, "", "execute_with_gradients"], [22, 1, 1, "", "grad"], [22, 1, 1, "", "gradient_descent_update"], [22, 1, 1, "", "jac"], [22, 1, 1, "", "lamb_update"], [22, 1, 1, "", "lars_update"], [22, 1, 1, "", "optimizer_update"], [22, 1, 1, "", "set_with_grads"], [22, 1, 1, "", "stop_gradient"], [22, 1, 1, "", "unset_with_grads"], [22, 1, 1, "", "value_and_grad"], [22, 1, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[22, 4, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[23, 1, 1, "", "conv"], [23, 1, 1, "", "conv1d"], [23, 1, 1, "", "conv1d_transpose"], [23, 1, 1, "", "conv2d"], [23, 1, 1, "", "conv2d_transpose"], [23, 1, 1, "", "conv3d"], [23, 1, 1, "", "conv3d_transpose"], [23, 1, 1, "", "conv_general_dilated"], [23, 1, 1, "", "conv_general_transpose"], [23, 1, 1, "", "depthwise_conv2d"], [23, 1, 1, "", "dropout"], [23, 1, 1, "", "linear"], [23, 1, 1, "", "lstm_update"], [23, 1, 1, "", "multi_head_attention"], [23, 1, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[24, 1, 1, "", "cholesky"], [24, 1, 1, "", "cross"], [24, 1, 1, "", "det"], [24, 1, 1, "", "diag"], [24, 1, 1, "", "diagonal"], [24, 1, 1, "", "eig"], [24, 1, 1, "", "eigh"], [24, 1, 1, "", "eigvalsh"], [24, 1, 1, "", "inner"], [24, 1, 1, "", "inv"], [24, 1, 1, "", "lu_factor"], [24, 1, 1, "", "matmul"], [24, 1, 1, "", "matrix_norm"], [24, 1, 1, "", "matrix_power"], [24, 1, 1, "", "matrix_rank"], [24, 1, 1, "", "matrix_transpose"], [24, 1, 1, "", "outer"], [24, 1, 1, "", "pinv"], [24, 1, 1, "", "qr"], [24, 1, 1, "", "slogdet"], [24, 1, 1, "", "solve"], [24, 1, 1, "", "svd"], [24, 1, 1, "", "svdvals"], [24, 1, 1, "", "tensordot"], [24, 1, 1, "", "tensorsolve"], [24, 1, 1, "", "trace"], [24, 1, 1, "", "vander"], [24, 1, 1, "", "vecdot"], [24, 1, 1, "", "vector_norm"], [24, 1, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[25, 1, 1, "", "binary_cross_entropy"], [25, 1, 1, "", "cross_entropy"], [25, 1, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[26, 1, 1, "", "clip"], [26, 1, 1, "", "concat"], [26, 1, 1, "", "constant_pad"], [26, 1, 1, "", "expand_dims"], [26, 1, 1, "", "flip"], [26, 1, 1, "", "permute_dims"], [26, 1, 1, "", "repeat"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "roll"], [26, 1, 1, "", "split"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "stack"], [26, 1, 1, "", "swapaxes"], [26, 1, 1, "", "tile"], [26, 1, 1, "", "unstack"], [26, 1, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[27, 1, 1, "", "fomaml_step"], [27, 1, 1, "", "maml_step"], [27, 1, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[28, 1, 1, "", "all_nested_indices"], [28, 1, 1, "", "copy_nest"], [28, 1, 1, "", "duplicate_array_index_chains"], [28, 1, 1, "", "index_nest"], [28, 1, 1, "", "insert_into_nest_at_index"], [28, 1, 1, "", "insert_into_nest_at_indices"], [28, 1, 1, "", "map"], [28, 1, 1, "", "map_nest_at_index"], [28, 1, 1, "", "map_nest_at_indices"], [28, 1, 1, "", "multi_index_nest"], [28, 1, 1, "", "nested_any"], [28, 1, 1, "", "nested_argwhere"], [28, 1, 1, "", "nested_map"], [28, 1, 1, "", "nested_multi_map"], [28, 1, 1, "", "prune_empty"], [28, 1, 1, "", "prune_nest_at_index"], [28, 1, 1, "", "prune_nest_at_indices"], [28, 1, 1, "", "set_nest_at_index"], [28, 1, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[29, 1, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[30, 1, 1, "", "multinomial"], [30, 1, 1, "", "randint"], [30, 1, 1, "", "random_normal"], [30, 1, 1, "", "random_uniform"], [30, 1, 1, "", "seed"], [30, 1, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[31, 1, 1, "", "argmax"], [31, 1, 1, "", "argmin"], [31, 1, 1, "", "argwhere"], [31, 1, 1, "", "nonzero"], [31, 1, 1, "", "where"]], "ivy.functional.ivy.set": [[32, 1, 1, "", "unique_all"], [32, 1, 1, "", "unique_counts"], [32, 1, 1, "", "unique_inverse"], [32, 1, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[33, 1, 1, "", "argsort"], [33, 1, 1, "", "searchsorted"], [33, 1, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[34, 1, 1, "", "cumprod"], [34, 1, 1, "", "cumsum"], [34, 1, 1, "", "einsum"], [34, 1, 1, "", "max"], [34, 1, 1, "", "mean"], [34, 1, 1, "", "min"], [34, 1, 1, "", "prod"], [34, 1, 1, "", "std"], [34, 1, 1, "", "sum"], [34, 1, 1, "", "var"]], "ivy.functional.ivy.utility": [[35, 1, 1, "", "all"], [35, 1, 1, "", "any"]], "ivy.nested_array": [[37, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[37, 3, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[37, 4, 1, "", "__init__"], [37, 5, 1, "", "data"], [37, 5, 1, "", "device"], [37, 5, 1, "", "dtype"], [37, 4, 1, "", "from_row_lengths"], [37, 4, 1, "", "from_row_split"], [37, 5, 1, "", "ndim"], [37, 4, 1, "", "nested_array"], [37, 4, 1, "", "reshape"], [37, 5, 1, "", "shape"], [37, 4, 1, "", "unbind"]], "ivy.stateful": [[3, 0, 0, "-", "activations"], [4, 0, 0, "-", "converters"], [5, 0, 0, "-", "helpers"], [6, 0, 0, "-", "initializers"], [7, 0, 0, "-", "layers"], [8, 0, 0, "-", "module"], [9, 0, 0, "-", "norms"], [10, 0, 0, "-", "optimizers"], [11, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[3, 3, 1, "", "GEGLU"], [3, 3, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[3, 4, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[3, 4, 1, "", "__init__"]], "ivy.stateful.converters": [[4, 3, 1, "", "ModuleConverters"], [4, 1, 1, "", "to_ivy_module"]], "ivy.stateful.converters.ModuleConverters": [[4, 4, 1, "", "from_haiku_module"], [4, 4, 1, "", "from_keras_module"], [4, 4, 1, "", "from_torch_module"]], "ivy.stateful.helpers": [[5, 3, 1, "", "ModuleHelpers"]], "ivy.stateful.helpers.ModuleHelpers": [[5, 4, 1, "", "check_submod_rets"], [5, 4, 1, "", "get_mod_key"], [5, 4, 1, "", "mod_depth"], [5, 4, 1, "", "mod_height"], [5, 4, 1, "", "mod_with_top_mod_key_chain"], [5, 4, 1, "", "show_mod_in_top_mod"], [5, 4, 1, "", "show_structure"], [5, 4, 1, "", "show_v_in_top_v"], [5, 4, 1, "", "sub_mods"], [5, 4, 1, "", "track_submod_call_order"], [5, 4, 1, "", "track_submod_rets"], [5, 4, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.initializers": [[6, 3, 1, "", "Constant"], [6, 3, 1, "", "FirstLayerSiren"], [6, 3, 1, "", "GlorotUniform"], [6, 3, 1, "", "Initializer"], [6, 3, 1, "", "KaimingNormal"], [6, 3, 1, "", "Ones"], [6, 3, 1, "", "Siren"], [6, 3, 1, "", "Uniform"], [6, 3, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[6, 4, 1, "", "__init__"], [6, 4, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[6, 4, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[6, 4, 1, "", "__init__"]], "ivy.stateful.initializers.Initializer": [[6, 4, 1, "", "create_variables"]], "ivy.stateful.initializers.KaimingNormal": [[6, 4, 1, "", "__init__"], [6, 4, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[6, 4, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[6, 4, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[6, 4, 1, "", "__init__"], [6, 4, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[6, 4, 1, "", "__init__"]], "ivy.stateful.layers": [[7, 3, 1, "", "Conv1D"], [7, 3, 1, "", "Conv1DTranspose"], [7, 3, 1, "", "Conv2D"], [7, 3, 1, "", "Conv2DTranspose"], [7, 3, 1, "", "Conv3D"], [7, 3, 1, "", "Conv3DTranspose"], [7, 3, 1, "", "DepthwiseConv2D"], [7, 3, 1, "", "Dropout"], [7, 3, 1, "", "LSTM"], [7, 3, 1, "", "Linear"], [7, 3, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[7, 4, 1, "", "__init__"], [7, 4, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[7, 4, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[7, 4, 1, "", "__init__"]], "ivy.stateful.module": [[8, 3, 1, "", "Module"]], "ivy.stateful.module.Module": [[8, 4, 1, "", "__call__"], [8, 4, 1, "", "__init__"], [8, 4, 1, "", "build"], [8, 5, 1, "", "build_mode"], [8, 5, 1, "", "built_"], [8, 4, 1, "", "compile"], [8, 4, 1, "", "save_weights"], [8, 4, 1, "", "show_graph"]], "ivy.stateful.norms": [[9, 3, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[9, 4, 1, "", "__init__"]], "ivy.stateful.optimizers": [[10, 3, 1, "", "Adam"], [10, 3, 1, "", "LAMB"], [10, 3, 1, "", "LARS"], [10, 3, 1, "", "Optimizer"], [10, 3, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[10, 4, 1, "", "__init__"], [10, 4, 1, "", "set_state"], [10, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[10, 4, 1, "", "__init__"], [10, 4, 1, "", "set_state"], [10, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[10, 4, 1, "", "__init__"], [10, 4, 1, "", "set_state"], [10, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[10, 4, 1, "", "__init__"], [10, 4, 1, "", "set_state"], [10, 4, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[10, 4, 1, "", "__init__"], [10, 4, 1, "", "set_state"], [10, 5, 1, "", "state"]], "ivy.stateful.sequential": [[11, 3, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[11, 4, 1, "", "__init__"]], "ivy.utils": [[48, 0, 0, "-", "assertions"], [49, 0, 0, "-", "backend"], [50, 0, 0, "-", "dynamic_import"], [51, 0, 0, "-", "exceptions"], [52, 0, 0, "-", "inspection"], [53, 0, 0, "-", "verbosity"]], "ivy.utils.assertions": [[48, 1, 1, "", "check_all"], [48, 1, 1, "", "check_all_or_any_fn"], [48, 1, 1, "", "check_any"], [48, 1, 1, "", "check_dimensions"], [48, 1, 1, "", "check_elem_in_list"], [48, 1, 1, "", "check_equal"], [48, 1, 1, "", "check_exists"], [48, 1, 1, "", "check_false"], [48, 1, 1, "", "check_fill_value_and_dtype_are_compatible"], [48, 1, 1, "", "check_gather_input_valid"], [48, 1, 1, "", "check_gather_nd_input_valid"], [48, 1, 1, "", "check_greater"], [48, 1, 1, "", "check_inplace_sizes_valid"], [48, 1, 1, "", "check_isinstance"], [48, 1, 1, "", "check_kernel_padding_size"], [48, 1, 1, "", "check_less"], [48, 1, 1, "", "check_one_way_broadcastable"], [48, 1, 1, "", "check_same_dtype"], [48, 1, 1, "", "check_shape"], [48, 1, 1, "", "check_shapes_broadcastable"], [48, 1, 1, "", "check_true"]], "ivy.utils.dynamic_import": [[50, 1, 1, "", "import_module"]], "ivy.utils.exceptions": [[51, 6, 1, "", "IvyBackendException"], [51, 6, 1, "", "IvyError"], [51, 6, 1, "", "IvyException"], [51, 6, 1, "", "IvyNotImplementedException"], [51, 1, 1, "", "handle_exceptions"]], "ivy.utils.exceptions.IvyBackendException": [[51, 4, 1, "", "__init__"]], "ivy.utils.exceptions.IvyError": [[51, 4, 1, "", "__init__"]], "ivy.utils.exceptions.IvyException": [[51, 4, 1, "", "__init__"]], "ivy.utils.exceptions.IvyNotImplementedException": [[51, 4, 1, "", "__init__"]], "ivy.utils.inspection": [[52, 1, 1, "", "add_array_specs"], [52, 1, 1, "", "fn_array_spec"]], "ivy.utils.verbosity": [[53, 1, 1, "", "cprint"]], "ivy_tests.test_ivy.helpers": [[38, 0, 0, "-", "assertions"], [39, 0, 0, "-", "available_frameworks"], [40, 0, 0, "-", "function_testing"], [41, 0, 0, "-", "globals"], [42, 0, 0, "-", "hypothesis_helpers"], [43, 0, 0, "-", "structs"], [44, 0, 0, "-", "test_parameter_flags"], [45, 0, 0, "-", "testing_helpers"]], "ivy_tests.test_ivy.helpers.assertions": [[38, 1, 1, "", "assert_all_close"], [38, 1, 1, "", "assert_same_type_and_shape"], [38, 1, 1, "", "check_unsupported_device"], [38, 1, 1, "", "check_unsupported_device_and_dtype"], [38, 1, 1, "", "check_unsupported_dtype"], [38, 1, 1, "", "test_unsupported_function"], [38, 1, 1, "", "value_test"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[39, 1, 1, "", "available_frameworks"], [39, 1, 1, "", "ground_truth"]], "ivy_tests.test_ivy.helpers.function_testing": [[40, 1, 1, "", "args_to_container"], [40, 1, 1, "", "as_lists"], [40, 1, 1, "", "compiled_if_required"], [40, 1, 1, "", "convtrue"], [40, 1, 1, "", "create_args_kwargs"], [40, 1, 1, "", "empty_func"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "flatten_and_to_np"], [40, 1, 1, "", "flatten_fw_and_to_np"], [40, 1, 1, "", "framework_comparator"], [40, 1, 1, "", "get_frontend_ret"], [40, 1, 1, "", "get_ret_and_flattened_np_array"], [40, 1, 1, "", "gradient_incompatible_function"], [40, 1, 1, "", "gradient_test"], [40, 1, 1, "", "gradient_unsupported_dtypes"], [40, 1, 1, "", "kwargs_to_args_n_kwargs"], [40, 1, 1, "", "make_json_pickable"], [40, 1, 1, "", "test_frontend_function"], [40, 1, 1, "", "test_frontend_method"], [40, 1, 1, "", "test_function"], [40, 1, 1, "", "test_method"], [40, 1, 1, "", "var_fn"]], "ivy_tests.test_ivy.helpers.globals": [[41, 6, 1, "", "InterruptedTest"], [41, 3, 1, "", "TestData"], [41, 1, 1, "", "remove_all_current_framework"], [41, 1, 1, "", "setup_api_test"], [41, 1, 1, "", "setup_frontend_test"], [41, 1, 1, "", "teardown_api_test"], [41, 1, 1, "", "teardown_frontend_test"]], "ivy_tests.test_ivy.helpers.globals.InterruptedTest": [[41, 4, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.globals.TestData": [[41, 4, 1, "", "__init__"], [41, 7, 1, "", "fn_name"], [41, 7, 1, "", "fn_tree"], [41, 7, 1, "", "is_method"], [41, 7, 1, "", "supported_device_dtypes"], [41, 7, 1, "", "test_fn"]], "ivy_tests.test_ivy.helpers.structs": [[43, 3, 1, "", "FrontendMethodData"]], "ivy_tests.test_ivy.helpers.structs.FrontendMethodData": [[43, 4, 1, "", "__init__"], [43, 7, 1, "", "framework_init_module"], [43, 7, 1, "", "init_name"], [43, 7, 1, "", "ivy_init_module"], [43, 7, 1, "", "method_name"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[44, 3, 1, "", "FrontendFunctionTestFlags"], [44, 3, 1, "", "FrontendMethodTestFlags"], [44, 3, 1, "", "FunctionTestFlags"], [44, 3, 1, "", "InitMethodTestFlags"], [44, 3, 1, "", "MethodTestFlags"], [44, 3, 1, "", "TestFlags"], [44, 1, 1, "", "as_cont"], [44, 1, 1, "", "build_flag"], [44, 1, 1, "", "frontend_function_flags"], [44, 1, 1, "", "frontend_method_flags"], [44, 1, 1, "", "function_flags"], [44, 1, 1, "", "init_method_flags"], [44, 1, 1, "", "method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags": [[44, 4, 1, "", "__init__"], [44, 4, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.TestFlags": [[44, 4, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[45, 1, 1, "", "handle_frontend_method"], [45, 1, 1, "", "handle_frontend_test"], [45, 1, 1, "", "handle_method"], [45, 1, 1, "", "handle_test"], [45, 1, 1, "", "num_positional_args"], [45, 1, 1, "", "num_positional_args_method"], [45, 1, 1, "", "seed"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:property", "6": "py:exception", "7": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "attribute", "Python attribute"]}, "titleterms": {"ivi": [0, 1, 12, 54, 60, 63, 65, 68, 71, 74, 76, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 108], "data_class": [0, 1], "arrai": [0, 37, 57, 67, 68, 71, 78, 90, 99], "contain": [1, 65, 70, 91], "state": [2, 92, 96], "activ": [3, 13], "convert": [4, 93], "helper": [5, 42, 45, 46, 83, 84, 85], "initi": [6, 92], "layer": [7, 23], "modul": [8, 72, 73, 92], "norm": [9, 29], "optim": [10, 92], "sequenti": 11, "constant": 14, "control": [15, 96], "flow": [15, 96], "op": 15, "creation": 16, "note": 16, "data": [17, 32, 72, 82, 84, 91, 96], "type": [17, 72, 79, 82, 96], "devic": [18, 73, 78, 82], "elementwis": 19, "experiment": [20, 63, 65], "gener": [21, 84, 86], "paramet": [21, 44], "gradient": 22, "linear": 24, "algebra": 24, "loss": 25, "manipul": 26, "meta": 27, "nest": [28, 37], "random": 30, "search": 31, "set": [32, 54, 64, 69], "depend": 32, "output": 32, "shape": [32, 96], "sort": 33, "statist": 34, "util": [35, 47], "nested_arrai": 36, "assert": [38, 48, 76], "avail": 39, "framework": [39, 54, 89, 102, 105, 108, 109], "function": [40, 63, 70, 72, 73, 76, 78, 79, 80, 82, 83, 84, 85, 88, 93, 96], "test": [40, 44, 45, 64, 65, 67, 71, 83, 84], "global": 41, "hypothesi": [42, 64, 83, 84], "struct": 43, "flag": 44, "backend": [49, 69, 72, 85, 88, 96], "dynam": [50, 96], "import": 50, "except": [51, 76], "inspect": 52, "verbos": 53, "content": 54, "transpil": [54, 93], "when": [54, 86], "should": 54, "i": [54, 86], "us": [54, 61, 64, 67, 83, 91], "up": [54, 64], "instal": 54, "pip": 54, "docker": [54, 61, 64, 65], "from": 54, "sourc": 54, "document": [54, 61], "exampl": [54, 60, 74, 78, 83, 86], "contribut": [54, 59], "commun": 54, "citat": 54, "background": 55, "ml": [56, 104, 108], "explos": 56, "standard": [57, 86, 99, 108], "skeptic": 57, "complimentari": 57, "v": [57, 96], "competit": 57, "do": [57, 84], "work": [57, 61, 98], "The": [57, 65, 82, 90, 96], "api": [57, 63, 65, 67, 70, 71, 85, 88, 90, 92, 93, 99, 106, 108], "why": [58, 84], "unifi": [58, 90, 104, 108], "No": [58, 64], "more": [58, 64, 86], "re": [58, 84], "implement": [58, 71], "infinit": 58, "shelf": 58, "life": 58, "appli": [60, 95], "librari": [60, 95], "introduct": [60, 82, 83], "robot": [60, 95], "build": [61, 88], "doc": 61, "dockerless": 61, "miniconda": [61, 64], "venv": [61, 64], "pipelin": [61, 71, 84, 96], "make_doc": 61, "sh": 61, "entrypoint": 61, "_make_doc": 61, "generate_src_rst_fil": 61, "py": 61, "sphinx": 61, "correct_built_html_fil": 61, "remove_fil": 61, "help": [62, 65], "resourc": 62, "open": 63, "task": 63, "format": [63, 77, 101, 108], "checklist": 63, "frontend": [63, 69, 82, 83, 93], "where": 63, "place": 63, "fork": [64, 65], "clone": [64, 71], "repo": 64, "pycharm": [64, 65], "virtual": 64, "environ": 64, "interpret": 64, "window": 64, "maco": 64, "ubuntu": 64, "detail": 64, "log": 64, "free": 64, "github": 64, "codespac": 64, "pre": [64, 77], "commit": [64, 65, 71, 77], "basic": [65, 82], "get": 65, "todo": 65, "list": 65, "issu": 65, "manag": 65, "your": [65, 84], "who": 65, "To": 65, "ask": 65, "With": 65, "command": 65, "line": 65, "browser": 65, "pull": [65, 71], "request": [65, 71], "small": 65, "often": 65, "interact": 65, "run": [65, 67, 84], "local": 65, "most": 65, "out": [65, 78, 81], "id": [65, 67], "deep": 66, "dive": 66, "termin": 67, "regener": 67, "failur": 67, "skip": 67, "nativ": 68, "handl": [68, 76, 96], "integr": [68, 71, 84], "custom": [68, 91, 96], "class": [68, 76, 82, 90], "version": [69, 85, 96], "support": [69, 72, 82, 96], "instanc": [70, 82, 83, 90], "method": [70, 82, 83, 90, 91], "static": 70, "special": [70, 82], "nestabl": [70, 78, 79], "continu": 71, "push": 71, "pr": 71, "trigger": 71, "A": [71, 86], "top": 71, "down": 71, "view": 71, "store": 71, "retriev": 71, "map": 71, "repositori": 71, "nitti": 71, "gritti": 71, "storag": 71, "space": 71, "unifyai": 71, "determin": 71, "coverag": 71, "workflow": 71, "multipl": 71, "runner": 71, "race": 71, "condit": 71, "period": 71, "manual": 71, "dispatch": 71, "ci": 71, "dashboard": 71, "promot": [72, 82], "argument": [72, 73, 78, 81, 82], "other": [72, 73], "unsupport": 72, "bug": 72, "superset": [72, 86], "docstr": [74, 75], "tan": [74, 83], "roll": 74, "add": [74, 83, 108], "configur": [76, 91], "mode": 76, "stack": 76, "trace": 76, "func_wrapp": 76, "prune": 76, "handle_except": 76, "decor": [76, 84], "lint": 77, "check": [77, 96], "hook": 77, "posit": 78, "keyword": 78, "input": 78, "dtype": 78, "number": 78, "oper": [78, 90, 96], "integ": 78, "sequenc": 78, "primari": 79, "composit": [79, 82], "mix": 79, "standalon": 79, "conveni": 79, "wrap": 80, "inplac": 81, "updat": 81, "copi": 81, "unus": 82, "miss": 82, "temporari": 82, "rule": 82, "numpi": [82, 102], "cast": 82, "duplic": [82, 86], "polici": 82, "full": 83, "without": 83, "valu": 83, "alia": 83, "write": 84, "own": 84, "strategi": 84, "we": 84, "need": 84, "how": 84, "effect": 84, "bonu": 84, "extend": [84, 86], "featur": 84, "self": 84, "consist": 84, "explicit": 84, "test_array_funct": 84, "fail": 84, "navig": 85, "code": 85, "categor": 85, "submodul": 85, "design": [85, 87], "pin": 85, "behaviour": 86, "what": [86, 108], "non": 86, "too": 86, "much": 86, "balanc": 86, "effici": 86, "block": 88, "handler": 88, "graph": [88, 93, 103, 108], "compil": [88, 93, 100, 105, 107, 108], "monkei": 90, "patch": 90, "construct": 91, "represent": 91, "recurs": 91, "built": 91, "ins": 91, "access": 91, "save": 91, "load": 91, "comparison": 91, "case": 91, "compartment": 91, "network": [91, 93], "weight": 91, "role": 93, "model": [93, 96], "extens": 94, "mechan": 95, "vision": 95, "gym": 95, "memori": 95, "faq": 96, "maintain": 96, "size": 96, "gpu": 96, "deploy": 96, "auto": 96, "differenti": 96, "replica": 96, "parallel": 96, "altern": 96, "structur": 96, "glossari": 97, "relat": 98, "infrastructur": [100, 108], "llvm": 100, "mlir": 100, "oneapi": 100, "exchang": [101, 108], "onnx": 101, "nnef": 101, "coreml": 101, "matlab": 102, "scipi": 102, "torch": [102, 103], "scikit": 102, "learn": 102, "theano": 102, "panda": 102, "julia": 102, "apach": [102, 105], "spark": 102, "mllib": 102, "caff": 102, "chainer": 102, "tensorflow": 102, "1": 102, "mxnet": 102, "cntk": 102, "pytorch": 102, "flux": 102, "jax": 102, "2": 102, "dex": 102, "languag": 102, "tracer": [103, 108], "tf": 103, "jaxpr": 103, "jit": 103, "fx": 103, "compani": [104, 108], "quansight": 104, "modular": 104, "octoml": 104, "multi": [105, 108], "vendor": [105, 106, 107, 108], "tvm": 105, "xla": 105, "gcc": 105, "specif": [106, 107, 108], "tensorrt": 106, "cuda": 106, "icc": 107, "icx": 107, "nvcc": 107, "doe": 108, "wrapper": [108, 109], "eagerpi": 109, "kera": 109, "thinc": 109, "tensorli": 109, "neuropod": 109}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ivy.data_classes.array": [[0, "module-array"]], "ivy.data_classes.container": [[1, "ivy-data-classes-container"]], "stateful": [[2, "stateful"]], "Activations": [[3, "module-ivy.stateful.activations"], [13, "module-ivy.functional.ivy.activations"]], "Converters": [[4, "module-ivy.stateful.converters"]], "Helpers": [[5, "module-ivy.stateful.helpers"]], "Initializers": [[6, "module-ivy.stateful.initializers"], [92, "initializers"]], "Layers": [[7, "module-ivy.stateful.layers"], [23, "module-ivy.functional.ivy.layers"]], "Module": [[8, "module-ivy.stateful.module"]], "Norms": [[9, "module-ivy.stateful.norms"], [29, "module-ivy.functional.ivy.norms"]], "Optimizers": [[10, "module-ivy.stateful.optimizers"], [92, "optimizers"]], "Sequential": [[11, "module-ivy.stateful.sequential"]], "ivy": [[12, "ivy"]], "Constants": [[14, "module-ivy.functional.ivy.constants"]], "Control flow ops": [[15, "module-ivy.functional.ivy.control_flow_ops"]], "Creation": [[16, "module-ivy.functional.ivy.creation"]], "Note": [[16, null]], "Data type": [[17, "module-ivy.functional.ivy.data_type"]], "Device": [[18, "module-ivy.functional.ivy.device"]], "Elementwise": [[19, "module-ivy.functional.ivy.elementwise"]], "Experimental": [[20, "module-ivy.functional.ivy.experimental"]], "General": [[21, "module-ivy.functional.ivy.general"]], "Parameter": [[21, "parameter"], [21, "id1"], [21, "id2"], [21, "id3"], [21, "id4"]], "Gradients": [[22, "module-ivy.functional.ivy.gradients"]], "Linear algebra": [[24, "module-ivy.functional.ivy.linear_algebra"]], "Losses": [[25, "module-ivy.functional.ivy.losses"]], "Manipulation": [[26, "module-ivy.functional.ivy.manipulation"]], "Meta": [[27, "module-ivy.functional.ivy.meta"]], "Nest": [[28, "module-ivy.functional.ivy.nest"]], "Random": [[30, "module-ivy.functional.ivy.random"]], "Searching": [[31, "module-ivy.functional.ivy.searching"]], "Set": [[32, "module-ivy.functional.ivy.set"]], "Data-dependent output shape": [[32, null], [32, null], [32, null], [32, null]], "Sorting": [[33, "module-ivy.functional.ivy.sorting"]], "Statistical": [[34, "module-ivy.functional.ivy.statistical"]], "Utility": [[35, "module-ivy.functional.ivy.utility"]], "nested_array": [[36, "nested-array"]], "Nested array": [[37, "module-ivy.nested_array.nested_array"]], "Assertions": [[38, "module-ivy_tests.test_ivy.helpers.assertions"], [48, "module-ivy.utils.assertions"]], "Available frameworks": [[39, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "Function testing": [[40, "module-ivy_tests.test_ivy.helpers.function_testing"]], "Globals": [[41, "module-ivy_tests.test_ivy.helpers.globals"]], "Hypothesis helpers": [[42, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "Structs": [[43, "module-ivy_tests.test_ivy.helpers.structs"]], "Test parameter flags": [[44, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "Testing helpers": [[45, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "helpers": [[46, "helpers"]], "utils": [[47, "utils"]], "Backend": [[49, "module-ivy.utils.backend"]], "Dynamic import": [[50, "module-ivy.utils.dynamic_import"]], "Exceptions": [[51, "module-ivy.utils.exceptions"]], "Inspection": [[52, "module-ivy.utils.inspection"]], "Verbosity": [[53, "module-ivy.utils.verbosity"]], "Contents": [[54, "contents"]], "Ivy as a transpiler": [[54, "ivy-as-a-transpiler"]], "When should I use Ivy as a transpiler?": [[54, "when-should-i-use-ivy-as-a-transpiler"]], "Ivy as a framework": [[54, "ivy-as-a-framework"]], "When should I use Ivy as a framework?": [[54, "when-should-i-use-ivy-as-a-framework"]], "Setting up Ivy": [[54, "setting-up-ivy"]], "Installing using pip": [[54, "installing-using-pip"]], "Docker": [[54, "docker"]], "Installing from source": [[54, "installing-from-source"]], "Using Ivy": [[54, "using-ivy"]], "Documentation": [[54, "documentation"]], "Examples": [[54, "examples"], [78, "examples"]], "Contributing": [[54, "contributing"], [59, "contributing"]], "Community": [[54, "community"]], "Citation": [[54, "citation"]], "Background": [[55, "background"]], "ML Explosion": [[56, "ml-explosion"]], "Standardization": [[57, "standardization"]], "Skepticism": [[57, "skepticism"]], "Complimentary vs Competitive": [[57, "complimentary-vs-competitive"]], "Do Standards Work?": [[57, "do-standards-work"]], "The Array API Standard": [[57, "the-array-api-standard"]], "Why Unify?": [[58, "why-unify"]], "No More Re-implementations \ud83d\udea7": [[58, "no-more-re-implementations"]], "\u201cInfinite\u201d Shelf-Life \u2705": [[58, "infinite-shelf-life"]], "Applied Libraries": [[60, "applied-libraries"], [95, "applied-libraries"]], "Introduction": [[60, "introduction"], [82, "introduction"], [83, "introduction"]], "Example - Ivy Robot": [[60, "example-ivy-robot"]], "Building the Docs": [[61, "building-the-docs"]], "Building the Docs with Docker": [[61, "building-the-docs-with-docker"]], "Dockerless Doc-building": [[61, "dockerless-doc-building"]], "Using miniconda": [[61, "using-miniconda"], [64, "using-miniconda"]], "Using venv": [[61, "using-venv"], [64, "using-venv"]], "Building the docs": [[61, "id1"]], "Working of the Documentation Building Pipeline": [[61, "working-of-the-documentation-building-pipeline"]], "make_docs.sh:": [[61, "make-docs-sh"]], "entrypoint.sh:": [[61, "entrypoint-sh"]], "_make_docs.sh:": [[61, "id2"]], "generate_src_rst_files.py:": [[61, "generate-src-rst-files-py"]], "sphinx-build.py": [[61, "sphinx-build-py"]], "correct_built_html_files.py": [[61, "correct-built-html-files-py"]], "remove_files.sh": [[61, "remove-files-sh"]], "Helpful Resources": [[62, "helpful-resources"]], "Open Tasks": [[63, "open-tasks"]], "Function Formatting": [[63, "function-formatting"]], "Formatting checklist": [[63, "formatting-checklist"]], "Frontend APIs": [[63, "frontend-apis"]], "Where to place a frontend function": [[63, "where-to-place-a-frontend-function"]], "Ivy Experimental API": [[63, "ivy-experimental-api"], [65, "ivy-experimental-api"]], "Setting Up": [[64, "setting-up"]], "Forking and cloning the repo": [[64, "forking-and-cloning-the-repo"]], "PyCharm": [[64, "pycharm"]], "Virtual environments - No Docker": [[64, "virtual-environments-no-docker"]], "Docker Interpreter with PyCharm": [[64, "docker-interpreter-with-pycharm"]], "Windows": [[64, "windows"], [64, "id6"]], "MacOS": [[64, "macos"]], "Ubuntu": [[64, "ubuntu"], [64, "id8"]], "Setting Up Testing": [[64, "setting-up-testing"]], "More Detailed Hypothesis Logs": [[64, "more-detailed-hypothesis-logs"]], "Setting up for Free": [[64, "setting-up-for-free"]], "GitHub Codespaces": [[64, "github-codespaces"]], "Pre-Commit": [[64, "pre-commit"]], "The Basics": [[65, "the-basics"]], "Getting Help": [[65, "getting-help"]], "ToDo List Issues": [[65, "todo-list-issues"]], "Managing Your Fork": [[65, "managing-your-fork"]], "Who To Ask": [[65, "who-to-ask"]], "With Command Line:": [[65, "with-command-line"]], "With Browser:": [[65, "with-browser"]], "Pull Requests": [[65, "pull-requests"]], "Small Commits Often": [[65, "small-commits-often"]], "Interactive Ivy Docker Container": [[65, "interactive-ivy-docker-container"]], "Running Tests Locally": [[65, "running-tests-locally"]], "With Docker": [[65, "with-docker"]], "Getting the most out of IDE": [[65, "getting-the-most-out-of-ide"]], "with PyCharm": [[65, "with-pycharm"]], "Deep Dive": [[66, "deep-dive"]], "Array API Tests": [[67, "array-api-tests"], [71, "array-api-tests"]], "Running the Tests": [[67, "running-the-tests"]], "Using Terminal": [[67, "using-terminal"]], "Using the IDE": [[67, "using-the-ide"]], "Regenerating Test Failures": [[67, "regenerating-test-failures"]], "Test Skipping": [[67, "test-skipping"]], "Arrays": [[68, "arrays"]], "Native Array": [[68, "native-array"]], "Ivy Array": [[68, "ivy-array"], [90, "ivy-array"]], "Array Handling": [[68, "array-handling"]], "Integrating custom classes with Ivy": [[68, "integrating-custom-classes-with-ivy"]], "Backend Setting": [[69, "backend-setting"]], "Backend and Frontend Version Support": [[69, "backend-and-frontend-version-support"]], "Containers": [[70, "containers"]], "Container Instance Methods": [[70, "container-instance-methods"]], "Container Static Methods": [[70, "container-static-methods"]], "API Static Methods": [[70, "api-static-methods"]], "API Instance Methods": [[70, "api-instance-methods"]], "API Special Methods": [[70, "api-special-methods"]], "Nestable Functions": [[70, "nestable-functions"], [78, "nestable-functions"], [79, "nestable-functions"]], "Continuous Integration": [[71, "continuous-integration"]], "Commit (Push/PR) Triggered Testing": [[71, "commit-push-pr-triggered-testing"]], "Ivy Tests": [[71, "ivy-tests"], [84, "ivy-tests"]], "Implementation": [[71, "implementation"]], "A Top-Down View": [[71, "a-top-down-view"]], "Storing (and retrieving) the Mapping": [[71, "storing-and-retrieving-the-mapping"]], "Cloning and Pushing to the Repository": [[71, "cloning-and-pushing-to-the-repository"]], "Implementational Nitty Gritties": [[71, "implementational-nitty-gritties"]], "Storage Space (unifyai/Mapping)": [[71, "storage-space-unifyai-mapping"]], "Determine Test Coverage Workflow": [[71, "determine-test-coverage-workflow"]], "Multiple Runners": [[71, "multiple-runners"]], "Race Condition": [[71, "race-condition"]], "Periodic Testing": [[71, "periodic-testing"]], "Manually Dispatched Workflows": [[71, "manually-dispatched-workflows"]], "CI Pipeline \u27a1\ufe0f": [[71, "ci-pipeline"]], "Push": [[71, "push"]], "Pull Request": [[71, "pull-request"]], "Dashboard": [[71, "dashboard"]], "Data Types": [[72, "data-types"]], "Data Type Module": [[72, "data-type-module"]], "Data Type Promotion": [[72, "data-type-promotion"]], "Arguments in other Functions": [[72, "arguments-in-other-functions"], [73, "arguments-in-other-functions"]], "Supported and Unsupported Data Types": [[72, "supported-and-unsupported-data-types"]], "Backend Data Type Bugs": [[72, "backend-data-type-bugs"]], "Superset Data Type Support": [[72, "superset-data-type-support"]], "Devices": [[73, "devices"]], "Device Module": [[73, "device-module"]], "Docstring Examples": [[74, "docstring-examples"]], "ivy.tan": [[74, "ivy-tan"]], "ivy.roll": [[74, "ivy-roll"]], "ivy.add": [[74, "ivy-add"]], "Docstrings": [[75, "docstrings"]], "Exception Handling": [[76, "exception-handling"]], "Ivy Exception Class": [[76, "ivy-exception-class"]], "Configurable Mode for Stack Trace": [[76, "configurable-mode-for-stack-trace"]], "Ivy func_wrapper Pruning": [[76, "ivy-func-wrapper-pruning"]], "@handle_exceptions Decorator": [[76, "handle-exceptions-decorator"]], "Assertion Function": [[76, "assertion-function"]], "Formatting": [[77, "formatting"]], "Lint Checks": [[77, "lint-checks"]], "Pre-Commit Hook": [[77, "pre-commit-hook"]], "Function Arguments": [[78, "function-arguments"]], "Positional and Keyword Arguments": [[78, "positional-and-keyword-arguments"]], "Input Arrays": [[78, "input-arrays"]], "out Argument": [[78, "out-argument"]], "dtype and device arguments": [[78, "dtype-and-device-arguments"]], "Numbers in Operator Functions": [[78, "numbers-in-operator-functions"]], "Integer Sequences": [[78, "integer-sequences"]], "Function Types": [[79, "function-types"]], "Primary Functions": [[79, "primary-functions"]], "Compositional Functions": [[79, "compositional-functions"]], "Mixed Functions": [[79, "mixed-functions"]], "Standalone Functions": [[79, "standalone-functions"]], "Convenience Functions": [[79, "convenience-functions"]], "Function Wrapping": [[80, "function-wrapping"]], "Inplace Updates": [[81, "inplace-updates"]], "out argument": [[81, "out-argument"]], "copy argument": [[81, "copy-argument"]], "Ivy Frontends": [[82, "ivy-frontends"]], "The Frontend Basics": [[82, "the-frontend-basics"]], "Unused Arguments": [[82, "unused-arguments"]], "Compositions": [[82, "compositions"]], "Missing Ivy Functions": [[82, "missing-ivy-functions"]], "Temporary Compositions": [[82, "temporary-compositions"]], "Supported Data Types and Devices": [[82, "supported-data-types-and-devices"]], "Classes and Instance Methods": [[82, "id6"]], "Frontend Data Type Promotion Rules": [[82, "frontend-data-type-promotion-rules"]], "NumPy Special Argument - Casting": [[82, "numpy-special-argument-casting"]], "Frontends Duplicate Policy": [[82, "frontends-duplicate-policy"]], "Ivy Frontend Tests": [[83, "ivy-frontend-tests"]], "Frontend Test Examples": [[83, "frontend-test-examples"]], "ivy.tan()": [[83, "ivy-tan"]], "ivy.full()": [[83, "ivy-full"]], "Testing Without Using Tests Values": [[83, "testing-without-using-tests-values"]], "Alias functions": [[83, "alias-functions"]], "Frontend Instance Method Tests": [[83, "frontend-instance-method-tests"]], "Frontend Instance Method Test Examples": [[83, "frontend-instance-method-test-examples"]], "ivy.add()": [[83, "ivy-add"]], "Hypothesis Helpers": [[83, "hypothesis-helpers"]], "Testing Pipeline": [[84, "testing-pipeline"]], "Hypothesis": [[84, "id2"]], "Data Generation": [[84, "id3"]], "Writing your own strategy": [[84, "writing-your-own-strategy"]], "Writing Hypothesis Test": [[84, "writing-hypothesis-test"]], "Ivy Test Decorators": [[84, "ivy-test-decorators"]], "Writing Ivy Tests": [[84, "writing-ivy-tests"]], "Integration of Strategies into Ivy Tests": [[84, "integration-of-strategies-into-ivy-tests"]], "Why do we need helper functions": [[84, "why-do-we-need-helper-functions"]], "How to write Hypothesis Tests effectively": [[84, "how-to-write-hypothesis-tests-effectively"]], "Bonus: Hypothesis\u2019 Extended Features": [[84, "bonus-hypothesis-extended-features"]], "Self-Consistent and Explicit Testing": [[84, "self-consistent-and-explicit-testing"]], "test_array_function": [[84, "id6"]], "Running Ivy Tests": [[84, "running-ivy-tests"]], "Re-Running Failed Ivy Tests": [[84, "re-running-failed-ivy-tests"]], "Navigating the Code": [[85, "navigating-the-code"]], "Categorization": [[85, "categorization"]], "Submodule Design": [[85, "submodule-design"]], "Ivy API": [[85, "ivy-api"]], "Backend API": [[85, "backend-api"]], "Submodule Helper Functions": [[85, "submodule-helper-functions"]], "Version Pinning": [[85, "version-pinning"]], "Superset Behaviour": [[86, "superset-behaviour"]], "Extending the Standard": [[86, "extending-the-standard"]], "What is the Superset?": [[86, "what-is-the-superset"]], "A Non-Duplicate Superset": [[86, "a-non-duplicate-superset"]], "What is not the Superset?": [[86, "what-is-not-the-superset"]], "When the Superset is Too Much": [[86, "when-the-superset-is-too-much"]], "Balancing Generalization with Efficiency": [[86, "balancing-generalization-with-efficiency"]], "More Examples": [[86, "more-examples"]], "Design": [[87, "design"]], "Building Blocks": [[88, "building-blocks"]], "Backend Functional APIs \u2705": [[88, "backend-functional-apis"]], "Ivy Functional API \u2705": [[88, "ivy-functional-api"]], "Backend Handler \u2705": [[88, "backend-handler"]], "Graph Compiler \ud83d\udea7": [[88, "graph-compiler"]], "Ivy as a Framework": [[89, "ivy-as-a-framework"]], "The Array Class": [[90, "the-array-class"]], "Unifying Operators": [[90, "unifying-operators"]], "API Monkey Patching": [[90, "api-monkey-patching"]], "Instance Methods": [[90, "instance-methods"]], "Ivy Container": [[91, "ivy-container"]], "Construction": [[91, "construction"]], "Representation": [[91, "representation"]], "Recursive Methods": [[91, "recursive-methods"]], "Built-ins": [[91, "built-ins"]], "Access": [[91, "access"]], "Saving and Loading": [[91, "saving-and-loading"]], "Comparisons": [[91, "comparisons"]], "Customized Representations": [[91, "customized-representations"]], "Use Cases": [[91, "use-cases"]], "Compartmentalization": [[91, "compartmentalization"]], "Configuration": [[91, "configuration"]], "Data loading": [[91, "data-loading"]], "Network weights": [[91, "network-weights"]], "Ivy Stateful API": [[92, "ivy-stateful-api"]], "Modules": [[92, "modules"]], "Ivy as a Transpiler": [[93, "ivy-as-a-transpiler"]], "Frontend Functional APIs \ud83d\udea7": [[93, "frontend-functional-apis"]], "Role of the Graph Compiler \ud83d\udea7": [[93, "role-of-the-graph-compiler"]], "Converting Network Models \ud83d\udea7": [[93, "converting-network-models"]], "Extensions": [[94, "extensions"]], "Ivy Mechanics": [[95, "ivy-mechanics"]], "Ivy Vision": [[95, "ivy-vision"]], "Ivy Robot": [[95, "ivy-robot"]], "Ivy Gym": [[95, "ivy-gym"]], "Ivy Memory": [[95, "ivy-memory"]], "FAQ": [[96, "faq"]], "Maintaining Backend Versions": [[96, "maintaining-backend-versions"]], "Dynamic Sizes": [[96, "dynamic-sizes"]], "Type and Shape Checking": [[96, "type-and-shape-checking"]], "GPU handling": [[96, "gpu-handling"]], "Model Deployment": [[96, "model-deployment"]], "Dynamic Control Flow": [[96, "dynamic-control-flow"]], "Auto-Differentiation": [[96, "auto-differentiation"]], "Replicas, and Data vs Model Parallelism": [[96, "replicas-and-data-vs-model-parallelism"]], "Support for Functions": [[96, "support-for-functions"]], "Alternative Data Structures": [[96, "alternative-data-structures"]], "Custom Operations": [[96, "custom-operations"]], "The Pipeline": [[96, "the-pipeline"]], "State": [[96, "state"]], "Glossary": [[97, "glossary"]], "Related Work": [[98, "related-work"]], "API Standards": [[99, "api-standards"], [108, "api-standards"]], "Array API Standard": [[99, "id1"]], "Compiler Infrastructure": [[100, "compiler-infrastructure"], [108, "compiler-infrastructure"]], "LLVM": [[100, "id1"]], "MLIR": [[100, "id2"]], "OneAPI": [[100, "id3"]], "Exchange Formats": [[101, "exchange-formats"], [108, "exchange-formats"]], "ONNX onnx": [[101, "onnx-onnx"]], "NNEF nnef": [[101, "nnef-nnef"]], "CoreML coreml": [[101, "coreml-coreml"]], "Frameworks": [[102, "frameworks"], [108, "frameworks"]], "MATLAB matlab": [[102, "matlab-matlab"]], "SciPy scipy": [[102, "scipy-scipy"]], "Torch torch": [[102, "torch-torch"]], "NumPy numpy": [[102, "numpy-numpy"]], "SciKit Learn scikit-learn": [[102, "scikit-learn-scikit-learn"]], "Theano theano": [[102, "theano-theano"]], "Pandas pandas": [[102, "pandas-pandas"]], "Julia julia": [[102, "julia-julia"]], "Apache Spark MLlib apache-spark-mllib": [[102, "apache-spark-mllib-apache-spark-mllib"]], "Caffe caffe": [[102, "caffe-caffe"]], "Chainer chainer": [[102, "chainer-chainer"]], "TensorFlow 1 tensorflow-1": [[102, "tensorflow-1-tensorflow-1"]], "MXNet mxnet": [[102, "mxnet-mxnet"]], "CNTK cntk": [[102, "cntk-cntk"]], "PyTorch pytorch": [[102, "pytorch-pytorch"]], "Flux flux": [[102, "flux-flux"]], "JAX jax": [[102, "jax-jax"]], "TensorFlow 2 tensorflow-2": [[102, "tensorflow-2-tensorflow-2"]], "DEX Language dex-language": [[102, "dex-language-dex-language"]], "Graph Tracers": [[103, "graph-tracers"], [108, "graph-tracers"]], "tf.Graph": [[103, "tf-graph"]], "Jaxpr": [[103, "jaxpr"]], "torch.jit": [[103, "torch-jit"]], "torch.fx": [[103, "torch-fx"]], "ML-Unifying Companies": [[104, "ml-unifying-companies"], [108, "ml-unifying-companies"]], "Quansight": [[104, "id1"]], "Modular": [[104, "id2"]], "OctoML": [[104, "id3"]], "Multi-Vendor Compiler Frameworks": [[105, "multi-vendor-compiler-frameworks"], [108, "multi-vendor-compiler-frameworks"]], "Apache TVM": [[105, "apache-tvm"]], "XLA": [[105, "xla"]], "GCC": [[105, "gcc"]], "Vendor-Specific APIs": [[106, "vendor-specific-apis"], [108, "vendor-specific-apis"]], "TensorRT tensorrt": [[106, "tensorrt-tensorrt"]], "CUDA cuda": [[106, "cuda-cuda"]], "Vendor-Specific Compilers": [[107, "vendor-specific-compilers"], [108, "vendor-specific-compilers"]], "ICC": [[107, "id1"]], "ICX": [[107, "icx"]], "NVCC": [[107, "nvcc"]], "What does Ivy Add?": [[108, "what-does-ivy-add"]], "Wrapper Frameworks": [[108, "wrapper-frameworks"], [109, "wrapper-frameworks"]], "EagerPy eagerpy": [[109, "eagerpy-eagerpy"]], "Keras keras": [[109, "keras-keras"]], "Thinc thinc": [[109, "thinc-thinc"]], "TensorLy tensorly": [[109, "tensorly-tensorly"]], "NeuroPod": [[109, "id1"]]}, "indexentries": {"array": [[0, "module-array"]], "module": [[0, "module-array"], [3, "module-ivy.stateful.activations"], [4, "module-ivy.stateful.converters"], [5, "module-ivy.stateful.helpers"], [6, "module-ivy.stateful.initializers"], [7, "module-ivy.stateful.layers"], [8, "module-ivy.stateful.module"], [9, "module-ivy.stateful.norms"], [10, "module-ivy.stateful.optimizers"], [11, "module-ivy.stateful.sequential"], [13, "module-ivy.functional.ivy.activations"], [14, "module-ivy.functional.ivy.constants"], [15, "module-ivy.functional.ivy.control_flow_ops"], [16, "module-ivy.functional.ivy.creation"], [17, "module-ivy.functional.ivy.data_type"], [18, "module-ivy.functional.ivy.device"], [19, "module-ivy.functional.ivy.elementwise"], [20, "module-ivy.functional.ivy.experimental"], [21, "module-ivy.functional.ivy.general"], [22, "module-ivy.functional.ivy.gradients"], [23, "module-ivy.functional.ivy.layers"], [24, "module-ivy.functional.ivy.linear_algebra"], [25, "module-ivy.functional.ivy.losses"], [26, "module-ivy.functional.ivy.manipulation"], [27, "module-ivy.functional.ivy.meta"], [28, "module-ivy.functional.ivy.nest"], [29, "module-ivy.functional.ivy.norms"], [30, "module-ivy.functional.ivy.random"], [31, "module-ivy.functional.ivy.searching"], [32, "module-ivy.functional.ivy.set"], [33, "module-ivy.functional.ivy.sorting"], [34, "module-ivy.functional.ivy.statistical"], [35, "module-ivy.functional.ivy.utility"], [37, "module-ivy.nested_array.nested_array"], [38, "module-ivy_tests.test_ivy.helpers.assertions"], [39, "module-ivy_tests.test_ivy.helpers.available_frameworks"], [40, "module-ivy_tests.test_ivy.helpers.function_testing"], [41, "module-ivy_tests.test_ivy.helpers.globals"], [42, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"], [43, "module-ivy_tests.test_ivy.helpers.structs"], [44, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"], [45, "module-ivy_tests.test_ivy.helpers.testing_helpers"], [48, "module-ivy.utils.assertions"], [49, "module-ivy.utils.backend"], [50, "module-ivy.utils.dynamic_import"], [51, "module-ivy.utils.exceptions"], [52, "module-ivy.utils.inspection"], [53, "module-ivy.utils.verbosity"]], "geglu (class in ivy.stateful.activations)": [[3, "ivy.stateful.activations.GEGLU"]], "gelu (class in ivy.stateful.activations)": [[3, "ivy.stateful.activations.GELU"]], "__init__() (ivy.stateful.activations.geglu method)": [[3, "ivy.stateful.activations.GEGLU.__init__"]], "__init__() (ivy.stateful.activations.gelu method)": [[3, "ivy.stateful.activations.GELU.__init__"]], "ivy.stateful.activations": [[3, "module-ivy.stateful.activations"]], "moduleconverters (class in ivy.stateful.converters)": [[4, "ivy.stateful.converters.ModuleConverters"]], "from_haiku_module() (ivy.stateful.converters.moduleconverters static method)": [[4, "ivy.stateful.converters.ModuleConverters.from_haiku_module"]], "from_keras_module() (ivy.stateful.converters.moduleconverters static method)": [[4, "ivy.stateful.converters.ModuleConverters.from_keras_module"]], "from_torch_module() (ivy.stateful.converters.moduleconverters static method)": [[4, "ivy.stateful.converters.ModuleConverters.from_torch_module"]], "ivy.stateful.converters": [[4, "module-ivy.stateful.converters"]], "to_ivy_module() (in module ivy.stateful.converters)": [[4, "ivy.stateful.converters.to_ivy_module"]], "modulehelpers (class in ivy.stateful.helpers)": [[5, "ivy.stateful.helpers.ModuleHelpers"]], "check_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"]], "get_mod_key() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"]], "ivy.stateful.helpers": [[5, "module-ivy.stateful.helpers"]], "mod_depth() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.mod_depth"]], "mod_height() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.mod_height"]], "mod_with_top_mod_key_chain() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"]], "show_mod_in_top_mod() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"]], "show_structure() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.show_structure"]], "show_v_in_top_v() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"]], "sub_mods() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.sub_mods"]], "track_submod_call_order() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"]], "track_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"]], "v_with_top_v_key_chains() (ivy.stateful.helpers.modulehelpers method)": [[5, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"]], "constant (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.Constant"]], "firstlayersiren (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.FirstLayerSiren"]], "glorotuniform (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.GlorotUniform"]], "initializer (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.Initializer"]], "kaimingnormal (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.KaimingNormal"]], "ones (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.Ones"]], "siren (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.Siren"]], "uniform (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.Uniform"]], "zeros (class in ivy.stateful.initializers)": [[6, "ivy.stateful.initializers.Zeros"]], "__init__() (ivy.stateful.initializers.constant method)": [[6, "ivy.stateful.initializers.Constant.__init__"]], "__init__() (ivy.stateful.initializers.firstlayersiren method)": [[6, "ivy.stateful.initializers.FirstLayerSiren.__init__"]], "__init__() (ivy.stateful.initializers.glorotuniform method)": [[6, "ivy.stateful.initializers.GlorotUniform.__init__"]], "__init__() (ivy.stateful.initializers.kaimingnormal method)": [[6, "ivy.stateful.initializers.KaimingNormal.__init__"]], "__init__() (ivy.stateful.initializers.ones method)": [[6, "ivy.stateful.initializers.Ones.__init__"]], "__init__() (ivy.stateful.initializers.siren method)": [[6, "ivy.stateful.initializers.Siren.__init__"]], "__init__() (ivy.stateful.initializers.uniform method)": [[6, "ivy.stateful.initializers.Uniform.__init__"]], "__init__() (ivy.stateful.initializers.zeros method)": [[6, "ivy.stateful.initializers.Zeros.__init__"]], "create_variables() (ivy.stateful.initializers.constant method)": [[6, "ivy.stateful.initializers.Constant.create_variables"]], "create_variables() (ivy.stateful.initializers.initializer method)": [[6, "ivy.stateful.initializers.Initializer.create_variables"]], "create_variables() (ivy.stateful.initializers.kaimingnormal method)": [[6, "ivy.stateful.initializers.KaimingNormal.create_variables"]], "create_variables() (ivy.stateful.initializers.uniform method)": [[6, "ivy.stateful.initializers.Uniform.create_variables"]], "ivy.stateful.initializers": [[6, "module-ivy.stateful.initializers"]], "conv1d (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Conv1D"]], "conv1dtranspose (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Conv1DTranspose"]], "conv2d (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Conv2D"]], "conv2dtranspose (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Conv2DTranspose"]], "conv3d (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Conv3D"]], "conv3dtranspose (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Conv3DTranspose"]], "depthwiseconv2d (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.DepthwiseConv2D"]], "dropout (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Dropout"]], "lstm (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.LSTM"]], "linear (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.Linear"]], "multiheadattention (class in ivy.stateful.layers)": [[7, "ivy.stateful.layers.MultiHeadAttention"]], "__init__() (ivy.stateful.layers.conv1d method)": [[7, "ivy.stateful.layers.Conv1D.__init__"]], "__init__() (ivy.stateful.layers.conv1dtranspose method)": [[7, "ivy.stateful.layers.Conv1DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv2d method)": [[7, "ivy.stateful.layers.Conv2D.__init__"]], "__init__() (ivy.stateful.layers.conv2dtranspose method)": [[7, "ivy.stateful.layers.Conv2DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv3d method)": [[7, "ivy.stateful.layers.Conv3D.__init__"]], "__init__() (ivy.stateful.layers.conv3dtranspose method)": [[7, "ivy.stateful.layers.Conv3DTranspose.__init__"]], "__init__() (ivy.stateful.layers.depthwiseconv2d method)": [[7, "ivy.stateful.layers.DepthwiseConv2D.__init__"]], "__init__() (ivy.stateful.layers.dropout method)": [[7, "ivy.stateful.layers.Dropout.__init__"]], "__init__() (ivy.stateful.layers.lstm method)": [[7, "ivy.stateful.layers.LSTM.__init__"]], "__init__() (ivy.stateful.layers.linear method)": [[7, "ivy.stateful.layers.Linear.__init__"]], "__init__() (ivy.stateful.layers.multiheadattention method)": [[7, "ivy.stateful.layers.MultiHeadAttention.__init__"]], "get_initial_state() (ivy.stateful.layers.lstm method)": [[7, "ivy.stateful.layers.LSTM.get_initial_state"]], "ivy.stateful.layers": [[7, "module-ivy.stateful.layers"]], "module (class in ivy.stateful.module)": [[8, "ivy.stateful.module.Module"]], "__call__() (ivy.stateful.module.module method)": [[8, "ivy.stateful.module.Module.__call__"]], "__init__() (ivy.stateful.module.module method)": [[8, "ivy.stateful.module.Module.__init__"]], "build() (ivy.stateful.module.module method)": [[8, "ivy.stateful.module.Module.build"]], "build_mode (ivy.stateful.module.module property)": [[8, "ivy.stateful.module.Module.build_mode"]], "built_ (ivy.stateful.module.module property)": [[8, "ivy.stateful.module.Module.built_"]], "compile() (ivy.stateful.module.module method)": [[8, "ivy.stateful.module.Module.compile"]], "ivy.stateful.module": [[8, "module-ivy.stateful.module"]], "save_weights() (ivy.stateful.module.module method)": [[8, "ivy.stateful.module.Module.save_weights"]], "show_graph() (ivy.stateful.module.module method)": [[8, "ivy.stateful.module.Module.show_graph"]], "layernorm (class in ivy.stateful.norms)": [[9, "ivy.stateful.norms.LayerNorm"]], "__init__() (ivy.stateful.norms.layernorm method)": [[9, "ivy.stateful.norms.LayerNorm.__init__"]], "ivy.stateful.norms": [[9, "module-ivy.stateful.norms"]], "adam (class in ivy.stateful.optimizers)": [[10, "ivy.stateful.optimizers.Adam"]], "lamb (class in ivy.stateful.optimizers)": [[10, "ivy.stateful.optimizers.LAMB"]], "lars (class in ivy.stateful.optimizers)": [[10, "ivy.stateful.optimizers.LARS"]], "optimizer (class in ivy.stateful.optimizers)": [[10, "ivy.stateful.optimizers.Optimizer"]], "sgd (class in ivy.stateful.optimizers)": [[10, "ivy.stateful.optimizers.SGD"]], "__init__() (ivy.stateful.optimizers.adam method)": [[10, "ivy.stateful.optimizers.Adam.__init__"]], "__init__() (ivy.stateful.optimizers.lamb method)": [[10, "ivy.stateful.optimizers.LAMB.__init__"]], "__init__() (ivy.stateful.optimizers.lars method)": [[10, "ivy.stateful.optimizers.LARS.__init__"]], "__init__() (ivy.stateful.optimizers.optimizer method)": [[10, "ivy.stateful.optimizers.Optimizer.__init__"]], "__init__() (ivy.stateful.optimizers.sgd method)": [[10, "ivy.stateful.optimizers.SGD.__init__"]], "ivy.stateful.optimizers": [[10, "module-ivy.stateful.optimizers"]], "set_state() (ivy.stateful.optimizers.adam method)": [[10, "ivy.stateful.optimizers.Adam.set_state"]], "set_state() (ivy.stateful.optimizers.lamb method)": [[10, "ivy.stateful.optimizers.LAMB.set_state"]], "set_state() (ivy.stateful.optimizers.lars method)": [[10, "ivy.stateful.optimizers.LARS.set_state"]], "set_state() (ivy.stateful.optimizers.optimizer method)": [[10, "ivy.stateful.optimizers.Optimizer.set_state"]], "set_state() (ivy.stateful.optimizers.sgd method)": [[10, "ivy.stateful.optimizers.SGD.set_state"]], "state (ivy.stateful.optimizers.adam property)": [[10, "ivy.stateful.optimizers.Adam.state"]], "state (ivy.stateful.optimizers.lamb property)": [[10, "ivy.stateful.optimizers.LAMB.state"]], "state (ivy.stateful.optimizers.lars property)": [[10, "ivy.stateful.optimizers.LARS.state"]], "state (ivy.stateful.optimizers.sgd property)": [[10, "ivy.stateful.optimizers.SGD.state"]], "step() (ivy.stateful.optimizers.optimizer method)": [[10, "ivy.stateful.optimizers.Optimizer.step"]], "sequential (class in ivy.stateful.sequential)": [[11, "ivy.stateful.sequential.Sequential"]], "__init__() (ivy.stateful.sequential.sequential method)": [[11, "ivy.stateful.sequential.Sequential.__init__"]], "ivy.stateful.sequential": [[11, "module-ivy.stateful.sequential"]], "deserialize() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.deserialize"]], "gelu() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.gelu"]], "get() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.get"]], "ivy.functional.ivy.activations": [[13, "module-ivy.functional.ivy.activations"]], "leaky_relu() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.leaky_relu"]], "log_softmax() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.log_softmax"]], "mish() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.mish"]], "relu() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.relu"]], "sigmoid() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.sigmoid"]], "softmax() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.softmax"]], "softplus() (in module ivy.functional.ivy.activations)": [[13, "ivy.functional.ivy.activations.softplus"]], "e (in module ivy.functional.ivy.constants)": [[14, "ivy.functional.ivy.constants.e"]], "inf (in module ivy.functional.ivy.constants)": [[14, "ivy.functional.ivy.constants.inf"]], "ivy.functional.ivy.constants": [[14, "module-ivy.functional.ivy.constants"]], "nan (in module ivy.functional.ivy.constants)": [[14, "ivy.functional.ivy.constants.nan"]], "newaxis (in module ivy.functional.ivy.constants)": [[14, "ivy.functional.ivy.constants.newaxis"]], "pi (in module ivy.functional.ivy.constants)": [[14, "ivy.functional.ivy.constants.pi"]], "ifelse() (in module ivy.functional.ivy.control_flow_ops)": [[15, "ivy.functional.ivy.control_flow_ops.IfElse"]], "whileloop() (in module ivy.functional.ivy.control_flow_ops)": [[15, "ivy.functional.ivy.control_flow_ops.WhileLoop"]], "if_else() (in module ivy.functional.ivy.control_flow_ops)": [[15, "ivy.functional.ivy.control_flow_ops.if_else"]], "ivy.functional.ivy.control_flow_ops": [[15, "module-ivy.functional.ivy.control_flow_ops"]], "while_loop() (in module ivy.functional.ivy.control_flow_ops)": [[15, "ivy.functional.ivy.control_flow_ops.while_loop"]], "nestedsequence (class in ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.NestedSequence"]], "__init__() (ivy.functional.ivy.creation.nestedsequence method)": [[16, "ivy.functional.ivy.creation.NestedSequence.__init__"]], "arange() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.arange"]], "array() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.array"]], "asarray() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.asarray"]], "asarray_handle_nestable() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.asarray_handle_nestable"]], "asarray_infer_device() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"]], "copy_array() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.copy_array"]], "empty() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.empty"]], "empty_like() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.empty_like"]], "eye() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.eye"]], "from_dlpack() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.from_dlpack"]], "full() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.full"]], "full_like() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.full_like"]], "ivy.functional.ivy.creation": [[16, "module-ivy.functional.ivy.creation"]], "linspace() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.linspace"]], "logspace() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.logspace"]], "meshgrid() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.meshgrid"]], "native_array() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.native_array"]], "one_hot() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.one_hot"]], "ones() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.ones"]], "ones_like() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.ones_like"]], "tril() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.tril"]], "triu() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.triu"]], "zeros() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.zeros"]], "zeros_like() (in module ivy.functional.ivy.creation)": [[16, "ivy.functional.ivy.creation.zeros_like"]], "defaultcomplexdtype (class in ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.DefaultComplexDtype"]], "defaultdtype (class in ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.DefaultDtype"]], "defaultfloatdtype (class in ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.DefaultFloatDtype"]], "defaultintdtype (class in ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.DefaultIntDtype"]], "defaultuintdtype (class in ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.DefaultUintDtype"]], "__init__() (ivy.functional.ivy.data_type.defaultcomplexdtype method)": [[17, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultdtype method)": [[17, "ivy.functional.ivy.data_type.DefaultDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultfloatdtype method)": [[17, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultintdtype method)": [[17, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultuintdtype method)": [[17, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"]], "as_ivy_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.as_ivy_dtype"]], "as_native_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.as_native_dtype"]], "astype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.astype"]], "broadcast_arrays() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.broadcast_arrays"]], "broadcast_to() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.broadcast_to"]], "can_cast() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.can_cast"]], "check_float() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.check_float"]], "closest_valid_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.closest_valid_dtype"]], "default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.default_complex_dtype"]], "default_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.default_dtype"]], "default_float_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.default_float_dtype"]], "default_int_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.default_int_dtype"]], "default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.default_uint_dtype"]], "dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.dtype"]], "dtype_bits() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.dtype_bits"]], "finfo() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.finfo"]], "function_supported_dtypes() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.function_supported_dtypes"]], "function_unsupported_dtypes() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.function_unsupported_dtypes"]], "iinfo() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.iinfo"]], "infer_default_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.infer_default_dtype"]], "invalid_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.invalid_dtype"]], "is_bool_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.is_bool_dtype"]], "is_complex_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.is_complex_dtype"]], "is_float_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.is_float_dtype"]], "is_int_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.is_int_dtype"]], "is_uint_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.is_uint_dtype"]], "ivy.functional.ivy.data_type": [[17, "module-ivy.functional.ivy.data_type"]], "promote_types() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.promote_types"]], "promote_types_of_inputs() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.promote_types_of_inputs"]], "result_type() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.result_type"]], "set_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.set_default_complex_dtype"]], "set_default_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.set_default_dtype"]], "set_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.set_default_float_dtype"]], "set_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.set_default_int_dtype"]], "set_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.set_default_uint_dtype"]], "type_promote_arrays() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.type_promote_arrays"]], "unset_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.unset_default_complex_dtype"]], "unset_default_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.unset_default_dtype"]], "unset_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.unset_default_float_dtype"]], "unset_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.unset_default_int_dtype"]], "unset_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.unset_default_uint_dtype"]], "valid_dtype() (in module ivy.functional.ivy.data_type)": [[17, "ivy.functional.ivy.data_type.valid_dtype"]], "defaultdevice (class in ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.DefaultDevice"]], "profiler (class in ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.Profiler"]], "__enter__() (ivy.functional.ivy.device.defaultdevice method)": [[18, "ivy.functional.ivy.device.DefaultDevice.__enter__"]], "__exit__() (ivy.functional.ivy.device.defaultdevice method)": [[18, "ivy.functional.ivy.device.DefaultDevice.__exit__"]], "__init__() (ivy.functional.ivy.device.defaultdevice method)": [[18, "ivy.functional.ivy.device.DefaultDevice.__init__"]], "__init__() (ivy.functional.ivy.device.profiler method)": [[18, "ivy.functional.ivy.device.Profiler.__init__"]], "as_ivy_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.as_ivy_dev"]], "as_native_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.as_native_dev"]], "clear_cached_mem_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.clear_cached_mem_on_dev"]], "default_device() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.default_device"]], "dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.dev"]], "dev_util() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.dev_util"]], "function_supported_devices() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.function_supported_devices"]], "function_unsupported_devices() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.function_unsupported_devices"]], "get_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"]], "gpu_is_available() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.gpu_is_available"]], "ivy.functional.ivy.device": [[18, "module-ivy.functional.ivy.device"]], "num_cpu_cores() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.num_cpu_cores"]], "num_gpus() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.num_gpus"]], "num_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"]], "percent_used_mem_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.percent_used_mem_on_dev"]], "print_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"]], "set_default_device() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.set_default_device"]], "set_split_factor() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.set_split_factor"]], "split_factor() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.split_factor"]], "split_func_call() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.split_func_call"]], "start() (ivy.functional.ivy.device.profiler method)": [[18, "ivy.functional.ivy.device.Profiler.start"]], "stop() (ivy.functional.ivy.device.profiler method)": [[18, "ivy.functional.ivy.device.Profiler.stop"]], "to_device() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.to_device"]], "total_mem_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.total_mem_on_dev"]], "tpu_is_available() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.tpu_is_available"]], "unset_default_device() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.unset_default_device"]], "used_mem_on_dev() (in module ivy.functional.ivy.device)": [[18, "ivy.functional.ivy.device.used_mem_on_dev"]], "abs() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.abs"]], "acos() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.acos"]], "acosh() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.acosh"]], "add() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.add"]], "asin() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.asin"]], "asinh() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.asinh"]], "atan() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.atan"]], "atan2() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.atan2"]], "atanh() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.atanh"]], "bitwise_and() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.bitwise_and"]], "bitwise_invert() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.bitwise_invert"]], "bitwise_left_shift() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.bitwise_left_shift"]], "bitwise_or() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.bitwise_or"]], "bitwise_right_shift() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.bitwise_right_shift"]], "bitwise_xor() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.bitwise_xor"]], "ceil() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.ceil"]], "cos() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.cos"]], "cosh() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.cosh"]], "deg2rad() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.deg2rad"]], "divide() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.divide"]], "equal() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.equal"]], "erf() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.erf"]], "exp() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.exp"]], "expm1() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.expm1"]], "floor() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.floor"]], "floor_divide() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.floor_divide"]], "greater() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.greater"]], "greater_equal() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.greater_equal"]], "isfinite() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.isfinite"]], "isinf() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.isinf"]], "isnan() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.isnan"]], "isreal() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.isreal"]], "ivy.functional.ivy.elementwise": [[19, "module-ivy.functional.ivy.elementwise"]], "less() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.less"]], "less_equal() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.less_equal"]], "log() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.log"]], "log10() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.log10"]], "log1p() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.log1p"]], "log2() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.log2"]], "logaddexp() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.logaddexp"]], "logical_and() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.logical_and"]], "logical_not() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.logical_not"]], "logical_or() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.logical_or"]], "logical_xor() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.logical_xor"]], "maximum() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.maximum"]], "minimum() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.minimum"]], "multiply() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.multiply"]], "negative() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.negative"]], "not_equal() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.not_equal"]], "positive() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.positive"]], "pow() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.pow"]], "rad2deg() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.rad2deg"]], "reciprocal() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.reciprocal"]], "remainder() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.remainder"]], "round() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.round"]], "sign() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.sign"]], "sin() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.sin"]], "sinh() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.sinh"]], "sqrt() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.sqrt"]], "square() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.square"]], "subtract() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.subtract"]], "tan() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.tan"]], "tanh() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.tanh"]], "trunc() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.trunc"]], "trunc_divide() (in module ivy.functional.ivy.elementwise)": [[19, "ivy.functional.ivy.elementwise.trunc_divide"]], "nativesparsearray (class in ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.NativeSparseArray"]], "number (class in ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.Number"]], "sparsearray (class in ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparsearray method)": [[20, "ivy.functional.ivy.experimental.SparseArray.__init__"]], "adaptive_avg_pool1d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.adaptive_avg_pool2d"]], "adjoint() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.adjoint"]], "allclose() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.allclose"]], "angle() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.angle"]], "atleast_1d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.atleast_1d"]], "atleast_2d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.atleast_2d"]], "atleast_3d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.atleast_3d"]], "avg_pool1d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.avg_pool1d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.avg_pool2d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.avg_pool3d"]], "batch_norm() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.batch_norm"]], "bernoulli() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.bernoulli"]], "beta() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.beta"]], "binarizer() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.binarizer"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"]], "bincount() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.bincount"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.bind_custom_gradient_function"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.broadcast_shapes"]], "ccol_indices (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.ccol_indices"]], "celu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.celu"]], "col_indices (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.col_indices"]], "compute_weight_mat() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.compute_weight_mat"]], "cond() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.cond"]], "conj() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.conj"]], "coo_indices (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.coo_indices"]], "copysign() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.copysign"]], "corrcoef() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.corrcoef"]], "cos() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.cos"]], "count_nonzero() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.count_nonzero"]], "crow_indices (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.crow_indices"]], "current_backend() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.current_backend"]], "data (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.data"]], "dct() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dct"]], "dense_shape (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.dense_shape"]], "dft() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dft"]], "diagflat() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.diagflat"]], "diff() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.diff"]], "dirichlet() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dirichlet"]], "dropout1d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dropout1d"]], "dropout3d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dropout3d"]], "dsplit() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dsplit"]], "dstack() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.dstack"]], "eig() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.eig"]], "eigh_tridiagonal() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.eigh_tridiagonal"]], "eigvals() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.eigvals"]], "elu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.elu"]], "embedding() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.embedding"]], "exp2() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.exp2"]], "expand() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.expand"]], "eye_like() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.eye_like"]], "fft() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.fft"]], "fix() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.fix"]], "flatten() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.flatten"]], "fliplr() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.fliplr"]], "flipud() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.flipud"]], "float_power() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.float_power"]], "fmax() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.fmax"]], "fmin() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.fmin"]], "fmod() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.fmod"]], "frexp() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.frexp"]], "gamma() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.gamma"]], "gcd() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.gcd"]], "glu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.glu"]], "gradient() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.gradient"]], "group_norm() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.group_norm"]], "hamming_window() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hamming_window"]], "handle_array_function() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.handle_array_function"]], "handle_array_like_without_promotion() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.handle_array_like_without_promotion"]], "handle_exceptions() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.handle_exceptions"]], "handle_nestable() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.handle_nestable"]], "handle_out_argument() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.handle_out_argument"]], "handle_view() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.handle_view"]], "hann_window() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hann_window"]], "hard_sigmoid() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hard_sigmoid"]], "hard_silu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hard_silu"]], "hard_tanh() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hard_tanh"]], "hardshrink() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hardshrink"]], "heaviside() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.heaviside"]], "hsplit() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hsplit"]], "hstack() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hstack"]], "hypot() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.hypot"]], "i0() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.i0"]], "ifft() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.ifft"]], "imag() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.imag"]], "infer_device() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.infer_device"]], "infer_dtype() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.infer_dtype"]], "inputs_to_native_arrays() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.inputs_to_native_arrays"]], "instance_norm() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.instance_norm"]], "integer_arrays_to_float() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.integer_arrays_to_float"]], "interp() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.interp"]], "interpolate() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.interpolate"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.is_ivy_sparse_array"]], "is_native_dtype() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.is_native_dtype"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.is_native_sparse_array"]], "isclose() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.isclose"]], "isin() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.isin"]], "ivy.functional.ivy.experimental": [[20, "module-ivy.functional.ivy.experimental"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.kaiser_window"]], "kron() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.kron"]], "l2_normalize() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.l2_normalize"]], "lcm() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.lcm"]], "ldexp() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.ldexp"]], "lexsort() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.lexsort"]], "log_sigmoid() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.log_sigmoid"]], "logaddexp2() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.logaddexp2"]], "logit() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.logit"]], "logsigmoid() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.logsigmoid"]], "lp_normalize() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.lp_normalize"]], "matrix_exp() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.matrix_exp"]], "max_pool1d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.max_pool1d"]], "max_pool2d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.max_pool2d"]], "max_pool3d() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.max_pool3d"]], "median() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.median"]], "moveaxis() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.moveaxis"]], "msort() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.msort"]], "multi_dot() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.multi_dot"]], "nan_to_num() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.nan_to_num"]], "nanmean() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.nanmean"]], "nanmedian() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.nanmedian"]], "nansum() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.nansum"]], "native_sparse_array() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.native_sparse_array_to_indices_values_and_shape"]], "ndenumerate() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.ndindex"]], "nextafter() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.nextafter"]], "outputs_to_ivy_arrays() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.outputs_to_ivy_arrays"]], "pad() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.pad"]], "parametric_relu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.parametric_relu"]], "poisson() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.poisson"]], "quantile() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.quantile"]], "real() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.real"]], "relu6() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.relu6"]], "rot90() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.rot90"]], "row_indices (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.row_indices"]], "selu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.selu"]], "sigmoid() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.sigmoid"]], "signbit() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.signbit"]], "silu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.silu"]], "sinc() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.sinc"]], "softshrink() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.softshrink"]], "softsign() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.softsign"]], "sqrt() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.sqrt"]], "take_along_axis() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.take_along_axis"]], "threshold() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.threshold"]], "thresholded_relu() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.thresholded_relu"]], "to_dense_array() (ivy.functional.ivy.experimental.sparsearray method)": [[20, "ivy.functional.ivy.experimental.SparseArray.to_dense_array"]], "to_native_arrays_and_back() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.to_native_arrays_and_back"]], "top_k() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.top_k"]], "trapz() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.trapz"]], "tril_indices() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.tril_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.triu_indices"]], "unravel_index() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.unravel_index"]], "values (ivy.functional.ivy.experimental.sparsearray property)": [[20, "ivy.functional.ivy.experimental.SparseArray.values"]], "vorbis_window() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.vorbis_window"]], "vsplit() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.vsplit"]], "vstack() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.vstack"]], "xlogy() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.xlogy"]], "zeta() (in module ivy.functional.ivy.experimental)": [[20, "ivy.functional.ivy.experimental.zeta"]], "arraymode (class in ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.ArrayMode"]], "__init__() (ivy.functional.ivy.general.arraymode method)": [[21, "ivy.functional.ivy.general.ArrayMode.__init__"]], "all_equal() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.all_equal"]], "arg_info() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.arg_info"]], "arg_names() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.arg_names"]], "array_equal() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.array_equal"]], "assert_supports_inplace() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.assert_supports_inplace"]], "cache_fn() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.cache_fn"]], "clip_matrix_norm() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.clip_matrix_norm"]], "clip_vector_norm() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.clip_vector_norm"]], "container_types() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.container_types"]], "current_backend_str() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.current_backend_str"]], "default() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.default"]], "einops_rearrange() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.einops_rearrange"]], "einops_reduce() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.einops_reduce"]], "einops_repeat() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.einops_repeat"]], "exists() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.exists"]], "fourier_encode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.fourier_encode"]], "function_supported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"]], "function_unsupported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"]], "gather() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.gather"]], "gather_nd() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.gather_nd"]], "get_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_all_arrays_in_memory"]], "get_array_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_array_mode"]], "get_exception_trace_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_exception_trace_mode"]], "get_item() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_item"]], "get_min_base() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_min_base"]], "get_min_denominator() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_min_denominator"]], "get_nestable_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_nestable_mode"]], "get_num_dims() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_num_dims"]], "get_queue_timeout() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_queue_timeout"]], "get_referrers_recursive() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.get_tmp_dir"]], "has_nans() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.has_nans"]], "inplace_arrays_supported() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.inplace_arrays_supported"]], "inplace_decrement() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.inplace_decrement"]], "inplace_increment() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.inplace_increment"]], "inplace_update() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.inplace_update"]], "inplace_variables_supported() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.inplace_variables_supported"]], "is_array() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.is_array"]], "is_ivy_array() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.is_ivy_array"]], "is_ivy_container() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.is_ivy_container"]], "is_native_array() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.is_native_array"]], "isscalar() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.isscalar"]], "ivy.functional.ivy.general": [[21, "module-ivy.functional.ivy.general"]], "match_kwargs() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.match_kwargs"]], "multiprocessing() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.multiprocessing"]], "num_arrays_in_memory() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.num_arrays_in_memory"]], "print_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.print_all_arrays_in_memory"]], "scatter_flat() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.scatter_flat"]], "scatter_nd() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.scatter_nd"]], "set_array_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_array_mode"]], "set_exception_trace_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_exception_trace_mode"]], "set_min_base() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_min_base"]], "set_min_denominator() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_min_denominator"]], "set_nestable_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_nestable_mode"]], "set_queue_timeout() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_queue_timeout"]], "set_shape_array_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"]], "set_tmp_dir() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.set_tmp_dir"]], "shape() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.shape"]], "shape_array_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.shape_array_mode"]], "stable_divide() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.stable_divide"]], "stable_pow() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.stable_pow"]], "supports_inplace_updates() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.supports_inplace_updates"]], "to_ivy_shape() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.to_ivy_shape"]], "to_list() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.to_list"]], "to_native_shape() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.to_native_shape"]], "to_numpy() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.to_numpy"]], "to_scalar() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.to_scalar"]], "try_else_none() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.try_else_none"]], "unset_array_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.unset_array_mode"]], "unset_exception_trace_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.unset_exception_trace_mode"]], "unset_nestable_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.unset_nestable_mode"]], "unset_queue_timeout() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.unset_queue_timeout"]], "unset_shape_array_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"]], "value_is_nan() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.value_is_nan"]], "vmap() (in module ivy.functional.ivy.general)": [[21, "ivy.functional.ivy.general.vmap"]], "gradienttracking (class in ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.GradientTracking"]], "__init__() (ivy.functional.ivy.gradients.gradienttracking method)": [[22, "ivy.functional.ivy.gradients.GradientTracking.__init__"]], "adam_step() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.adam_step"]], "adam_update() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.adam_update"]], "execute_with_gradients() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.execute_with_gradients"]], "grad() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.grad"]], "gradient_descent_update() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.gradient_descent_update"]], "ivy.functional.ivy.gradients": [[22, "module-ivy.functional.ivy.gradients"]], "jac() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.jac"]], "lamb_update() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.lamb_update"]], "lars_update() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.lars_update"]], "optimizer_update() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.optimizer_update"]], "set_with_grads() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.set_with_grads"]], "stop_gradient() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.stop_gradient"]], "unset_with_grads() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.unset_with_grads"]], "value_and_grad() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.value_and_grad"]], "with_grads() (in module ivy.functional.ivy.gradients)": [[22, "ivy.functional.ivy.gradients.with_grads"]], "conv() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv"]], "conv1d() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv1d"]], "conv1d_transpose() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv1d_transpose"]], "conv2d() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv2d"]], "conv2d_transpose() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv2d_transpose"]], "conv3d() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv3d"]], "conv3d_transpose() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv3d_transpose"]], "conv_general_dilated() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv_general_dilated"]], "conv_general_transpose() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.conv_general_transpose"]], "depthwise_conv2d() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.depthwise_conv2d"]], "dropout() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.dropout"]], "ivy.functional.ivy.layers": [[23, "module-ivy.functional.ivy.layers"]], "linear() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.linear"]], "lstm_update() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.lstm_update"]], "multi_head_attention() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.functional.ivy.layers)": [[23, "ivy.functional.ivy.layers.scaled_dot_product_attention"]], "cholesky() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.cholesky"]], "cross() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.cross"]], "det() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.det"]], "diag() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.diag"]], "diagonal() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.diagonal"]], "eig() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.eig"]], "eigh() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.eigh"]], "eigvalsh() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.eigvalsh"]], "inner() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.inner"]], "inv() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.inv"]], "ivy.functional.ivy.linear_algebra": [[24, "module-ivy.functional.ivy.linear_algebra"]], "lu_factor() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.lu_factor"]], "matmul() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.matmul"]], "matrix_norm() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.matrix_norm"]], "matrix_power() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.matrix_power"]], "matrix_rank() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.matrix_rank"]], "matrix_transpose() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.matrix_transpose"]], "outer() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.outer"]], "pinv() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.pinv"]], "qr() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.qr"]], "slogdet() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.slogdet"]], "solve() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.solve"]], "svd() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.svd"]], "svdvals() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.svdvals"]], "tensordot() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.tensordot"]], "tensorsolve() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.tensorsolve"]], "trace() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.trace"]], "vander() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.vander"]], "vecdot() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.vecdot"]], "vector_norm() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (in module ivy.functional.ivy.linear_algebra)": [[24, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"]], "binary_cross_entropy() (in module ivy.functional.ivy.losses)": [[25, "ivy.functional.ivy.losses.binary_cross_entropy"]], "cross_entropy() (in module ivy.functional.ivy.losses)": [[25, "ivy.functional.ivy.losses.cross_entropy"]], "ivy.functional.ivy.losses": [[25, "module-ivy.functional.ivy.losses"]], "sparse_cross_entropy() (in module ivy.functional.ivy.losses)": [[25, "ivy.functional.ivy.losses.sparse_cross_entropy"]], "clip() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.clip"]], "concat() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.concat"]], "constant_pad() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.constant_pad"]], "expand_dims() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.expand_dims"]], "flip() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.flip"]], "ivy.functional.ivy.manipulation": [[26, "module-ivy.functional.ivy.manipulation"]], "permute_dims() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.permute_dims"]], "repeat() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.repeat"]], "reshape() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.reshape"]], "roll() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.roll"]], "split() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.split"]], "squeeze() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.squeeze"]], "stack() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.stack"]], "swapaxes() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.swapaxes"]], "tile() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.tile"]], "unstack() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.unstack"]], "zero_pad() (in module ivy.functional.ivy.manipulation)": [[26, "ivy.functional.ivy.manipulation.zero_pad"]], "fomaml_step() (in module ivy.functional.ivy.meta)": [[27, "ivy.functional.ivy.meta.fomaml_step"]], "ivy.functional.ivy.meta": [[27, "module-ivy.functional.ivy.meta"]], "maml_step() (in module ivy.functional.ivy.meta)": [[27, "ivy.functional.ivy.meta.maml_step"]], "reptile_step() (in module ivy.functional.ivy.meta)": [[27, "ivy.functional.ivy.meta.reptile_step"]], "all_nested_indices() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.all_nested_indices"]], "copy_nest() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.copy_nest"]], "duplicate_array_index_chains() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.duplicate_array_index_chains"]], "index_nest() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.index_nest"]], "insert_into_nest_at_index() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.insert_into_nest_at_index"]], "insert_into_nest_at_indices() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.insert_into_nest_at_indices"]], "ivy.functional.ivy.nest": [[28, "module-ivy.functional.ivy.nest"]], "map() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.map"]], "map_nest_at_index() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.map_nest_at_index"]], "map_nest_at_indices() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.map_nest_at_indices"]], "multi_index_nest() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.multi_index_nest"]], "nested_any() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.nested_any"]], "nested_argwhere() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.nested_argwhere"]], "nested_map() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.nested_map"]], "nested_multi_map() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.nested_multi_map"]], "prune_empty() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.prune_empty"]], "prune_nest_at_index() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.prune_nest_at_index"]], "prune_nest_at_indices() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.prune_nest_at_indices"]], "set_nest_at_index() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.set_nest_at_index"]], "set_nest_at_indices() (in module ivy.functional.ivy.nest)": [[28, "ivy.functional.ivy.nest.set_nest_at_indices"]], "ivy.functional.ivy.norms": [[29, "module-ivy.functional.ivy.norms"]], "layer_norm() (in module ivy.functional.ivy.norms)": [[29, "ivy.functional.ivy.norms.layer_norm"]], "ivy.functional.ivy.random": [[30, "module-ivy.functional.ivy.random"]], "multinomial() (in module ivy.functional.ivy.random)": [[30, "ivy.functional.ivy.random.multinomial"]], "randint() (in module ivy.functional.ivy.random)": [[30, "ivy.functional.ivy.random.randint"]], "random_normal() (in module ivy.functional.ivy.random)": [[30, "ivy.functional.ivy.random.random_normal"]], "random_uniform() (in module ivy.functional.ivy.random)": [[30, "ivy.functional.ivy.random.random_uniform"]], "seed() (in module ivy.functional.ivy.random)": [[30, "ivy.functional.ivy.random.seed"]], "shuffle() (in module ivy.functional.ivy.random)": [[30, "ivy.functional.ivy.random.shuffle"]], "argmax() (in module ivy.functional.ivy.searching)": [[31, "ivy.functional.ivy.searching.argmax"]], "argmin() (in module ivy.functional.ivy.searching)": [[31, "ivy.functional.ivy.searching.argmin"]], "argwhere() (in module ivy.functional.ivy.searching)": [[31, "ivy.functional.ivy.searching.argwhere"]], "ivy.functional.ivy.searching": [[31, "module-ivy.functional.ivy.searching"]], "nonzero() (in module ivy.functional.ivy.searching)": [[31, "ivy.functional.ivy.searching.nonzero"]], "where() (in module ivy.functional.ivy.searching)": [[31, "ivy.functional.ivy.searching.where"]], "ivy.functional.ivy.set": [[32, "module-ivy.functional.ivy.set"]], "unique_all() (in module ivy.functional.ivy.set)": [[32, "ivy.functional.ivy.set.unique_all"]], "unique_counts() (in module ivy.functional.ivy.set)": [[32, "ivy.functional.ivy.set.unique_counts"]], "unique_inverse() (in module ivy.functional.ivy.set)": [[32, "ivy.functional.ivy.set.unique_inverse"]], "unique_values() (in module ivy.functional.ivy.set)": [[32, "ivy.functional.ivy.set.unique_values"]], "argsort() (in module ivy.functional.ivy.sorting)": [[33, "ivy.functional.ivy.sorting.argsort"]], "ivy.functional.ivy.sorting": [[33, "module-ivy.functional.ivy.sorting"]], "searchsorted() (in module ivy.functional.ivy.sorting)": [[33, "ivy.functional.ivy.sorting.searchsorted"]], "sort() (in module ivy.functional.ivy.sorting)": [[33, "ivy.functional.ivy.sorting.sort"]], "cumprod() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.cumprod"]], "cumsum() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.cumsum"]], "einsum() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.einsum"]], "ivy.functional.ivy.statistical": [[34, "module-ivy.functional.ivy.statistical"]], "max() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.max"]], "mean() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.mean"]], "min() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.min"]], "prod() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.prod"]], "std() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.std"]], "sum() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.sum"]], "var() (in module ivy.functional.ivy.statistical)": [[34, "ivy.functional.ivy.statistical.var"]], "all() (in module ivy.functional.ivy.utility)": [[35, "ivy.functional.ivy.utility.all"]], "any() (in module ivy.functional.ivy.utility)": [[35, "ivy.functional.ivy.utility.any"]], "ivy.functional.ivy.utility": [[35, "module-ivy.functional.ivy.utility"]], "nestedarray (class in ivy.nested_array.nested_array)": [[37, "ivy.nested_array.nested_array.NestedArray"]], "__init__() (ivy.nested_array.nested_array.nestedarray method)": [[37, "ivy.nested_array.nested_array.NestedArray.__init__"]], "data (ivy.nested_array.nested_array.nestedarray property)": [[37, "ivy.nested_array.nested_array.NestedArray.data"]], "device (ivy.nested_array.nested_array.nestedarray property)": [[37, "ivy.nested_array.nested_array.NestedArray.device"]], "dtype (ivy.nested_array.nested_array.nestedarray property)": [[37, "ivy.nested_array.nested_array.NestedArray.dtype"]], "from_row_lengths() (ivy.nested_array.nested_array.nestedarray class method)": [[37, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"]], "from_row_split() (ivy.nested_array.nested_array.nestedarray class method)": [[37, "ivy.nested_array.nested_array.NestedArray.from_row_split"]], "ivy.nested_array.nested_array": [[37, "module-ivy.nested_array.nested_array"]], "ndim (ivy.nested_array.nested_array.nestedarray property)": [[37, "ivy.nested_array.nested_array.NestedArray.ndim"]], "nested_array() (ivy.nested_array.nested_array.nestedarray class method)": [[37, "ivy.nested_array.nested_array.NestedArray.nested_array"]], "reshape() (ivy.nested_array.nested_array.nestedarray method)": [[37, "ivy.nested_array.nested_array.NestedArray.reshape"]], "shape (ivy.nested_array.nested_array.nestedarray property)": [[37, "ivy.nested_array.nested_array.NestedArray.shape"]], "unbind() (ivy.nested_array.nested_array.nestedarray method)": [[37, "ivy.nested_array.nested_array.NestedArray.unbind"]], "assert_all_close() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"]], "assert_same_type_and_shape() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"]], "check_unsupported_device() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"]], "check_unsupported_device_and_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"]], "check_unsupported_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"]], "ivy_tests.test_ivy.helpers.assertions": [[38, "module-ivy_tests.test_ivy.helpers.assertions"]], "test_unsupported_function() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"]], "value_test() (in module ivy_tests.test_ivy.helpers.assertions)": [[38, "ivy_tests.test_ivy.helpers.assertions.value_test"]], "available_frameworks() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[39, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"]], "ground_truth() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[39, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[39, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "args_to_container() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"]], "as_lists() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.as_lists"]], "compiled_if_required() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.compiled_if_required"]], "convtrue() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.convtrue"]], "create_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"]], "empty_func() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.empty_func"]], "flatten() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.flatten"]], "flatten_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"]], "flatten_fw_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"]], "framework_comparator() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"]], "get_frontend_ret() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"]], "get_ret_and_flattened_np_array() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"]], "gradient_incompatible_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"]], "gradient_test() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"]], "gradient_unsupported_dtypes() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"]], "ivy_tests.test_ivy.helpers.function_testing": [[40, "module-ivy_tests.test_ivy.helpers.function_testing"]], "kwargs_to_args_n_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"]], "make_json_pickable() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"]], "test_frontend_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"]], "test_frontend_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"]], "test_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.test_function"]], "test_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.test_method"]], "var_fn() (in module ivy_tests.test_ivy.helpers.function_testing)": [[40, "ivy_tests.test_ivy.helpers.function_testing.var_fn"]], "interruptedtest": [[41, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "testdata (class in ivy_tests.test_ivy.helpers.globals)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData"]], "__init__() (ivy_tests.test_ivy.helpers.globals.interruptedtest method)": [[41, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.globals.testdata method)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"]], "fn_name (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"]], "fn_tree (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"]], "is_method (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData.is_method"]], "ivy_tests.test_ivy.helpers.globals": [[41, "module-ivy_tests.test_ivy.helpers.globals"]], "remove_all_current_framework() (in module ivy_tests.test_ivy.helpers.globals)": [[41, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"]], "setup_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[41, "ivy_tests.test_ivy.helpers.globals.setup_api_test"]], "setup_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[41, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"]], "supported_device_dtypes (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"]], "teardown_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[41, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"]], "teardown_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[41, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"]], "test_fn (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[41, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[42, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "frontendmethoddata (class in ivy_tests.test_ivy.helpers.structs)": [[43, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"]], "__init__() (ivy_tests.test_ivy.helpers.structs.frontendmethoddata method)": [[43, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"]], "framework_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[43, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"]], "init_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[43, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"]], "ivy_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[43, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"]], "ivy_tests.test_ivy.helpers.structs": [[43, "module-ivy_tests.test_ivy.helpers.structs"]], "method_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[43, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"]], "frontendfunctiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"]], "frontendmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"]], "functiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"]], "initmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags"]], "methodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"]], "testflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.TestFlags"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.initmethodtestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.initmethodtestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.testflags method)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.TestFlags.apply_flags"]], "as_cont() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.as_cont"]], "build_flag() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"]], "frontend_function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"]], "frontend_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"]], "function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"]], "init_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.init_method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[44, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[44, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"]], "handle_frontend_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"]], "handle_frontend_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"]], "handle_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"]], "handle_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[45, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "num_positional_args() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"]], "num_positional_args_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"]], "seed() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[45, "ivy_tests.test_ivy.helpers.testing_helpers.seed"]], "check_all() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_all"]], "check_all_or_any_fn() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_all_or_any_fn"]], "check_any() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_any"]], "check_dimensions() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_dimensions"]], "check_elem_in_list() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_elem_in_list"]], "check_equal() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_equal"]], "check_exists() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_exists"]], "check_false() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_false"]], "check_fill_value_and_dtype_are_compatible() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_fill_value_and_dtype_are_compatible"]], "check_gather_input_valid() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_gather_input_valid"]], "check_gather_nd_input_valid() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_gather_nd_input_valid"]], "check_greater() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_greater"]], "check_inplace_sizes_valid() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_inplace_sizes_valid"]], "check_isinstance() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_isinstance"]], "check_kernel_padding_size() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_kernel_padding_size"]], "check_less() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_less"]], "check_one_way_broadcastable() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_one_way_broadcastable"]], "check_same_dtype() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_same_dtype"]], "check_shape() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_shape"]], "check_shapes_broadcastable() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_shapes_broadcastable"]], "check_true() (in module ivy.utils.assertions)": [[48, "ivy.utils.assertions.check_true"]], "ivy.utils.assertions": [[48, "module-ivy.utils.assertions"]], "ivy.utils.backend": [[49, "module-ivy.utils.backend"]], "import_module() (in module ivy.utils.dynamic_import)": [[50, "ivy.utils.dynamic_import.import_module"]], "ivy.utils.dynamic_import": [[50, "module-ivy.utils.dynamic_import"]], "ivybackendexception": [[51, "ivy.utils.exceptions.IvyBackendException"]], "ivyerror": [[51, "ivy.utils.exceptions.IvyError"]], "ivyexception": [[51, "ivy.utils.exceptions.IvyException"]], "ivynotimplementedexception": [[51, "ivy.utils.exceptions.IvyNotImplementedException"]], "__init__() (ivy.utils.exceptions.ivybackendexception method)": [[51, "ivy.utils.exceptions.IvyBackendException.__init__"]], "__init__() (ivy.utils.exceptions.ivyerror method)": [[51, "ivy.utils.exceptions.IvyError.__init__"]], "__init__() (ivy.utils.exceptions.ivyexception method)": [[51, "ivy.utils.exceptions.IvyException.__init__"]], "__init__() (ivy.utils.exceptions.ivynotimplementedexception method)": [[51, "ivy.utils.exceptions.IvyNotImplementedException.__init__"]], "handle_exceptions() (in module ivy.utils.exceptions)": [[51, "ivy.utils.exceptions.handle_exceptions"]], "ivy.utils.exceptions": [[51, "module-ivy.utils.exceptions"]], "add_array_specs() (in module ivy.utils.inspection)": [[52, "ivy.utils.inspection.add_array_specs"]], "fn_array_spec() (in module ivy.utils.inspection)": [[52, "ivy.utils.inspection.fn_array_spec"]], "ivy.utils.inspection": [[52, "module-ivy.utils.inspection"]], "cprint() (in module ivy.utils.verbosity)": [[53, "ivy.utils.verbosity.cprint"]], "ivy.utils.verbosity": [[53, "module-ivy.utils.verbosity"]], "applied libraries": [[97, "term-Applied-Libraries"]], "automatic code conversions": [[97, "term-Automatic-Code-Conversions"]], "backend handler": [[97, "term-Backend-Handler"]], "compositional functions": [[97, "term-Compositional-Functions"]], "convenience functions": [[97, "term-Convenience-Functions"]], "framework": [[97, "term-Framework"]], "framework handler": [[97, "term-Framework-Handler"]], "graph compiler": [[97, "term-Graph-Compiler"]], "ivy array": [[97, "term-Ivy-Array"]], "ivy backends": [[97, "term-Ivy-Backends"]], "ivy builder": [[97, "term-Ivy-Builder"]], "ivy compiler": [[97, "term-Ivy-Compiler"]], "ivy container": [[97, "term-Ivy-Container"]], "ivy frontends": [[97, "term-Ivy-Frontends"]], "ivy functional api": [[97, "term-Ivy-Functional-API"]], "ivy graph compiler": [[97, "term-Ivy-Graph-Compiler"]], "ivy transpiler": [[97, "term-Ivy-Transpiler"]], "mixed functions": [[97, "term-Mixed-Functions"]], "native array": [[97, "term-Native-Array"]], "nestable functions": [[97, "term-Nestable-Functions"]], "pipeline": [[97, "term-Pipeline"]], "primary functions": [[97, "term-Primary-Functions"]], "standalone functions": [[97, "term-Standalone-Functions"]], "submodule helper functions": [[97, "term-Submodule-Helper-Functions"]]}})